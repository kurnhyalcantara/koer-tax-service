// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: account-service/account_payload.proto

package pb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *GetUserApprovedAndCreatedResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *DataGetUserApprovedAndCreatedResponse) Validate() error {
	return nil
}
func (this *ListAccountTaskV2Request) Validate() error {
	if this.Filter != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Filter); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Filter", err)
		}
	}
	return nil
}
func (this *DeleteAccountRoleRequest) Validate() error {
	return nil
}
func (this *DeleteAccountRoleResponse) Validate() error {
	return nil
}
func (this *ValidateNameAliasAccountRequest) Validate() error {
	return nil
}
func (this *ValidateNameAliasAccountResponse) Validate() error {
	return nil
}
func (this *LoginRequest) Validate() error {
	return nil
}
func (this *LoginResponse) Validate() error {
	return nil
}
func (this *HealthCheckResponse) Validate() error {
	return nil
}
func (this *Empty) Validate() error {
	return nil
}
func (this *InvalidKeyError) Validate() error {
	return nil
}
func (this *JWTTokenResponse) Validate() error {
	return nil
}
func (this *ListRequest) Validate() error {
	return nil
}
func (this *ListAccountRequest) Validate() error {
	if this.Account != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Account); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Account", err)
		}
	}
	return nil
}
func (this *Sort) Validate() error {
	return nil
}
func (this *MyAllowedAccountRequest) Validate() error {
	return nil
}
func (this *MyAllowedAccountResponse) Validate() error {
	return nil
}
func (this *ListAccountResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *ListAccountActiveResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *CreateAccountRequest) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *CreateAccountTaskRequest) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *CreateAccountBatchTaskRequest) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *AccountWrite) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	if this.DeletedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeletedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeletedAt", err)
		}
	}
	return nil
}
func (this *CreateAccountTaskBulkRequest) Validate() error {
	for _, item := range this.Accounts {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Accounts", err)
			}
		}
	}
	return nil
}
func (this *AccountAlias) Validate() error {
	return nil
}
func (this *CreateAccountResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *DeleteAccountResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *Task) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *AccountTaskData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	if this.DeletedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeletedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeletedAt", err)
		}
	}
	return nil
}
func (this *AccountTaskDataString) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	if this.DeletedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeletedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeletedAt", err)
		}
	}
	return nil
}
func (this *AccountTask) Validate() error {
	if this.Account != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Account); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Account", err)
		}
	}
	if this.Task != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Task); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Task", err)
		}
	}
	for _, item := range this.Accounts {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Accounts", err)
			}
		}
	}
	if this.Company != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Company); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Company", err)
		}
	}
	return nil
}
func (this *CompanyData) Validate() error {
	return nil
}
func (this *CreateAccountTaskResponse) Validate() error {
	return nil
}
func (this *CreateAccountTaskMultipleResponse) Validate() error {
	return nil
}
func (this *ListAccountTaskRequest) Validate() error {
	return nil
}
func (this *GetAccountTaskByIDRequest) Validate() error {
	return nil
}
func (this *ListAccountTaskResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *ErrorBodyResponse) Validate() error {
	return nil
}
func (this *AccountDetailRequest) Validate() error {
	return nil
}
func (this *AccountDetailResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *UpdateAccountRoleRequest) Validate() error {
	return nil
}
func (this *UpdateAccountRoleResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *FileListTemplateRequest) Validate() error {
	return nil
}
func (this *FileListAccountTaskRequest) Validate() error {
	if this.Filter != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Filter); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Filter", err)
		}
	}
	return nil
}
func (this *CekAccountAvaibilityReq) Validate() error {
	return nil
}
func (this *CekAccountAvaibilityRes) Validate() error {
	return nil
}
func (this *CekAccountUsedRes) Validate() error {
	return nil
}
func (this *AccountNotificationData) Validate() error {
	return nil
}
func (this *ListAccountByRoleRPCRequest) Validate() error {
	if this.Account != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Account); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Account", err)
		}
	}
	return nil
}
func (this *ValidateAccountByCIFRequest) Validate() error {
	return nil
}
func (this *ValidateAccountByCIFResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *ValidateAccountByCIFResponse_Response) Validate() error {
	return nil
}
func (this *ValidateAccountByAccountNumberRequest) Validate() error {
	return nil
}
func (this *ValidateAccountByAccountNumberResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *ValidateAccountByAccountNumberResponse_Response) Validate() error {
	return nil
}
func (this *AccountsByUserIdRequest) Validate() error {
	return nil
}
func (this *QlolaAccountByUserId) Validate() error {
	return nil
}
func (this *QlolaListAccountByUserIDResponse) Validate() error {
	for _, item := range this.AccountList {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AccountList", err)
			}
		}
	}
	return nil
}
func (this *QlolaListAccountBrigateResponse) Validate() error {
	if this.ResponseData != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ResponseData); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ResponseData", err)
		}
	}
	return nil
}
func (this *ResponseData) Validate() error {
	for _, item := range this.AccountList {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AccountList", err)
			}
		}
	}
	return nil
}
func (this *QlolaGetBankAccountCompanyRequest) Validate() error {
	return nil
}
func (this *QlolaGetBankAccount) Validate() error {
	return nil
}
func (this *QlolaBankAccountCompanyBrigateResponse) Validate() error {
	if this.ResponseData != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ResponseData); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ResponseData", err)
		}
	}
	return nil
}
func (this *ValidateAccountUklnDataResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *ValidateAccountUklnDataResponse_Response) Validate() error {
	return nil
}
func (this *BrigateAccessTokenRequest) Validate() error {
	return nil
}
func (this *GetTokenResponse) Validate() error {
	return nil
}
func (this *InquiryAccountRequest) Validate() error {
	return nil
}
func (this *InquiryAccount) Validate() error {
	return nil
}
func (this *InquiryAccountData) Validate() error {
	for _, item := range this.InquiryAccount {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("InquiryAccount", err)
			}
		}
	}
	return nil
}
func (this *InquiryAccountResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *ValidateAccountWithoutSessionRequest) Validate() error {
	return nil
}
func (this *ValidateAccountRequest) Validate() error {
	return nil
}
func (this *ValidateAccountResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *ValidateAccountResponse_Response) Validate() error {
	return nil
}
func (this *ValidateAccountDataResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *ValidateAccountDataResponse_Response) Validate() error {
	return nil
}
func (this *TempGenToken) Validate() error {
	return nil
}
func (this *GetRDNAccountByRoleRequest) Validate() error {
	return nil
}
func (this *GetRDNAccountByUserRoleRequest) Validate() error {
	return nil
}
func (this *GetRDNAccountByUserRoleResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *GetRDNAccountByRoleResponseData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.DeletedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeletedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeletedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *GetRDNAccountByRoleResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *GetRDNAccountRequest) Validate() error {
	if this.SearchCriteria != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SearchCriteria); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SearchCriteria", err)
		}
	}
	return nil
}
func (this *RDNAccountSearchCriteria) Validate() error {
	return nil
}
func (this *GetRDNAccountResponseData) Validate() error {
	if this.LastUpdated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LastUpdated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LastUpdated", err)
		}
	}
	return nil
}
func (this *GetRDNAccountResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *InsertRDNAccountRequest) Validate() error {
	if this.RdnBankAccount != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RdnBankAccount); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RdnBankAccount", err)
		}
	}
	return nil
}
func (this *RDNBankAccountData) Validate() error {
	return nil
}
func (this *InsertRDNAccountResponse) Validate() error {
	return nil
}
func (this *GlobalRequest) Validate() error {
	return nil
}
func (this *SubmitFileResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *SubmitFileResponseData) Validate() error {
	return nil
}
func (this *CreateUploadRequest) Validate() error {
	return nil
}
func (this *FileUploadsData) Validate() error {
	if this.FileInfo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.FileInfo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("FileInfo", err)
		}
	}
	if this.DataInfo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DataInfo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DataInfo", err)
		}
	}
	return nil
}
func (this *FileDetailMinio) Validate() error {
	if this.ObjectInfo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ObjectInfo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ObjectInfo", err)
		}
	}
	return nil
}
func (this *MinioObjectInfo) Validate() error {
	if this.LastModified != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LastModified); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LastModified", err)
		}
	}
	if this.Expiration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Expiration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Expiration", err)
		}
	}
	return nil
}
func (this *GetListBatchResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *GetListBatchRequest) Validate() error {
	if this.Filter != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Filter); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Filter", err)
		}
	}
	return nil
}
func (this *UploadAccountBatchData) Validate() error {
	return nil
}
func (this *CheckFileNameRequest) Validate() error {
	return nil
}
func (this *CheckFileNameResponse) Validate() error {
	return nil
}
func (this *GetDetailBatchRequest) Validate() error {
	return nil
}
func (this *GetDetailBatchData) Validate() error {
	if this.StatusApp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StatusApp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StatusApp", err)
		}
	}
	return nil
}
func (this *StatusApproval) Validate() error {
	return nil
}
func (this *GetDetailBatchResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *GetDetailAccountRequest) Validate() error {
	if this.Filter != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Filter); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Filter", err)
		}
	}
	return nil
}
func (this *GetDetailAccountResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *AccountDetailData) Validate() error {
	return nil
}
func (this *ApproveBatchAccountRequest) Validate() error {
	if this.User != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.User); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("User", err)
		}
	}
	return nil
}
func (this *ApproveBatchAccountResponse) Validate() error {
	return nil
}
func (this *TaskIds) Validate() error {
	return nil
}
func (this *UserDataMD) Validate() error {
	return nil
}
func (this *UpdateStatusAccountBatchRequest) Validate() error {
	return nil
}
func (this *UpdateStatusAccountBatchResponse) Validate() error {
	return nil
}
func (this *StatusCount) Validate() error {
	return nil
}
func (this *MyAllowedAccountByProductsRequest) Validate() error {
	return nil
}
func (this *MyAllowedAccountByProductsResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *MyAllowedAccountByProductsResponseData) Validate() error {
	return nil
}
func (this *ListAccountByRoleRPCWithCacheRequest) Validate() error {
	if this.Account != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Account); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Account", err)
		}
	}
	return nil
}
func (this *GetRDNAccountByRoleRPCRequest) Validate() error {
	if this.RdnBankAccount != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RdnBankAccount); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RdnBankAccount", err)
		}
	}
	return nil
}
func (this *GetRDNAccountByRoleRPCResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *GetRDNAccountByRoleRPCResponseData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.DeletedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeletedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeletedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *GetRDNAccountIdsGeneralQueryRequest) Validate() error {
	if this.RdnBankAccount != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RdnBankAccount); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RdnBankAccount", err)
		}
	}
	return nil
}
func (this *GetRDNAccountIdsGeneralQueryResponse) Validate() error {
	if this.LastUpdated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LastUpdated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LastUpdated", err)
		}
	}
	return nil
}
func (this *DeleteAccountByCompanyIdRPCRequest) Validate() error {
	return nil
}
func (this *GetListAccountRolesRequest) Validate() error {
	return nil
}
func (this *GetListAccountRolesResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *CreateAccountTaskRPCRequest) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	if this.User != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.User); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("User", err)
		}
	}
	return nil
}
func (this *UserNonSession) Validate() error {
	return nil
}
func (this *GetListAccountRoleIDsRequest) Validate() error {
	return nil
}
func (this *GetListAccountRoleIDsResponse) Validate() error {
	return nil
}
func (this *SendNotifQueueRequest) Validate() error {
	return nil
}
func (this *SendNotificationAccountRPCResponse) Validate() error {
	return nil
}
