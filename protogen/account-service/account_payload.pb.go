// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        v3.20.3
// source: account-service/account_payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApiType int32

const (
	ApiType_GET_TOKEN     ApiType = 0
	ApiType_INTROSPECT    ApiType = 1
	ApiType_REFRESH_TOKEN ApiType = 2
	ApiType_INQUIRY       ApiType = 3
	ApiType_BRIGATE_TOKEN ApiType = 4
)

// Enum value maps for ApiType.
var (
	ApiType_name = map[int32]string{
		0: "GET_TOKEN",
		1: "INTROSPECT",
		2: "REFRESH_TOKEN",
		3: "INQUIRY",
		4: "BRIGATE_TOKEN",
	}
	ApiType_value = map[string]int32{
		"GET_TOKEN":     0,
		"INTROSPECT":    1,
		"REFRESH_TOKEN": 2,
		"INQUIRY":       3,
		"BRIGATE_TOKEN": 4,
	}
)

func (x ApiType) Enum() *ApiType {
	p := new(ApiType)
	*p = x
	return p
}

func (x ApiType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiType) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[0].Descriptor()
}

func (ApiType) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[0]
}

func (x ApiType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiType.Descriptor instead.
func (ApiType) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{0}
}

type ListAccountTaskV2RequestStatuses int32

const (
	ListAccountTaskV2Request_AllStatus     ListAccountTaskV2RequestStatuses = 0
	ListAccountTaskV2Request_Pending       ListAccountTaskV2RequestStatuses = 1
	ListAccountTaskV2Request_Draft         ListAccountTaskV2RequestStatuses = 2
	ListAccountTaskV2Request_Returned      ListAccountTaskV2RequestStatuses = 3
	ListAccountTaskV2Request_Approved      ListAccountTaskV2RequestStatuses = 4
	ListAccountTaskV2Request_Rejected      ListAccountTaskV2RequestStatuses = 5
	ListAccountTaskV2Request_DeleteRequest ListAccountTaskV2RequestStatuses = 6
	ListAccountTaskV2Request_Deleted       ListAccountTaskV2RequestStatuses = 7
)

// Enum value maps for ListAccountTaskV2RequestStatuses.
var (
	ListAccountTaskV2RequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
		6: "DeleteRequest",
		7: "Deleted",
	}
	ListAccountTaskV2RequestStatuses_value = map[string]int32{
		"AllStatus":     0,
		"Pending":       1,
		"Draft":         2,
		"Returned":      3,
		"Approved":      4,
		"Rejected":      5,
		"DeleteRequest": 6,
		"Deleted":       7,
	}
)

func (x ListAccountTaskV2RequestStatuses) Enum() *ListAccountTaskV2RequestStatuses {
	p := new(ListAccountTaskV2RequestStatuses)
	*p = x
	return p
}

func (x ListAccountTaskV2RequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountTaskV2RequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[1].Descriptor()
}

func (ListAccountTaskV2RequestStatuses) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[1]
}

func (x ListAccountTaskV2RequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountTaskV2RequestStatuses.Descriptor instead.
func (ListAccountTaskV2RequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{2, 0}
}

type ListAccountTaskV2RequestSteps int32

const (
	ListAccountTaskV2Request_AllStep  ListAccountTaskV2RequestSteps = 0
	ListAccountTaskV2Request_Maker    ListAccountTaskV2RequestSteps = 1
	ListAccountTaskV2Request_Checker  ListAccountTaskV2RequestSteps = 2
	ListAccountTaskV2Request_Signer   ListAccountTaskV2RequestSteps = 3
	ListAccountTaskV2Request_Releaser ListAccountTaskV2RequestSteps = 4
)

// Enum value maps for ListAccountTaskV2RequestSteps.
var (
	ListAccountTaskV2RequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	ListAccountTaskV2RequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x ListAccountTaskV2RequestSteps) Enum() *ListAccountTaskV2RequestSteps {
	p := new(ListAccountTaskV2RequestSteps)
	*p = x
	return p
}

func (x ListAccountTaskV2RequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountTaskV2RequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[2].Descriptor()
}

func (ListAccountTaskV2RequestSteps) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[2]
}

func (x ListAccountTaskV2RequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountTaskV2RequestSteps.Descriptor instead.
func (ListAccountTaskV2RequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{2, 1}
}

type ListAccountTaskV2Request_Sort int32

const (
	ListAccountTaskV2Request_companyID     ListAccountTaskV2Request_Sort = 0
	ListAccountTaskV2Request_loginCode     ListAccountTaskV2Request_Sort = 1
	ListAccountTaskV2Request_companyName   ListAccountTaskV2Request_Sort = 2
	ListAccountTaskV2Request_countryCode   ListAccountTaskV2Request_Sort = 3
	ListAccountTaskV2Request_accountName   ListAccountTaskV2Request_Sort = 4
	ListAccountTaskV2Request_accountNumber ListAccountTaskV2Request_Sort = 5
	ListAccountTaskV2Request_currency      ListAccountTaskV2Request_Sort = 6
	ListAccountTaskV2Request_createdTime   ListAccountTaskV2Request_Sort = 7
	ListAccountTaskV2Request_createdBy     ListAccountTaskV2Request_Sort = 8
	ListAccountTaskV2Request_approvedBy    ListAccountTaskV2Request_Sort = 9
	ListAccountTaskV2Request_status        ListAccountTaskV2Request_Sort = 10
	ListAccountTaskV2Request_approvedAt    ListAccountTaskV2Request_Sort = 11
	ListAccountTaskV2Request_countryName   ListAccountTaskV2Request_Sort = 12
)

// Enum value maps for ListAccountTaskV2Request_Sort.
var (
	ListAccountTaskV2Request_Sort_name = map[int32]string{
		0:  "companyID",
		1:  "loginCode",
		2:  "companyName",
		3:  "countryCode",
		4:  "accountName",
		5:  "accountNumber",
		6:  "currency",
		7:  "createdTime",
		8:  "createdBy",
		9:  "approvedBy",
		10: "status",
		11: "approvedAt",
		12: "countryName",
	}
	ListAccountTaskV2Request_Sort_value = map[string]int32{
		"companyID":     0,
		"loginCode":     1,
		"companyName":   2,
		"countryCode":   3,
		"accountName":   4,
		"accountNumber": 5,
		"currency":      6,
		"createdTime":   7,
		"createdBy":     8,
		"approvedBy":    9,
		"status":        10,
		"approvedAt":    11,
		"countryName":   12,
	}
)

func (x ListAccountTaskV2Request_Sort) Enum() *ListAccountTaskV2Request_Sort {
	p := new(ListAccountTaskV2Request_Sort)
	*p = x
	return p
}

func (x ListAccountTaskV2Request_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountTaskV2Request_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[3].Descriptor()
}

func (ListAccountTaskV2Request_Sort) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[3]
}

func (x ListAccountTaskV2Request_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountTaskV2Request_Sort.Descriptor instead.
func (ListAccountTaskV2Request_Sort) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{2, 2}
}

type ListAccountTaskV2RequestDirection int32

const (
	ListAccountTaskV2Request_DESC ListAccountTaskV2RequestDirection = 0
	ListAccountTaskV2Request_ASC  ListAccountTaskV2RequestDirection = 1
)

// Enum value maps for ListAccountTaskV2RequestDirection.
var (
	ListAccountTaskV2RequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListAccountTaskV2RequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListAccountTaskV2RequestDirection) Enum() *ListAccountTaskV2RequestDirection {
	p := new(ListAccountTaskV2RequestDirection)
	*p = x
	return p
}

func (x ListAccountTaskV2RequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountTaskV2RequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[4].Descriptor()
}

func (ListAccountTaskV2RequestDirection) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[4]
}

func (x ListAccountTaskV2RequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountTaskV2RequestDirection.Descriptor instead.
func (ListAccountTaskV2RequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{2, 3}
}

type ListAccountRequestDirection int32

const (
	ListAccountRequest_DESC ListAccountRequestDirection = 0
	ListAccountRequest_ASC  ListAccountRequestDirection = 1
)

// Enum value maps for ListAccountRequestDirection.
var (
	ListAccountRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListAccountRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListAccountRequestDirection) Enum() *ListAccountRequestDirection {
	p := new(ListAccountRequestDirection)
	*p = x
	return p
}

func (x ListAccountRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[5].Descriptor()
}

func (ListAccountRequestDirection) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[5]
}

func (x ListAccountRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountRequestDirection.Descriptor instead.
func (ListAccountRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{14, 0}
}

type ListAccountTaskRequestStatuses int32

const (
	ListAccountTaskRequest_AllStatus ListAccountTaskRequestStatuses = 0
	ListAccountTaskRequest_Pending   ListAccountTaskRequestStatuses = 1
	ListAccountTaskRequest_Draft     ListAccountTaskRequestStatuses = 2
	ListAccountTaskRequest_Returned  ListAccountTaskRequestStatuses = 3
	ListAccountTaskRequest_Approved  ListAccountTaskRequestStatuses = 4
	ListAccountTaskRequest_Rejected  ListAccountTaskRequestStatuses = 5
)

// Enum value maps for ListAccountTaskRequestStatuses.
var (
	ListAccountTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	ListAccountTaskRequestStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x ListAccountTaskRequestStatuses) Enum() *ListAccountTaskRequestStatuses {
	p := new(ListAccountTaskRequestStatuses)
	*p = x
	return p
}

func (x ListAccountTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[6].Descriptor()
}

func (ListAccountTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[6]
}

func (x ListAccountTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountTaskRequestStatuses.Descriptor instead.
func (ListAccountTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{35, 0}
}

type ListAccountTaskRequestSteps int32

const (
	ListAccountTaskRequest_AllStep  ListAccountTaskRequestSteps = 0
	ListAccountTaskRequest_Maker    ListAccountTaskRequestSteps = 1
	ListAccountTaskRequest_Checker  ListAccountTaskRequestSteps = 2
	ListAccountTaskRequest_Signer   ListAccountTaskRequestSteps = 3
	ListAccountTaskRequest_Releaser ListAccountTaskRequestSteps = 4
)

// Enum value maps for ListAccountTaskRequestSteps.
var (
	ListAccountTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	ListAccountTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x ListAccountTaskRequestSteps) Enum() *ListAccountTaskRequestSteps {
	p := new(ListAccountTaskRequestSteps)
	*p = x
	return p
}

func (x ListAccountTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[7].Descriptor()
}

func (ListAccountTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[7]
}

func (x ListAccountTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountTaskRequestSteps.Descriptor instead.
func (ListAccountTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{35, 1}
}

type ListAccountTaskRequestDirection int32

const (
	ListAccountTaskRequest_DESC ListAccountTaskRequestDirection = 0
	ListAccountTaskRequest_ASC  ListAccountTaskRequestDirection = 1
)

// Enum value maps for ListAccountTaskRequestDirection.
var (
	ListAccountTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListAccountTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListAccountTaskRequestDirection) Enum() *ListAccountTaskRequestDirection {
	p := new(ListAccountTaskRequestDirection)
	*p = x
	return p
}

func (x ListAccountTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[8].Descriptor()
}

func (ListAccountTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[8]
}

func (x ListAccountTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountTaskRequestDirection.Descriptor instead.
func (ListAccountTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{35, 2}
}

type FileListTemplateRequest_FormatTemplates int32

const (
	FileListTemplateRequest_null FileListTemplateRequest_FormatTemplates = 0
	FileListTemplateRequest_csv  FileListTemplateRequest_FormatTemplates = 1
	FileListTemplateRequest_xls  FileListTemplateRequest_FormatTemplates = 2
	FileListTemplateRequest_xlsx FileListTemplateRequest_FormatTemplates = 3
)

// Enum value maps for FileListTemplateRequest_FormatTemplates.
var (
	FileListTemplateRequest_FormatTemplates_name = map[int32]string{
		0: "null",
		1: "csv",
		2: "xls",
		3: "xlsx",
	}
	FileListTemplateRequest_FormatTemplates_value = map[string]int32{
		"null": 0,
		"csv":  1,
		"xls":  2,
		"xlsx": 3,
	}
)

func (x FileListTemplateRequest_FormatTemplates) Enum() *FileListTemplateRequest_FormatTemplates {
	p := new(FileListTemplateRequest_FormatTemplates)
	*p = x
	return p
}

func (x FileListTemplateRequest_FormatTemplates) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListTemplateRequest_FormatTemplates) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[9].Descriptor()
}

func (FileListTemplateRequest_FormatTemplates) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[9]
}

func (x FileListTemplateRequest_FormatTemplates) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListTemplateRequest_FormatTemplates.Descriptor instead.
func (FileListTemplateRequest_FormatTemplates) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{43, 0}
}

type FileListAccountTaskRequest_Formats int32

const (
	FileListAccountTaskRequest_null FileListAccountTaskRequest_Formats = 0
	FileListAccountTaskRequest_pdf  FileListAccountTaskRequest_Formats = 1
	FileListAccountTaskRequest_xls  FileListAccountTaskRequest_Formats = 2
	FileListAccountTaskRequest_csv  FileListAccountTaskRequest_Formats = 3
)

// Enum value maps for FileListAccountTaskRequest_Formats.
var (
	FileListAccountTaskRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	FileListAccountTaskRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x FileListAccountTaskRequest_Formats) Enum() *FileListAccountTaskRequest_Formats {
	p := new(FileListAccountTaskRequest_Formats)
	*p = x
	return p
}

func (x FileListAccountTaskRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListAccountTaskRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[10].Descriptor()
}

func (FileListAccountTaskRequest_Formats) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[10]
}

func (x FileListAccountTaskRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListAccountTaskRequest_Formats.Descriptor instead.
func (FileListAccountTaskRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{44, 0}
}

type FileListAccountTaskRequestStatuses int32

const (
	FileListAccountTaskRequest_AllStatus     FileListAccountTaskRequestStatuses = 0
	FileListAccountTaskRequest_Pending       FileListAccountTaskRequestStatuses = 1
	FileListAccountTaskRequest_Draft         FileListAccountTaskRequestStatuses = 2
	FileListAccountTaskRequest_Returned      FileListAccountTaskRequestStatuses = 3
	FileListAccountTaskRequest_Approved      FileListAccountTaskRequestStatuses = 4
	FileListAccountTaskRequest_Rejected      FileListAccountTaskRequestStatuses = 5
	FileListAccountTaskRequest_DeleteRequest FileListAccountTaskRequestStatuses = 6
	FileListAccountTaskRequest_Deleted       FileListAccountTaskRequestStatuses = 7
)

// Enum value maps for FileListAccountTaskRequestStatuses.
var (
	FileListAccountTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
		6: "DeleteRequest",
		7: "Deleted",
	}
	FileListAccountTaskRequestStatuses_value = map[string]int32{
		"AllStatus":     0,
		"Pending":       1,
		"Draft":         2,
		"Returned":      3,
		"Approved":      4,
		"Rejected":      5,
		"DeleteRequest": 6,
		"Deleted":       7,
	}
)

func (x FileListAccountTaskRequestStatuses) Enum() *FileListAccountTaskRequestStatuses {
	p := new(FileListAccountTaskRequestStatuses)
	*p = x
	return p
}

func (x FileListAccountTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListAccountTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[11].Descriptor()
}

func (FileListAccountTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[11]
}

func (x FileListAccountTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListAccountTaskRequestStatuses.Descriptor instead.
func (FileListAccountTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{44, 1}
}

type FileListAccountTaskRequestSteps int32

const (
	FileListAccountTaskRequest_AllStep  FileListAccountTaskRequestSteps = 0
	FileListAccountTaskRequest_Maker    FileListAccountTaskRequestSteps = 1
	FileListAccountTaskRequest_Checker  FileListAccountTaskRequestSteps = 2
	FileListAccountTaskRequest_Signer   FileListAccountTaskRequestSteps = 3
	FileListAccountTaskRequest_Releaser FileListAccountTaskRequestSteps = 4
)

// Enum value maps for FileListAccountTaskRequestSteps.
var (
	FileListAccountTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	FileListAccountTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x FileListAccountTaskRequestSteps) Enum() *FileListAccountTaskRequestSteps {
	p := new(FileListAccountTaskRequestSteps)
	*p = x
	return p
}

func (x FileListAccountTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListAccountTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[12].Descriptor()
}

func (FileListAccountTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[12]
}

func (x FileListAccountTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListAccountTaskRequestSteps.Descriptor instead.
func (FileListAccountTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{44, 2}
}

type FileListAccountTaskRequest_Sort int32

const (
	FileListAccountTaskRequest_companyID     FileListAccountTaskRequest_Sort = 0
	FileListAccountTaskRequest_loginCode     FileListAccountTaskRequest_Sort = 1
	FileListAccountTaskRequest_companyName   FileListAccountTaskRequest_Sort = 2
	FileListAccountTaskRequest_countryCode   FileListAccountTaskRequest_Sort = 3
	FileListAccountTaskRequest_accountName   FileListAccountTaskRequest_Sort = 4
	FileListAccountTaskRequest_accountNumber FileListAccountTaskRequest_Sort = 5
	FileListAccountTaskRequest_currency      FileListAccountTaskRequest_Sort = 6
	FileListAccountTaskRequest_createdTime   FileListAccountTaskRequest_Sort = 7
	FileListAccountTaskRequest_createdBy     FileListAccountTaskRequest_Sort = 8
	FileListAccountTaskRequest_approvedBy    FileListAccountTaskRequest_Sort = 9
	FileListAccountTaskRequest_status        FileListAccountTaskRequest_Sort = 10
	FileListAccountTaskRequest_approvedAt    FileListAccountTaskRequest_Sort = 11
	FileListAccountTaskRequest_countryName   FileListAccountTaskRequest_Sort = 12
)

// Enum value maps for FileListAccountTaskRequest_Sort.
var (
	FileListAccountTaskRequest_Sort_name = map[int32]string{
		0:  "companyID",
		1:  "loginCode",
		2:  "companyName",
		3:  "countryCode",
		4:  "accountName",
		5:  "accountNumber",
		6:  "currency",
		7:  "createdTime",
		8:  "createdBy",
		9:  "approvedBy",
		10: "status",
		11: "approvedAt",
		12: "countryName",
	}
	FileListAccountTaskRequest_Sort_value = map[string]int32{
		"companyID":     0,
		"loginCode":     1,
		"companyName":   2,
		"countryCode":   3,
		"accountName":   4,
		"accountNumber": 5,
		"currency":      6,
		"createdTime":   7,
		"createdBy":     8,
		"approvedBy":    9,
		"status":        10,
		"approvedAt":    11,
		"countryName":   12,
	}
)

func (x FileListAccountTaskRequest_Sort) Enum() *FileListAccountTaskRequest_Sort {
	p := new(FileListAccountTaskRequest_Sort)
	*p = x
	return p
}

func (x FileListAccountTaskRequest_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListAccountTaskRequest_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[13].Descriptor()
}

func (FileListAccountTaskRequest_Sort) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[13]
}

func (x FileListAccountTaskRequest_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListAccountTaskRequest_Sort.Descriptor instead.
func (FileListAccountTaskRequest_Sort) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{44, 3}
}

type FileListAccountTaskRequestDirection int32

const (
	FileListAccountTaskRequest_DESC FileListAccountTaskRequestDirection = 0
	FileListAccountTaskRequest_ASC  FileListAccountTaskRequestDirection = 1
)

// Enum value maps for FileListAccountTaskRequestDirection.
var (
	FileListAccountTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	FileListAccountTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x FileListAccountTaskRequestDirection) Enum() *FileListAccountTaskRequestDirection {
	p := new(FileListAccountTaskRequestDirection)
	*p = x
	return p
}

func (x FileListAccountTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListAccountTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[14].Descriptor()
}

func (FileListAccountTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[14]
}

func (x FileListAccountTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListAccountTaskRequestDirection.Descriptor instead.
func (FileListAccountTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{44, 4}
}

type ListAccountByRoleRPCRequestDirection int32

const (
	ListAccountByRoleRPCRequest_DESC ListAccountByRoleRPCRequestDirection = 0
	ListAccountByRoleRPCRequest_ASC  ListAccountByRoleRPCRequestDirection = 1
)

// Enum value maps for ListAccountByRoleRPCRequestDirection.
var (
	ListAccountByRoleRPCRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListAccountByRoleRPCRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListAccountByRoleRPCRequestDirection) Enum() *ListAccountByRoleRPCRequestDirection {
	p := new(ListAccountByRoleRPCRequestDirection)
	*p = x
	return p
}

func (x ListAccountByRoleRPCRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountByRoleRPCRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[15].Descriptor()
}

func (ListAccountByRoleRPCRequestDirection) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[15]
}

func (x ListAccountByRoleRPCRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountByRoleRPCRequestDirection.Descriptor instead.
func (ListAccountByRoleRPCRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{49, 0}
}

type TempGenToken_Role int32

const (
	TempGenToken_bankadmin    TempGenToken_Role = 0
	TempGenToken_companyadmin TempGenToken_Role = 1
	TempGenToken_companyuser  TempGenToken_Role = 2
)

// Enum value maps for TempGenToken_Role.
var (
	TempGenToken_Role_name = map[int32]string{
		0: "bankadmin",
		1: "companyadmin",
		2: "companyuser",
	}
	TempGenToken_Role_value = map[string]int32{
		"bankadmin":    0,
		"companyadmin": 1,
		"companyuser":  2,
	}
)

func (x TempGenToken_Role) Enum() *TempGenToken_Role {
	p := new(TempGenToken_Role)
	*p = x
	return p
}

func (x TempGenToken_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TempGenToken_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[16].Descriptor()
}

func (TempGenToken_Role) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[16]
}

func (x TempGenToken_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TempGenToken_Role.Descriptor instead.
func (TempGenToken_Role) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{73, 0}
}

type GetListBatchRequest_Sort int32

const (
	GetListBatchRequest_batchID          GetListBatchRequest_Sort = 0
	GetListBatchRequest_companyName      GetListBatchRequest_Sort = 1
	GetListBatchRequest_fileDescription  GetListBatchRequest_Sort = 2
	GetListBatchRequest_fileFormat       GetListBatchRequest_Sort = 3
	GetListBatchRequest_totalRecords     GetListBatchRequest_Sort = 4
	GetListBatchRequest_totalDataInvalid GetListBatchRequest_Sort = 5
	GetListBatchRequest_totalDataValid   GetListBatchRequest_Sort = 6
	GetListBatchRequest_createdAt        GetListBatchRequest_Sort = 7
	GetListBatchRequest_status           GetListBatchRequest_Sort = 8
	GetListBatchRequest_createdBy        GetListBatchRequest_Sort = 9
)

// Enum value maps for GetListBatchRequest_Sort.
var (
	GetListBatchRequest_Sort_name = map[int32]string{
		0: "batchID",
		1: "companyName",
		2: "fileDescription",
		3: "fileFormat",
		4: "totalRecords",
		5: "totalDataInvalid",
		6: "totalDataValid",
		7: "createdAt",
		8: "status",
		9: "createdBy",
	}
	GetListBatchRequest_Sort_value = map[string]int32{
		"batchID":          0,
		"companyName":      1,
		"fileDescription":  2,
		"fileFormat":       3,
		"totalRecords":     4,
		"totalDataInvalid": 5,
		"totalDataValid":   6,
		"createdAt":        7,
		"status":           8,
		"createdBy":        9,
	}
)

func (x GetListBatchRequest_Sort) Enum() *GetListBatchRequest_Sort {
	p := new(GetListBatchRequest_Sort)
	*p = x
	return p
}

func (x GetListBatchRequest_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetListBatchRequest_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[17].Descriptor()
}

func (GetListBatchRequest_Sort) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[17]
}

func (x GetListBatchRequest_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetListBatchRequest_Sort.Descriptor instead.
func (GetListBatchRequest_Sort) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{94, 0}
}

type GetListBatchRequestDirection int32

const (
	GetListBatchRequest_DESC GetListBatchRequestDirection = 0
	GetListBatchRequest_ASC  GetListBatchRequestDirection = 1
)

// Enum value maps for GetListBatchRequestDirection.
var (
	GetListBatchRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	GetListBatchRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x GetListBatchRequestDirection) Enum() *GetListBatchRequestDirection {
	p := new(GetListBatchRequestDirection)
	*p = x
	return p
}

func (x GetListBatchRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetListBatchRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[18].Descriptor()
}

func (GetListBatchRequestDirection) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[18]
}

func (x GetListBatchRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetListBatchRequestDirection.Descriptor instead.
func (GetListBatchRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{94, 1}
}

type GetDetailAccountRequest_Sort int32

const (
	GetDetailAccountRequest_status GetDetailAccountRequest_Sort = 0
)

// Enum value maps for GetDetailAccountRequest_Sort.
var (
	GetDetailAccountRequest_Sort_name = map[int32]string{
		0: "status",
	}
	GetDetailAccountRequest_Sort_value = map[string]int32{
		"status": 0,
	}
)

func (x GetDetailAccountRequest_Sort) Enum() *GetDetailAccountRequest_Sort {
	p := new(GetDetailAccountRequest_Sort)
	*p = x
	return p
}

func (x GetDetailAccountRequest_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDetailAccountRequest_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[19].Descriptor()
}

func (GetDetailAccountRequest_Sort) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[19]
}

func (x GetDetailAccountRequest_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDetailAccountRequest_Sort.Descriptor instead.
func (GetDetailAccountRequest_Sort) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{102, 0}
}

type GetDetailAccountRequestDirection int32

const (
	GetDetailAccountRequest_DESC GetDetailAccountRequestDirection = 0
	GetDetailAccountRequest_ASC  GetDetailAccountRequestDirection = 1
)

// Enum value maps for GetDetailAccountRequestDirection.
var (
	GetDetailAccountRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	GetDetailAccountRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x GetDetailAccountRequestDirection) Enum() *GetDetailAccountRequestDirection {
	p := new(GetDetailAccountRequestDirection)
	*p = x
	return p
}

func (x GetDetailAccountRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDetailAccountRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[20].Descriptor()
}

func (GetDetailAccountRequestDirection) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[20]
}

func (x GetDetailAccountRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDetailAccountRequestDirection.Descriptor instead.
func (GetDetailAccountRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{102, 1}
}

type SendNotifQueueRequest_NotifType int32

const (
	SendNotifQueueRequest_null_type         SendNotifQueueRequest_NotifType = 0
	SendNotifQueueRequest_common            SendNotifQueueRequest_NotifType = 1
	SendNotifQueueRequest_notif_cif_account SendNotifQueueRequest_NotifType = 2
)

// Enum value maps for SendNotifQueueRequest_NotifType.
var (
	SendNotifQueueRequest_NotifType_name = map[int32]string{
		0: "null_type",
		1: "common",
		2: "notif_cif_account",
	}
	SendNotifQueueRequest_NotifType_value = map[string]int32{
		"null_type":         0,
		"common":            1,
		"notif_cif_account": 2,
	}
)

func (x SendNotifQueueRequest_NotifType) Enum() *SendNotifQueueRequest_NotifType {
	p := new(SendNotifQueueRequest_NotifType)
	*p = x
	return p
}

func (x SendNotifQueueRequest_NotifType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendNotifQueueRequest_NotifType) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[21].Descriptor()
}

func (SendNotifQueueRequest_NotifType) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[21]
}

func (x SendNotifQueueRequest_NotifType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendNotifQueueRequest_NotifType.Descriptor instead.
func (SendNotifQueueRequest_NotifType) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{128, 0}
}

type SendNotifQueueRequest_Actions int32

const (
	SendNotifQueueRequest_null_action          SendNotifQueueRequest_Actions = 0
	SendNotifQueueRequest_send_approval        SendNotifQueueRequest_Actions = 1
	SendNotifQueueRequest_update_send_approval SendNotifQueueRequest_Actions = 2
	SendNotifQueueRequest_approve              SendNotifQueueRequest_Actions = 3
	SendNotifQueueRequest_reject               SendNotifQueueRequest_Actions = 4
	SendNotifQueueRequest_rework               SendNotifQueueRequest_Actions = 5
	SendNotifQueueRequest_delete               SendNotifQueueRequest_Actions = 6
)

// Enum value maps for SendNotifQueueRequest_Actions.
var (
	SendNotifQueueRequest_Actions_name = map[int32]string{
		0: "null_action",
		1: "send_approval",
		2: "update_send_approval",
		3: "approve",
		4: "reject",
		5: "rework",
		6: "delete",
	}
	SendNotifQueueRequest_Actions_value = map[string]int32{
		"null_action":          0,
		"send_approval":        1,
		"update_send_approval": 2,
		"approve":              3,
		"reject":               4,
		"rework":               5,
		"delete":               6,
	}
)

func (x SendNotifQueueRequest_Actions) Enum() *SendNotifQueueRequest_Actions {
	p := new(SendNotifQueueRequest_Actions)
	*p = x
	return p
}

func (x SendNotifQueueRequest_Actions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendNotifQueueRequest_Actions) Descriptor() protoreflect.EnumDescriptor {
	return file_account_service_account_payload_proto_enumTypes[22].Descriptor()
}

func (SendNotifQueueRequest_Actions) Type() protoreflect.EnumType {
	return &file_account_service_account_payload_proto_enumTypes[22]
}

func (x SendNotifQueueRequest_Actions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendNotifQueueRequest_Actions.Descriptor instead.
func (SendNotifQueueRequest_Actions) EnumDescriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{128, 1}
}

type GetUserApprovedAndCreatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                                   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint64                                 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DataGetUserApprovedAndCreatedResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserApprovedAndCreatedResponse) Reset() {
	*x = GetUserApprovedAndCreatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserApprovedAndCreatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserApprovedAndCreatedResponse) ProtoMessage() {}

func (x *GetUserApprovedAndCreatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserApprovedAndCreatedResponse.ProtoReflect.Descriptor instead.
func (*GetUserApprovedAndCreatedResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserApprovedAndCreatedResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetUserApprovedAndCreatedResponse) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUserApprovedAndCreatedResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserApprovedAndCreatedResponse) GetData() *DataGetUserApprovedAndCreatedResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataGetUserApprovedAndCreatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created  []string `protobuf:"bytes,1,rep,name=Created,proto3" json:"Created,omitempty"`
	Approved []string `protobuf:"bytes,2,rep,name=Approved,proto3" json:"Approved,omitempty"`
}

func (x *DataGetUserApprovedAndCreatedResponse) Reset() {
	*x = DataGetUserApprovedAndCreatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataGetUserApprovedAndCreatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataGetUserApprovedAndCreatedResponse) ProtoMessage() {}

func (x *DataGetUserApprovedAndCreatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataGetUserApprovedAndCreatedResponse.ProtoReflect.Descriptor instead.
func (*DataGetUserApprovedAndCreatedResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{1}
}

func (x *DataGetUserApprovedAndCreatedResponse) GetCreated() []string {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *DataGetUserApprovedAndCreatedResponse) GetApproved() []string {
	if x != nil {
		return x.Approved
	}
	return nil
}

// list v2
type ListAccountTaskV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// statuses status = 1;
	Step     ListAccountTaskV2RequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=account.service.v1.ListAccountTaskV2RequestSteps" json:"step,omitempty"`
	Limit    int32                             `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32                             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort     ListAccountTaskV2Request_Sort     `protobuf:"varint,5,opt,name=sort,proto3,enum=account.service.v1.ListAccountTaskV2Request_Sort" json:"sort,omitempty"`
	Dir      ListAccountTaskV2RequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=account.service.v1.ListAccountTaskV2RequestDirection" json:"dir,omitempty"`
	Filter   *AccountWithCompany               `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query    string                            `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	FilterOr string                            `protobuf:"bytes,9,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
}

func (x *ListAccountTaskV2Request) Reset() {
	*x = ListAccountTaskV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountTaskV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountTaskV2Request) ProtoMessage() {}

func (x *ListAccountTaskV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountTaskV2Request.ProtoReflect.Descriptor instead.
func (*ListAccountTaskV2Request) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{2}
}

func (x *ListAccountTaskV2Request) GetStep() ListAccountTaskV2RequestSteps {
	if x != nil {
		return x.Step
	}
	return ListAccountTaskV2Request_AllStep
}

func (x *ListAccountTaskV2Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAccountTaskV2Request) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAccountTaskV2Request) GetSort() ListAccountTaskV2Request_Sort {
	if x != nil {
		return x.Sort
	}
	return ListAccountTaskV2Request_companyID
}

func (x *ListAccountTaskV2Request) GetDir() ListAccountTaskV2RequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListAccountTaskV2Request_DESC
}

func (x *ListAccountTaskV2Request) GetFilter() *AccountWithCompany {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListAccountTaskV2Request) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListAccountTaskV2Request) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

// DeleteAccountRole
type DeleteAccountRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID uint64 `protobuf:"varint,1,opt,name=roleID,proto3" json:"roleID,omitempty"`
}

func (x *DeleteAccountRoleRequest) Reset() {
	*x = DeleteAccountRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRoleRequest) ProtoMessage() {}

func (x *DeleteAccountRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountRoleRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteAccountRoleRequest) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

type DeleteAccountRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteAccountRoleResponse) Reset() {
	*x = DeleteAccountRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRoleResponse) ProtoMessage() {}

func (x *DeleteAccountRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccountRoleResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAccountRoleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DeleteAccountRoleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteAccountRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// validate account alias
type ValidateNameAliasAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameAlias []string `protobuf:"bytes,1,rep,name=nameAlias,proto3" json:"nameAlias,omitempty"`
	CompanyID uint64   `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	TaskID    uint64   `protobuf:"varint,3,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *ValidateNameAliasAccountRequest) Reset() {
	*x = ValidateNameAliasAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateNameAliasAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateNameAliasAccountRequest) ProtoMessage() {}

func (x *ValidateNameAliasAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateNameAliasAccountRequest.ProtoReflect.Descriptor instead.
func (*ValidateNameAliasAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateNameAliasAccountRequest) GetNameAlias() []string {
	if x != nil {
		return x.NameAlias
	}
	return nil
}

func (x *ValidateNameAliasAccountRequest) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *ValidateNameAliasAccountRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type ValidateNameAliasAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ValidateNameAliasAccountResponse) Reset() {
	*x = ValidateNameAliasAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateNameAliasAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateNameAliasAccountResponse) ProtoMessage() {}

func (x *ValidateNameAliasAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateNameAliasAccountResponse.ProtoReflect.Descriptor instead.
func (*ValidateNameAliasAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{6}
}

func (x *ValidateNameAliasAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ValidateNameAliasAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidateNameAliasAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{7}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{8}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{9}
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{10}
}

type InvalidKeyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InvalidKeyError) Reset() {
	*x = InvalidKeyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidKeyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidKeyError) ProtoMessage() {}

func (x *InvalidKeyError) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidKeyError.ProtoReflect.Descriptor instead.
func (*InvalidKeyError) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{11}
}

func (x *InvalidKeyError) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InvalidKeyError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JWTTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiredAt int64  `protobuf:"varint,2,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
}

func (x *JWTTokenResponse) Reset() {
	*x = JWTTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWTTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTTokenResponse) ProtoMessage() {}

func (x *JWTTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTTokenResponse.ProtoReflect.Descriptor instead.
func (*JWTTokenResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{12}
}

func (x *JWTTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JWTTokenResponse) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{13}
}

type ListAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account      *Account                    `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Limit        int32                       `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page         int32                       `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort         string                      `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir          ListAccountRequestDirection `protobuf:"varint,5,opt,name=dir,proto3,enum=account.service.v1.ListAccountRequestDirection" json:"dir,omitempty"`
	Filter       string                      `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Query        string                      `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	FilterOr     string                      `protobuf:"bytes,8,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
	In           string                      `protobuf:"bytes,9,opt,name=in,proto3" json:"in,omitempty"`
	ProductID    uint64                      `protobuf:"varint,10,opt,name=productID,proto3" json:"productID,omitempty"`
	ProductNames string                      `protobuf:"bytes,11,opt,name=productNames,proto3" json:"productNames,omitempty"`
}

func (x *ListAccountRequest) Reset() {
	*x = ListAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest) ProtoMessage() {}

func (x *ListAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest.ProtoReflect.Descriptor instead.
func (*ListAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{14}
}

func (x *ListAccountRequest) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ListAccountRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAccountRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAccountRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListAccountRequest) GetDir() ListAccountRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListAccountRequest_DESC
}

func (x *ListAccountRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAccountRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListAccountRequest) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

func (x *ListAccountRequest) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *ListAccountRequest) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *ListAccountRequest) GetProductNames() string {
	if x != nil {
		return x.ProductNames
	}
	return ""
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column    string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{15}
}

func (x *Sort) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Sort) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type MyAllowedAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleIDs []uint64 `protobuf:"varint,1,rep,packed,name=roleIDs,proto3" json:"roleIDs,omitempty"`
}

func (x *MyAllowedAccountRequest) Reset() {
	*x = MyAllowedAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyAllowedAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyAllowedAccountRequest) ProtoMessage() {}

func (x *MyAllowedAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyAllowedAccountRequest.ProtoReflect.Descriptor instead.
func (*MyAllowedAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{16}
}

func (x *MyAllowedAccountRequest) GetRoleIDs() []uint64 {
	if x != nil {
		return x.RoleIDs
	}
	return nil
}

type MyAllowedAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIDs []uint64 `protobuf:"varint,4,rep,packed,name=accountIDs,proto3" json:"accountIDs,omitempty"`
}

func (x *MyAllowedAccountResponse) Reset() {
	*x = MyAllowedAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyAllowedAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyAllowedAccountResponse) ProtoMessage() {}

func (x *MyAllowedAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyAllowedAccountResponse.ProtoReflect.Descriptor instead.
func (*MyAllowedAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{17}
}

func (x *MyAllowedAccountResponse) GetAccountIDs() []uint64 {
	if x != nil {
		return x.AccountIDs
	}
	return nil
}

type ListAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool        `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32      `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*Account  `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAccountResponse) Reset() {
	*x = ListAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountResponse) ProtoMessage() {}

func (x *ListAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountResponse.ProtoReflect.Descriptor instead.
func (*ListAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{18}
}

func (x *ListAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListAccountResponse) GetData() []*Account {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListAccountResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListAccountActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32     `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Account `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListAccountActiveResponse) Reset() {
	*x = ListAccountActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountActiveResponse) ProtoMessage() {}

func (x *ListAccountActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountActiveResponse.ProtoReflect.Descriptor instead.
func (*ListAccountActiveResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{19}
}

func (x *ListAccountActiveResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListAccountActiveResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAccountActiveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListAccountActiveResponse) GetData() []*Account {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *Account `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64   `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Action string   `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{20}
}

func (x *CreateAccountRequest) GetData() *Account {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateAccountRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateAccountRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type CreateAccountTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *AccountWrite `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID  uint64        `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft bool          `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateAccountTaskRequest) Reset() {
	*x = CreateAccountTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountTaskRequest) ProtoMessage() {}

func (x *CreateAccountTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountTaskRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{21}
}

func (x *CreateAccountTaskRequest) GetData() *AccountWrite {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateAccountTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateAccountTaskRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type CreateAccountBatchTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *AccountWrite `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID  uint64        `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	BatchID string        `protobuf:"bytes,3,opt,name=batchID,proto3" json:"batchID,omitempty"`
	IsDraft bool          `protobuf:"varint,4,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateAccountBatchTaskRequest) Reset() {
	*x = CreateAccountBatchTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountBatchTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountBatchTaskRequest) ProtoMessage() {}

func (x *CreateAccountBatchTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountBatchTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountBatchTaskRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{22}
}

func (x *CreateAccountBatchTaskRequest) GetData() *AccountWrite {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateAccountBatchTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateAccountBatchTaskRequest) GetBatchID() string {
	if x != nil {
		return x.BatchID
	}
	return ""
}

func (x *CreateAccountBatchTaskRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type AccountWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID        uint64                 `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	CompanyID        uint64                 `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	AccountNumber    string                 `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountAlias     []string               `protobuf:"bytes,4,rep,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountName      string                 `protobuf:"bytes,5,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountType      string                 `protobuf:"bytes,6,opt,name=accountType,proto3" json:"accountType,omitempty"`
	AccountStatus    string                 `protobuf:"bytes,7,opt,name=accountStatus,proto3" json:"accountStatus,omitempty"`
	AccountCurrency  string                 `protobuf:"bytes,8,opt,name=accountCurrency,proto3" json:"accountCurrency,omitempty"`
	AccessLevel      string                 `protobuf:"bytes,9,opt,name=accessLevel,proto3" json:"accessLevel,omitempty"`
	IsOwnedByCompany string                 `protobuf:"bytes,10,opt,name=isOwnedByCompany,proto3" json:"isOwnedByCompany,omitempty"`
	CreatedByID      uint64                 `protobuf:"varint,11,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID      uint64                 `protobuf:"varint,12,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	DeletedByID      uint64                 `protobuf:"varint,13,opt,name=deletedByID,proto3" json:"deletedByID,omitempty"`
	RoleID           uint64                 `protobuf:"varint,14,opt,name=roleID,proto3" json:"roleID,omitempty"`
	Disabled         bool                   `protobuf:"varint,15,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Cif              string                 `protobuf:"bytes,19,opt,name=cif,proto3" json:"cif,omitempty"`
	ProductCode      string                 `protobuf:"bytes,20,opt,name=productCode,proto3" json:"productCode,omitempty"`
	StatusCode       string                 `protobuf:"bytes,21,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	CompanyName      string                 `protobuf:"bytes,22,opt,name=companyName,proto3" json:"companyName,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt        *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *AccountWrite) Reset() {
	*x = AccountWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountWrite) ProtoMessage() {}

func (x *AccountWrite) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountWrite.ProtoReflect.Descriptor instead.
func (*AccountWrite) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{23}
}

func (x *AccountWrite) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *AccountWrite) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *AccountWrite) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *AccountWrite) GetAccountAlias() []string {
	if x != nil {
		return x.AccountAlias
	}
	return nil
}

func (x *AccountWrite) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AccountWrite) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *AccountWrite) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *AccountWrite) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *AccountWrite) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *AccountWrite) GetIsOwnedByCompany() string {
	if x != nil {
		return x.IsOwnedByCompany
	}
	return ""
}

func (x *AccountWrite) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *AccountWrite) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *AccountWrite) GetDeletedByID() uint64 {
	if x != nil {
		return x.DeletedByID
	}
	return 0
}

func (x *AccountWrite) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *AccountWrite) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *AccountWrite) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *AccountWrite) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *AccountWrite) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *AccountWrite) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *AccountWrite) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AccountWrite) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AccountWrite) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type CreateAccountTaskBulkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*AccountWrite `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	TaskID   uint64          `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft  bool            `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateAccountTaskBulkRequest) Reset() {
	*x = CreateAccountTaskBulkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountTaskBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountTaskBulkRequest) ProtoMessage() {}

func (x *CreateAccountTaskBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountTaskBulkRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountTaskBulkRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{24}
}

func (x *CreateAccountTaskBulkRequest) GetAccounts() []*AccountWrite {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *CreateAccountTaskBulkRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateAccountTaskBulkRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type AccountAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountAlias string `protobuf:"bytes,1,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
}

func (x *AccountAlias) Reset() {
	*x = AccountAlias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAlias) ProtoMessage() {}

func (x *AccountAlias) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAlias.ProtoReflect.Descriptor instead.
func (*AccountAlias) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{25}
}

func (x *AccountAlias) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

type CreateAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Account `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateAccountResponse) Reset() {
	*x = CreateAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountResponse) ProtoMessage() {}

func (x *CreateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{26}
}

func (x *CreateAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAccountResponse) GetData() *Account {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32     `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Account `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteAccountResponse) Reset() {
	*x = DeleteAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountResponse) ProtoMessage() {}

func (x *DeleteAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DeleteAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteAccountResponse) GetData() []*Account {
	if x != nil {
		return x.Data
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Status             string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,4,opt,name=featureID,proto3" json:"featureID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,5,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,6,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,7,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	UpdatedByName      string                 `protobuf:"bytes,8,opt,name=updatedByName,proto3" json:"updatedByName,omitempty"`
	Reasons            string                 `protobuf:"bytes,9,opt,name=reasons,proto3" json:"reasons,omitempty"`
	Comment            string                 `protobuf:"bytes,10,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,50,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{28}
}

func (x *Task) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *Task) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *Task) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *Task) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *Task) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Task) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *Task) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *Task) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AccountTaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID        uint64                 `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	CompanyID        uint64                 `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	AccountNumber    string                 `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountAlias     []string               `protobuf:"bytes,4,rep,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountName      string                 `protobuf:"bytes,5,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountType      string                 `protobuf:"bytes,6,opt,name=accountType,proto3" json:"accountType,omitempty"`
	AccountStatus    string                 `protobuf:"bytes,7,opt,name=accountStatus,proto3" json:"accountStatus,omitempty"`
	AccountCurrency  string                 `protobuf:"bytes,8,opt,name=accountCurrency,proto3" json:"accountCurrency,omitempty"`
	AccessLevel      string                 `protobuf:"bytes,9,opt,name=accessLevel,proto3" json:"accessLevel,omitempty"`
	IsOwnedByCompany string                 `protobuf:"bytes,10,opt,name=isOwnedByCompany,proto3" json:"isOwnedByCompany,omitempty"`
	CreatedByID      uint64                 `protobuf:"varint,11,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID      uint64                 `protobuf:"varint,12,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	DeletedByID      uint64                 `protobuf:"varint,13,opt,name=deletedByID,proto3" json:"deletedByID,omitempty"`
	RoleID           uint64                 `protobuf:"varint,14,opt,name=roleID,proto3" json:"roleID,omitempty"`
	Disabled         bool                   `protobuf:"varint,15,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Cif              string                 `protobuf:"bytes,16,opt,name=cif,proto3" json:"cif,omitempty"`
	ProductCode      string                 `protobuf:"bytes,17,opt,name=productCode,proto3" json:"productCode,omitempty"`
	StatusCode       string                 `protobuf:"bytes,18,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	CompanyName      string                 `protobuf:"bytes,31,opt,name=companyName,proto3" json:"companyName,omitempty"`
	CreatedByName    string                 `protobuf:"bytes,32,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt        *timestamppb.Timestamp `protobuf:"bytes,53,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *AccountTaskData) Reset() {
	*x = AccountTaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountTaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTaskData) ProtoMessage() {}

func (x *AccountTaskData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTaskData.ProtoReflect.Descriptor instead.
func (*AccountTaskData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{29}
}

func (x *AccountTaskData) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *AccountTaskData) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *AccountTaskData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *AccountTaskData) GetAccountAlias() []string {
	if x != nil {
		return x.AccountAlias
	}
	return nil
}

func (x *AccountTaskData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AccountTaskData) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *AccountTaskData) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *AccountTaskData) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *AccountTaskData) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *AccountTaskData) GetIsOwnedByCompany() string {
	if x != nil {
		return x.IsOwnedByCompany
	}
	return ""
}

func (x *AccountTaskData) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *AccountTaskData) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *AccountTaskData) GetDeletedByID() uint64 {
	if x != nil {
		return x.DeletedByID
	}
	return 0
}

func (x *AccountTaskData) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *AccountTaskData) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *AccountTaskData) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *AccountTaskData) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *AccountTaskData) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *AccountTaskData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *AccountTaskData) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *AccountTaskData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AccountTaskData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AccountTaskData) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type AccountTaskDataString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID        uint64                 `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	CompanyID        uint64                 `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	AccountNumber    string                 `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountAlias     string                 `protobuf:"bytes,4,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountName      string                 `protobuf:"bytes,5,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountType      string                 `protobuf:"bytes,6,opt,name=accountType,proto3" json:"accountType,omitempty"`
	AccountStatus    string                 `protobuf:"bytes,7,opt,name=accountStatus,proto3" json:"accountStatus,omitempty"`
	AccountCurrency  string                 `protobuf:"bytes,8,opt,name=accountCurrency,proto3" json:"accountCurrency,omitempty"`
	AccessLevel      string                 `protobuf:"bytes,9,opt,name=accessLevel,proto3" json:"accessLevel,omitempty"`
	IsOwnedByCompany string                 `protobuf:"bytes,10,opt,name=isOwnedByCompany,proto3" json:"isOwnedByCompany,omitempty"`
	CreatedByID      uint64                 `protobuf:"varint,11,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID      uint64                 `protobuf:"varint,12,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	DeletedByID      uint64                 `protobuf:"varint,13,opt,name=deletedByID,proto3" json:"deletedByID,omitempty"`
	RoleID           uint64                 `protobuf:"varint,14,opt,name=roleID,proto3" json:"roleID,omitempty"`
	Disabled         bool                   `protobuf:"varint,15,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Cif              string                 `protobuf:"bytes,16,opt,name=cif,proto3" json:"cif,omitempty"`
	ProductCode      string                 `protobuf:"bytes,17,opt,name=productCode,proto3" json:"productCode,omitempty"`
	StatusCode       string                 `protobuf:"bytes,18,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	CompanyName      string                 `protobuf:"bytes,31,opt,name=companyName,proto3" json:"companyName,omitempty"`
	CreatedByName    string                 `protobuf:"bytes,32,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt        *timestamppb.Timestamp `protobuf:"bytes,53,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *AccountTaskDataString) Reset() {
	*x = AccountTaskDataString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountTaskDataString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTaskDataString) ProtoMessage() {}

func (x *AccountTaskDataString) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTaskDataString.ProtoReflect.Descriptor instead.
func (*AccountTaskDataString) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{30}
}

func (x *AccountTaskDataString) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *AccountTaskDataString) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *AccountTaskDataString) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *AccountTaskDataString) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *AccountTaskDataString) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AccountTaskDataString) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *AccountTaskDataString) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *AccountTaskDataString) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *AccountTaskDataString) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *AccountTaskDataString) GetIsOwnedByCompany() string {
	if x != nil {
		return x.IsOwnedByCompany
	}
	return ""
}

func (x *AccountTaskDataString) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *AccountTaskDataString) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *AccountTaskDataString) GetDeletedByID() uint64 {
	if x != nil {
		return x.DeletedByID
	}
	return 0
}

func (x *AccountTaskDataString) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *AccountTaskDataString) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *AccountTaskDataString) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *AccountTaskDataString) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *AccountTaskDataString) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *AccountTaskDataString) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *AccountTaskDataString) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *AccountTaskDataString) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AccountTaskDataString) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AccountTaskDataString) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type AccountTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  *AccountTaskData   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Task     *Task              `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Accounts []*AccountTaskData `protobuf:"bytes,3,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Company  *CompanyData       `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *AccountTask) Reset() {
	*x = AccountTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTask) ProtoMessage() {}

func (x *AccountTask) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTask.ProtoReflect.Descriptor instead.
func (*AccountTask) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{31}
}

func (x *AccountTask) GetAccount() *AccountTaskData {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AccountTask) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *AccountTask) GetAccounts() []*AccountTaskData {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *AccountTask) GetCompany() *CompanyData {
	if x != nil {
		return x.Company
	}
	return nil
}

type CompanyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID   uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CompanyCode string `protobuf:"bytes,2,opt,name=companyCode,proto3" json:"companyCode,omitempty"`
	CompanyName string `protobuf:"bytes,3,opt,name=companyName,proto3" json:"companyName,omitempty"`
	CountryCode string `protobuf:"bytes,4,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	CountryName string `protobuf:"bytes,5,opt,name=countryName,proto3" json:"countryName,omitempty"`
}

func (x *CompanyData) Reset() {
	*x = CompanyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyData) ProtoMessage() {}

func (x *CompanyData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyData.ProtoReflect.Descriptor instead.
func (*CompanyData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{32}
}

func (x *CompanyData) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *CompanyData) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *CompanyData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *CompanyData) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CompanyData) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

type CreateAccountTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code      uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message   string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	TaskID    uint64 `protobuf:"varint,4,opt,name=taskID,proto3" json:"taskID,omitempty"`
	AccountID uint64 `protobuf:"varint,5,opt,name=accountID,proto3" json:"accountID,omitempty"`
}

func (x *CreateAccountTaskResponse) Reset() {
	*x = CreateAccountTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountTaskResponse) ProtoMessage() {}

func (x *CreateAccountTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountTaskResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{33}
}

func (x *CreateAccountTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateAccountTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateAccountTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAccountTaskResponse) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateAccountTaskResponse) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type CreateAccountTaskMultipleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	TaskID  []uint64 `protobuf:"varint,4,rep,packed,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateAccountTaskMultipleResponse) Reset() {
	*x = CreateAccountTaskMultipleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountTaskMultipleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountTaskMultipleResponse) ProtoMessage() {}

func (x *CreateAccountTaskMultipleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountTaskMultipleResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountTaskMultipleResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{34}
}

func (x *CreateAccountTaskMultipleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateAccountTaskMultipleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateAccountTaskMultipleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAccountTaskMultipleResponse) GetTaskID() []uint64 {
	if x != nil {
		return x.TaskID
	}
	return nil
}

type ListAccountTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ListAccountTaskRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=account.service.v1.ListAccountTaskRequestStatuses" json:"status,omitempty"`
	Step   ListAccountTaskRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=account.service.v1.ListAccountTaskRequestSteps" json:"step,omitempty"`
	Limit  int32                           `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                           `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort   string                          `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    ListAccountTaskRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=account.service.v1.ListAccountTaskRequestDirection" json:"dir,omitempty"`
	Filter string                          `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query  string                          `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListAccountTaskRequest) Reset() {
	*x = ListAccountTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountTaskRequest) ProtoMessage() {}

func (x *ListAccountTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountTaskRequest.ProtoReflect.Descriptor instead.
func (*ListAccountTaskRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{35}
}

func (x *ListAccountTaskRequest) GetStatus() ListAccountTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return ListAccountTaskRequest_AllStatus
}

func (x *ListAccountTaskRequest) GetStep() ListAccountTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return ListAccountTaskRequest_AllStep
}

func (x *ListAccountTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAccountTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAccountTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListAccountTaskRequest) GetDir() ListAccountTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListAccountTaskRequest_DESC
}

func (x *ListAccountTaskRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAccountTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetAccountTaskByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetAccountTaskByIDRequest) Reset() {
	*x = GetAccountTaskByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountTaskByIDRequest) ProtoMessage() {}

func (x *GetAccountTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*GetAccountTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{36}
}

func (x *GetAccountTaskByIDRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type ListAccountTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool           `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32         `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*AccountTask `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination    `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAccountTaskResponse) Reset() {
	*x = ListAccountTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountTaskResponse) ProtoMessage() {}

func (x *ListAccountTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountTaskResponse.ProtoReflect.Descriptor instead.
func (*ListAccountTaskResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{37}
}

func (x *ListAccountTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListAccountTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAccountTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListAccountTaskResponse) GetData() []*AccountTask {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListAccountTaskResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ErrorBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorBodyResponse) Reset() {
	*x = ErrorBodyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorBodyResponse) ProtoMessage() {}

func (x *ErrorBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorBodyResponse.ProtoReflect.Descriptor instead.
func (*ErrorBodyResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{38}
}

func (x *ErrorBodyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ErrorBodyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AccountDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint64 `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
}

func (x *AccountDetailRequest) Reset() {
	*x = AccountDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailRequest) ProtoMessage() {}

func (x *AccountDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailRequest.ProtoReflect.Descriptor instead.
func (*AccountDetailRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{39}
}

func (x *AccountDetailRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type AccountDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Account `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AccountDetailResponse) Reset() {
	*x = AccountDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailResponse) ProtoMessage() {}

func (x *AccountDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailResponse.ProtoReflect.Descriptor instead.
func (*AccountDetailResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{40}
}

func (x *AccountDetailResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *AccountDetailResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AccountDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AccountDetailResponse) GetData() *Account {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateAccountRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID    uint64   `protobuf:"varint,1,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	AccountID []uint64 `protobuf:"varint,2,rep,packed,name=accountID,proto3" json:"accountID,omitempty"`
}

func (x *UpdateAccountRoleRequest) Reset() {
	*x = UpdateAccountRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRoleRequest) ProtoMessage() {}

func (x *UpdateAccountRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountRoleRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateAccountRoleRequest) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *UpdateAccountRoleRequest) GetAccountID() []uint64 {
	if x != nil {
		return x.AccountID
	}
	return nil
}

type UpdateAccountRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32     `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Account `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateAccountRoleResponse) Reset() {
	*x = UpdateAccountRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRoleResponse) ProtoMessage() {}

func (x *UpdateAccountRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccountRoleResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateAccountRoleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *UpdateAccountRoleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateAccountRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateAccountRoleResponse) GetData() []*Account {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileListTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileFormat FileListTemplateRequest_FormatTemplates `protobuf:"varint,1,opt,name=fileFormat,proto3,enum=account.service.v1.FileListTemplateRequest_FormatTemplates" json:"fileFormat,omitempty"`
}

func (x *FileListTemplateRequest) Reset() {
	*x = FileListTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileListTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListTemplateRequest) ProtoMessage() {}

func (x *FileListTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListTemplateRequest.ProtoReflect.Descriptor instead.
func (*FileListTemplateRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{43}
}

func (x *FileListTemplateRequest) GetFileFormat() FileListTemplateRequest_FormatTemplates {
	if x != nil {
		return x.FileFormat
	}
	return FileListTemplateRequest_null
}

type FileListAccountTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileFormat FileListAccountTaskRequest_Formats `protobuf:"varint,1,opt,name=fileFormat,proto3,enum=account.service.v1.FileListAccountTaskRequest_Formats" json:"fileFormat,omitempty"`
	// statuses status = 1;
	Step     FileListAccountTaskRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=account.service.v1.FileListAccountTaskRequestSteps" json:"step,omitempty"`
	Limit    int32                               `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32                               `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort     FileListAccountTaskRequest_Sort     `protobuf:"varint,5,opt,name=sort,proto3,enum=account.service.v1.FileListAccountTaskRequest_Sort" json:"sort,omitempty"`
	Dir      FileListAccountTaskRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=account.service.v1.FileListAccountTaskRequestDirection" json:"dir,omitempty"`
	Filter   *AccountWithCompany                 `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query    string                              `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	FilterOr string                              `protobuf:"bytes,9,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
}

func (x *FileListAccountTaskRequest) Reset() {
	*x = FileListAccountTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileListAccountTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListAccountTaskRequest) ProtoMessage() {}

func (x *FileListAccountTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListAccountTaskRequest.ProtoReflect.Descriptor instead.
func (*FileListAccountTaskRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{44}
}

func (x *FileListAccountTaskRequest) GetFileFormat() FileListAccountTaskRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return FileListAccountTaskRequest_null
}

func (x *FileListAccountTaskRequest) GetStep() FileListAccountTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return FileListAccountTaskRequest_AllStep
}

func (x *FileListAccountTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FileListAccountTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FileListAccountTaskRequest) GetSort() FileListAccountTaskRequest_Sort {
	if x != nil {
		return x.Sort
	}
	return FileListAccountTaskRequest_companyID
}

func (x *FileListAccountTaskRequest) GetDir() FileListAccountTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return FileListAccountTaskRequest_DESC
}

func (x *FileListAccountTaskRequest) GetFilter() *AccountWithCompany {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *FileListAccountTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *FileListAccountTaskRequest) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

type CekAccountAvaibilityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID     string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	AccountNumber string `protobuf:"bytes,2,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	CountryCode   string `protobuf:"bytes,3,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	Type          string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CekAccountAvaibilityReq) Reset() {
	*x = CekAccountAvaibilityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CekAccountAvaibilityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CekAccountAvaibilityReq) ProtoMessage() {}

func (x *CekAccountAvaibilityReq) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CekAccountAvaibilityReq.ProtoReflect.Descriptor instead.
func (*CekAccountAvaibilityReq) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{45}
}

func (x *CekAccountAvaibilityReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *CekAccountAvaibilityReq) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *CekAccountAvaibilityReq) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CekAccountAvaibilityReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CekAccountAvaibilityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available bool   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CekAccountAvaibilityRes) Reset() {
	*x = CekAccountAvaibilityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CekAccountAvaibilityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CekAccountAvaibilityRes) ProtoMessage() {}

func (x *CekAccountAvaibilityRes) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CekAccountAvaibilityRes.ProtoReflect.Descriptor instead.
func (*CekAccountAvaibilityRes) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{46}
}

func (x *CekAccountAvaibilityRes) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *CekAccountAvaibilityRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CekAccountUsedRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountAlias []string `protobuf:"bytes,1,rep,name=accountAlias,proto3" json:"accountAlias,omitempty"`
}

func (x *CekAccountUsedRes) Reset() {
	*x = CekAccountUsedRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CekAccountUsedRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CekAccountUsedRes) ProtoMessage() {}

func (x *CekAccountUsedRes) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CekAccountUsedRes.ProtoReflect.Descriptor instead.
func (*CekAccountUsedRes) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{47}
}

func (x *CekAccountUsedRes) GetAccountAlias() []string {
	if x != nil {
		return x.AccountAlias
	}
	return nil
}

type AccountNotificationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	USERNAME_MAKER      string `protobuf:"bytes,1,opt,name=USERNAME_MAKER,proto3" json:"USERNAME_MAKER,omitempty"`
	USERNAME_APPROVER   string `protobuf:"bytes,2,opt,name=USERNAME_APPROVER,proto3" json:"USERNAME_APPROVER,omitempty"`
	CREATED_DATETIME    string `protobuf:"bytes,3,opt,name=CREATED_DATETIME,proto3" json:"CREATED_DATETIME,omitempty"`
	CREATED_DATE        string `protobuf:"bytes,4,opt,name=CREATED_DATE,proto3" json:"CREATED_DATE,omitempty"`
	CREATED_TIME        string `protobuf:"bytes,5,opt,name=CREATED_TIME,proto3" json:"CREATED_TIME,omitempty"`
	EVENT_DATETIME      string `protobuf:"bytes,6,opt,name=EVENT_DATETIME,proto3" json:"EVENT_DATETIME,omitempty"`
	EVENT_DATE          string `protobuf:"bytes,7,opt,name=EVENT_DATE,proto3" json:"EVENT_DATE,omitempty"`
	EVENT_TIME          string `protobuf:"bytes,8,opt,name=EVENT_TIME,proto3" json:"EVENT_TIME,omitempty"`
	ACCOUNT_NUMBER      string `protobuf:"bytes,9,opt,name=ACCOUNT_NUMBER,proto3" json:"ACCOUNT_NUMBER,omitempty"`
	ACCOUNT_ALIAS       string `protobuf:"bytes,10,opt,name=ACCOUNT_ALIAS,proto3" json:"ACCOUNT_ALIAS,omitempty"`
	ACCOUNT_HOLDER_NAME string `protobuf:"bytes,11,opt,name=ACCOUNT_HOLDER_NAME,proto3" json:"ACCOUNT_HOLDER_NAME,omitempty"`
	BANK_NAME           string `protobuf:"bytes,12,opt,name=BANK_NAME,proto3" json:"BANK_NAME,omitempty"`
	CURRENCY_NAME       string `protobuf:"bytes,13,opt,name=CURRENCY_NAME,proto3" json:"CURRENCY_NAME,omitempty"`
	TASK_ID             string `protobuf:"bytes,14,opt,name=TASK_ID,proto3" json:"TASK_ID,omitempty"`
	USERNAME_REJECTOR   string `protobuf:"bytes,15,opt,name=USERNAME_REJECTOR,proto3" json:"USERNAME_REJECTOR,omitempty"`
	COMPANY_NAME        string `protobuf:"bytes,16,opt,name=COMPANY_NAME,proto3" json:"COMPANY_NAME,omitempty"`
	USERNAME_CHECKER    string `protobuf:"bytes,17,opt,name=USERNAME_CHECKER,proto3" json:"USERNAME_CHECKER,omitempty"`
	USERNAME_RELEASER   string `protobuf:"bytes,18,opt,name=USERNAME_RELEASER,proto3" json:"USERNAME_RELEASER,omitempty"`
	ACCOUNT_TYPE        string `protobuf:"bytes,19,opt,name=ACCOUNT_TYPE,proto3" json:"ACCOUNT_TYPE,omitempty"`
}

func (x *AccountNotificationData) Reset() {
	*x = AccountNotificationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountNotificationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountNotificationData) ProtoMessage() {}

func (x *AccountNotificationData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountNotificationData.ProtoReflect.Descriptor instead.
func (*AccountNotificationData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{48}
}

func (x *AccountNotificationData) GetUSERNAME_MAKER() string {
	if x != nil {
		return x.USERNAME_MAKER
	}
	return ""
}

func (x *AccountNotificationData) GetUSERNAME_APPROVER() string {
	if x != nil {
		return x.USERNAME_APPROVER
	}
	return ""
}

func (x *AccountNotificationData) GetCREATED_DATETIME() string {
	if x != nil {
		return x.CREATED_DATETIME
	}
	return ""
}

func (x *AccountNotificationData) GetCREATED_DATE() string {
	if x != nil {
		return x.CREATED_DATE
	}
	return ""
}

func (x *AccountNotificationData) GetCREATED_TIME() string {
	if x != nil {
		return x.CREATED_TIME
	}
	return ""
}

func (x *AccountNotificationData) GetEVENT_DATETIME() string {
	if x != nil {
		return x.EVENT_DATETIME
	}
	return ""
}

func (x *AccountNotificationData) GetEVENT_DATE() string {
	if x != nil {
		return x.EVENT_DATE
	}
	return ""
}

func (x *AccountNotificationData) GetEVENT_TIME() string {
	if x != nil {
		return x.EVENT_TIME
	}
	return ""
}

func (x *AccountNotificationData) GetACCOUNT_NUMBER() string {
	if x != nil {
		return x.ACCOUNT_NUMBER
	}
	return ""
}

func (x *AccountNotificationData) GetACCOUNT_ALIAS() string {
	if x != nil {
		return x.ACCOUNT_ALIAS
	}
	return ""
}

func (x *AccountNotificationData) GetACCOUNT_HOLDER_NAME() string {
	if x != nil {
		return x.ACCOUNT_HOLDER_NAME
	}
	return ""
}

func (x *AccountNotificationData) GetBANK_NAME() string {
	if x != nil {
		return x.BANK_NAME
	}
	return ""
}

func (x *AccountNotificationData) GetCURRENCY_NAME() string {
	if x != nil {
		return x.CURRENCY_NAME
	}
	return ""
}

func (x *AccountNotificationData) GetTASK_ID() string {
	if x != nil {
		return x.TASK_ID
	}
	return ""
}

func (x *AccountNotificationData) GetUSERNAME_REJECTOR() string {
	if x != nil {
		return x.USERNAME_REJECTOR
	}
	return ""
}

func (x *AccountNotificationData) GetCOMPANY_NAME() string {
	if x != nil {
		return x.COMPANY_NAME
	}
	return ""
}

func (x *AccountNotificationData) GetUSERNAME_CHECKER() string {
	if x != nil {
		return x.USERNAME_CHECKER
	}
	return ""
}

func (x *AccountNotificationData) GetUSERNAME_RELEASER() string {
	if x != nil {
		return x.USERNAME_RELEASER
	}
	return ""
}

func (x *AccountNotificationData) GetACCOUNT_TYPE() string {
	if x != nil {
		return x.ACCOUNT_TYPE
	}
	return ""
}

type ListAccountByRoleRPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   *Account                             `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Roles     []uint64                             `protobuf:"varint,2,rep,packed,name=roles,proto3" json:"roles,omitempty"`
	Limit     int32                                `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page      int32                                `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort      string                               `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir       ListAccountByRoleRPCRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=account.service.v1.ListAccountByRoleRPCRequestDirection" json:"dir,omitempty"`
	Filter    string                               `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query     string                               `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	FilterOr  string                               `protobuf:"bytes,9,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
	In        string                               `protobuf:"bytes,10,opt,name=in,proto3" json:"in,omitempty"`
	ProductID uint64                               `protobuf:"varint,11,opt,name=productID,proto3" json:"productID,omitempty"`
}

func (x *ListAccountByRoleRPCRequest) Reset() {
	*x = ListAccountByRoleRPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountByRoleRPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountByRoleRPCRequest) ProtoMessage() {}

func (x *ListAccountByRoleRPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountByRoleRPCRequest.ProtoReflect.Descriptor instead.
func (*ListAccountByRoleRPCRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{49}
}

func (x *ListAccountByRoleRPCRequest) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ListAccountByRoleRPCRequest) GetRoles() []uint64 {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ListAccountByRoleRPCRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAccountByRoleRPCRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAccountByRoleRPCRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListAccountByRoleRPCRequest) GetDir() ListAccountByRoleRPCRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListAccountByRoleRPCRequest_DESC
}

func (x *ListAccountByRoleRPCRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAccountByRoleRPCRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListAccountByRoleRPCRequest) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

func (x *ListAccountByRoleRPCRequest) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *ListAccountByRoleRPCRequest) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

type ValidateAccountByCIFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountCifNumber string `protobuf:"bytes,1,opt,name=account_cif_number,json=accountCifNumber,proto3" json:"account_cif_number,omitempty"`
	AccountNumber    string `protobuf:"bytes,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
}

func (x *ValidateAccountByCIFRequest) Reset() {
	*x = ValidateAccountByCIFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountByCIFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountByCIFRequest) ProtoMessage() {}

func (x *ValidateAccountByCIFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountByCIFRequest.ProtoReflect.Descriptor instead.
func (*ValidateAccountByCIFRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{50}
}

func (x *ValidateAccountByCIFRequest) GetAccountCifNumber() string {
	if x != nil {
		return x.AccountCifNumber
	}
	return ""
}

func (x *ValidateAccountByCIFRequest) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

type ValidateAccountByCIFResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                                     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                                   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                                   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ValidateAccountByCIFResponse_Response `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ValidateAccountByCIFResponse) Reset() {
	*x = ValidateAccountByCIFResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountByCIFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountByCIFResponse) ProtoMessage() {}

func (x *ValidateAccountByCIFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountByCIFResponse.ProtoReflect.Descriptor instead.
func (*ValidateAccountByCIFResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{51}
}

func (x *ValidateAccountByCIFResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ValidateAccountByCIFResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidateAccountByCIFResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateAccountByCIFResponse) GetData() []*ValidateAccountByCIFResponse_Response {
	if x != nil {
		return x.Data
	}
	return nil
}

type ValidateAccountByAccountNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber string `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	CompanyID     uint64 `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *ValidateAccountByAccountNumberRequest) Reset() {
	*x = ValidateAccountByAccountNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountByAccountNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountByAccountNumberRequest) ProtoMessage() {}

func (x *ValidateAccountByAccountNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountByAccountNumberRequest.ProtoReflect.Descriptor instead.
func (*ValidateAccountByAccountNumberRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{52}
}

func (x *ValidateAccountByAccountNumberRequest) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *ValidateAccountByAccountNumberRequest) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

type ValidateAccountByAccountNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                                             `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                                           `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                                           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ValidateAccountByAccountNumberResponse_Response `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ValidateAccountByAccountNumberResponse) Reset() {
	*x = ValidateAccountByAccountNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountByAccountNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountByAccountNumberResponse) ProtoMessage() {}

func (x *ValidateAccountByAccountNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountByAccountNumberResponse.ProtoReflect.Descriptor instead.
func (*ValidateAccountByAccountNumberResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{53}
}

func (x *ValidateAccountByAccountNumberResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ValidateAccountByAccountNumberResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidateAccountByAccountNumberResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse) GetData() *ValidateAccountByAccountNumberResponse_Response {
	if x != nil {
		return x.Data
	}
	return nil
}

type AccountsByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *AccountsByUserIdRequest) Reset() {
	*x = AccountsByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountsByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsByUserIdRequest) ProtoMessage() {}

func (x *AccountsByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsByUserIdRequest.ProtoReflect.Descriptor instead.
func (*AccountsByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{54}
}

func (x *AccountsByUserIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type QlolaAccountByUserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNo   string `protobuf:"bytes,1,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	AccountName string `protobuf:"bytes,4,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountType string `protobuf:"bytes,2,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Currency    string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	UpdatedAt   string `protobuf:"bytes,20,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *QlolaAccountByUserId) Reset() {
	*x = QlolaAccountByUserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QlolaAccountByUserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QlolaAccountByUserId) ProtoMessage() {}

func (x *QlolaAccountByUserId) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QlolaAccountByUserId.ProtoReflect.Descriptor instead.
func (*QlolaAccountByUserId) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{55}
}

func (x *QlolaAccountByUserId) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *QlolaAccountByUserId) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *QlolaAccountByUserId) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *QlolaAccountByUserId) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *QlolaAccountByUserId) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type QlolaListAccountByUserIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountList []*QlolaAccountByUserId `protobuf:"bytes,1,rep,name=accountList,proto3" json:"accountList,omitempty"`
}

func (x *QlolaListAccountByUserIDResponse) Reset() {
	*x = QlolaListAccountByUserIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QlolaListAccountByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QlolaListAccountByUserIDResponse) ProtoMessage() {}

func (x *QlolaListAccountByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QlolaListAccountByUserIDResponse.ProtoReflect.Descriptor instead.
func (*QlolaListAccountByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{56}
}

func (x *QlolaListAccountByUserIDResponse) GetAccountList() []*QlolaAccountByUserId {
	if x != nil {
		return x.AccountList
	}
	return nil
}

type QlolaListAccountBrigateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string                            `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string                            `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ResponseData    *QlolaListAccountByUserIDResponse `protobuf:"bytes,3,opt,name=responseData,proto3" json:"responseData,omitempty"`
	ResponseError   string                            `protobuf:"bytes,4,opt,name=responseError,proto3" json:"responseError,omitempty"`
}

func (x *QlolaListAccountBrigateResponse) Reset() {
	*x = QlolaListAccountBrigateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QlolaListAccountBrigateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QlolaListAccountBrigateResponse) ProtoMessage() {}

func (x *QlolaListAccountBrigateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QlolaListAccountBrigateResponse.ProtoReflect.Descriptor instead.
func (*QlolaListAccountBrigateResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{57}
}

func (x *QlolaListAccountBrigateResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *QlolaListAccountBrigateResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *QlolaListAccountBrigateResponse) GetResponseData() *QlolaListAccountByUserIDResponse {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

func (x *QlolaListAccountBrigateResponse) GetResponseError() string {
	if x != nil {
		return x.ResponseError
	}
	return ""
}

type ResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountList []*QlolaGetBankAccount `protobuf:"bytes,1,rep,name=accountList,proto3" json:"accountList,omitempty"`
}

func (x *ResponseData) Reset() {
	*x = ResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseData) ProtoMessage() {}

func (x *ResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseData.ProtoReflect.Descriptor instead.
func (*ResponseData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{58}
}

func (x *ResponseData) GetAccountList() []*QlolaGetBankAccount {
	if x != nil {
		return x.AccountList
	}
	return nil
}

type QlolaGetBankAccountCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyCode string `protobuf:"bytes,1,opt,name=companyCode,proto3" json:"companyCode,omitempty"`
}

func (x *QlolaGetBankAccountCompanyRequest) Reset() {
	*x = QlolaGetBankAccountCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QlolaGetBankAccountCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QlolaGetBankAccountCompanyRequest) ProtoMessage() {}

func (x *QlolaGetBankAccountCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QlolaGetBankAccountCompanyRequest.ProtoReflect.Descriptor instead.
func (*QlolaGetBankAccountCompanyRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{59}
}

func (x *QlolaGetBankAccountCompanyRequest) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

type QlolaGetBankAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNo   string `protobuf:"bytes,1,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	AccountName string `protobuf:"bytes,4,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountType string `protobuf:"bytes,2,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Currency    string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	UpdatedAt   string `protobuf:"bytes,20,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *QlolaGetBankAccount) Reset() {
	*x = QlolaGetBankAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QlolaGetBankAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QlolaGetBankAccount) ProtoMessage() {}

func (x *QlolaGetBankAccount) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QlolaGetBankAccount.ProtoReflect.Descriptor instead.
func (*QlolaGetBankAccount) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{60}
}

func (x *QlolaGetBankAccount) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *QlolaGetBankAccount) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *QlolaGetBankAccount) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *QlolaGetBankAccount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *QlolaGetBankAccount) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type QlolaBankAccountCompanyBrigateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string        `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string        `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ResponseData    *ResponseData `protobuf:"bytes,3,opt,name=responseData,proto3" json:"responseData,omitempty"`
	ResponseErrors  string        `protobuf:"bytes,4,opt,name=responseErrors,proto3" json:"responseErrors,omitempty"`
}

func (x *QlolaBankAccountCompanyBrigateResponse) Reset() {
	*x = QlolaBankAccountCompanyBrigateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QlolaBankAccountCompanyBrigateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QlolaBankAccountCompanyBrigateResponse) ProtoMessage() {}

func (x *QlolaBankAccountCompanyBrigateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QlolaBankAccountCompanyBrigateResponse.ProtoReflect.Descriptor instead.
func (*QlolaBankAccountCompanyBrigateResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{61}
}

func (x *QlolaBankAccountCompanyBrigateResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *QlolaBankAccountCompanyBrigateResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *QlolaBankAccountCompanyBrigateResponse) GetResponseData() *ResponseData {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

func (x *QlolaBankAccountCompanyBrigateResponse) GetResponseErrors() string {
	if x != nil {
		return x.ResponseErrors
	}
	return ""
}

// UKLN
type ValidateAccountUklnDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                                      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                                    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                                    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ValidateAccountUklnDataResponse_Response `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ValidateAccountUklnDataResponse) Reset() {
	*x = ValidateAccountUklnDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountUklnDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountUklnDataResponse) ProtoMessage() {}

func (x *ValidateAccountUklnDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountUklnDataResponse.ProtoReflect.Descriptor instead.
func (*ValidateAccountUklnDataResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{62}
}

func (x *ValidateAccountUklnDataResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ValidateAccountUklnDataResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidateAccountUklnDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse) GetData() *ValidateAccountUklnDataResponse_Response {
	if x != nil {
		return x.Data
	}
	return nil
}

type BrigateAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	GrantType    string `protobuf:"bytes,3,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	Scope        string `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *BrigateAccessTokenRequest) Reset() {
	*x = BrigateAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrigateAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrigateAccessTokenRequest) ProtoMessage() {}

func (x *BrigateAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrigateAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*BrigateAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{63}
}

func (x *BrigateAccessTokenRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *BrigateAccessTokenRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *BrigateAccessTokenRequest) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (x *BrigateAccessTokenRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type GetTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken      string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn        uint64 `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshExpiresIn uint64 `protobuf:"varint,3,opt,name=refresh_expires_in,json=refreshExpiresIn,proto3" json:"refresh_expires_in,omitempty"`
	RefreshToken     string `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	TokenType        string `protobuf:"bytes,5,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	NotBeforePolicy  uint64 `protobuf:"varint,6,opt,name=not_before_policy,json=not-before-policy,proto3" json:"not_before_policy,omitempty"`
	Scope            string `protobuf:"bytes,7,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *GetTokenResponse) Reset() {
	*x = GetTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenResponse) ProtoMessage() {}

func (x *GetTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenResponse.ProtoReflect.Descriptor instead.
func (*GetTokenResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{64}
}

func (x *GetTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetTokenResponse) GetExpiresIn() uint64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *GetTokenResponse) GetRefreshExpiresIn() uint64 {
	if x != nil {
		return x.RefreshExpiresIn
	}
	return 0
}

func (x *GetTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *GetTokenResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *GetTokenResponse) GetNotBeforePolicy() uint64 {
	if x != nil {
		return x.NotBeforePolicy
	}
	return 0
}

func (x *GetTokenResponse) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type InquiryAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TellerId      string `protobuf:"bytes,1,opt,name=teller_id,json=tellerId,proto3" json:"teller_id,omitempty"`
	AccountNumber string `protobuf:"bytes,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	CountryCode   string `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
}

func (x *InquiryAccountRequest) Reset() {
	*x = InquiryAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquiryAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquiryAccountRequest) ProtoMessage() {}

func (x *InquiryAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquiryAccountRequest.ProtoReflect.Descriptor instead.
func (*InquiryAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{65}
}

func (x *InquiryAccountRequest) GetTellerId() string {
	if x != nil {
		return x.TellerId
	}
	return ""
}

func (x *InquiryAccountRequest) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *InquiryAccountRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type InquiryAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerNumber   string `protobuf:"bytes,1,opt,name=customerNumber,proto3" json:"customerNumber,omitempty"`
	AccountNumber    string `protobuf:"bytes,2,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AvailableBalance string `protobuf:"bytes,3,opt,name=availableBalance,proto3" json:"availableBalance,omitempty"`
	AccountType      string `protobuf:"bytes,4,opt,name=accountType,proto3" json:"accountType,omitempty"`
	BranchCode       string `protobuf:"bytes,5,opt,name=branchCode,proto3" json:"branchCode,omitempty"`
	Currency         string `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	OpeningDate      string `protobuf:"bytes,7,opt,name=openingDate,proto3" json:"openingDate,omitempty"`
	ProductGroup     string `protobuf:"bytes,8,opt,name=productGroup,proto3" json:"productGroup,omitempty"`
	ProductName      string `protobuf:"bytes,9,opt,name=productName,proto3" json:"productName,omitempty"`
	Status           string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	CurrentBalance   string `protobuf:"bytes,11,opt,name=currentBalance,proto3" json:"currentBalance,omitempty"`
	ShortName        string `protobuf:"bytes,12,opt,name=shortName,proto3" json:"shortName,omitempty"`
}

func (x *InquiryAccount) Reset() {
	*x = InquiryAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquiryAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquiryAccount) ProtoMessage() {}

func (x *InquiryAccount) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquiryAccount.ProtoReflect.Descriptor instead.
func (*InquiryAccount) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{66}
}

func (x *InquiryAccount) GetCustomerNumber() string {
	if x != nil {
		return x.CustomerNumber
	}
	return ""
}

func (x *InquiryAccount) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *InquiryAccount) GetAvailableBalance() string {
	if x != nil {
		return x.AvailableBalance
	}
	return ""
}

func (x *InquiryAccount) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *InquiryAccount) GetBranchCode() string {
	if x != nil {
		return x.BranchCode
	}
	return ""
}

func (x *InquiryAccount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *InquiryAccount) GetOpeningDate() string {
	if x != nil {
		return x.OpeningDate
	}
	return ""
}

func (x *InquiryAccount) GetProductGroup() string {
	if x != nil {
		return x.ProductGroup
	}
	return ""
}

func (x *InquiryAccount) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *InquiryAccount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InquiryAccount) GetCurrentBalance() string {
	if x != nil {
		return x.CurrentBalance
	}
	return ""
}

func (x *InquiryAccount) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

type InquiryAccountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InquiryAccount []*InquiryAccount `protobuf:"bytes,1,rep,name=inquiryAccount,proto3" json:"inquiryAccount,omitempty"`
}

func (x *InquiryAccountData) Reset() {
	*x = InquiryAccountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquiryAccountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquiryAccountData) ProtoMessage() {}

func (x *InquiryAccountData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquiryAccountData.ProtoReflect.Descriptor instead.
func (*InquiryAccountData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{67}
}

func (x *InquiryAccountData) GetInquiryAccount() []*InquiryAccount {
	if x != nil {
		return x.InquiryAccount
	}
	return nil
}

type InquiryAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *InquiryAccountData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InquiryAccountResponse) Reset() {
	*x = InquiryAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquiryAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquiryAccountResponse) ProtoMessage() {}

func (x *InquiryAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquiryAccountResponse.ProtoReflect.Descriptor instead.
func (*InquiryAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{68}
}

func (x *InquiryAccountResponse) GetData() *InquiryAccountData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ValidateAccountWithoutSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNo   string `protobuf:"bytes,1,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	Remark      string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	ProductName string `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"`
	CompanyId   uint64 `protobuf:"varint,4,opt,name=companyId,proto3" json:"companyId,omitempty"`
	CountryCode string `protobuf:"bytes,5,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	Type        string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	UserId      uint64 `protobuf:"varint,7,opt,name=userId,proto3" json:"userId,omitempty"`
	Username    string `protobuf:"bytes,8,opt,name=username,proto3" json:"username,omitempty"`
	UserType    string `protobuf:"bytes,9,opt,name=userType,proto3" json:"userType,omitempty"`
	UserRegion  string `protobuf:"bytes,10,opt,name=userRegion,proto3" json:"userRegion,omitempty"`
}

func (x *ValidateAccountWithoutSessionRequest) Reset() {
	*x = ValidateAccountWithoutSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountWithoutSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountWithoutSessionRequest) ProtoMessage() {}

func (x *ValidateAccountWithoutSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountWithoutSessionRequest.ProtoReflect.Descriptor instead.
func (*ValidateAccountWithoutSessionRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{69}
}

func (x *ValidateAccountWithoutSessionRequest) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *ValidateAccountWithoutSessionRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ValidateAccountWithoutSessionRequest) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ValidateAccountWithoutSessionRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *ValidateAccountWithoutSessionRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *ValidateAccountWithoutSessionRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ValidateAccountWithoutSessionRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ValidateAccountWithoutSessionRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ValidateAccountWithoutSessionRequest) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *ValidateAccountWithoutSessionRequest) GetUserRegion() string {
	if x != nil {
		return x.UserRegion
	}
	return ""
}

type ValidateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNo   string `protobuf:"bytes,1,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	Remark      string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	ProductName string `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"`
	CompanyId   uint64 `protobuf:"varint,4,opt,name=companyId,proto3" json:"companyId,omitempty"`
	CountryCode string `protobuf:"bytes,5,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	Type        string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ValidateAccountRequest) Reset() {
	*x = ValidateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountRequest) ProtoMessage() {}

func (x *ValidateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountRequest.ProtoReflect.Descriptor instead.
func (*ValidateAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{70}
}

func (x *ValidateAccountRequest) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *ValidateAccountRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ValidateAccountRequest) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ValidateAccountRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *ValidateAccountRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *ValidateAccountRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ValidateAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                              `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                            `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ValidateAccountResponse_Response `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ValidateAccountResponse) Reset() {
	*x = ValidateAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountResponse) ProtoMessage() {}

func (x *ValidateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountResponse.ProtoReflect.Descriptor instead.
func (*ValidateAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{71}
}

func (x *ValidateAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ValidateAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidateAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateAccountResponse) GetData() *ValidateAccountResponse_Response {
	if x != nil {
		return x.Data
	}
	return nil
}

type ValidateAccountDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                                  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                                `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ValidateAccountDataResponse_Response `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ValidateAccountDataResponse) Reset() {
	*x = ValidateAccountDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountDataResponse) ProtoMessage() {}

func (x *ValidateAccountDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountDataResponse.ProtoReflect.Descriptor instead.
func (*ValidateAccountDataResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{72}
}

func (x *ValidateAccountDataResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ValidateAccountDataResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidateAccountDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateAccountDataResponse) GetData() *ValidateAccountDataResponse_Response {
	if x != nil {
		return x.Data
	}
	return nil
}

type TempGenToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role TempGenToken_Role `protobuf:"varint,1,opt,name=role,proto3,enum=account.service.v1.TempGenToken_Role" json:"role,omitempty"`
}

func (x *TempGenToken) Reset() {
	*x = TempGenToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TempGenToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempGenToken) ProtoMessage() {}

func (x *TempGenToken) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempGenToken.ProtoReflect.Descriptor instead.
func (*TempGenToken) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{73}
}

func (x *TempGenToken) GetRole() TempGenToken_Role {
	if x != nil {
		return x.Role
	}
	return TempGenToken_bankadmin
}

type GetRDNAccountByRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId    uint64    `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Dir       Direction `protobuf:"varint,2,opt,name=dir,proto3,enum=account.service.v1.Direction" json:"dir,omitempty"`
	Filter    string    `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit     int32     `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Page      int32     `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	ProcessId string    `protobuf:"bytes,6,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	Query     string    `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	Sort      string    `protobuf:"bytes,8,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *GetRDNAccountByRoleRequest) Reset() {
	*x = GetRDNAccountByRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountByRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountByRoleRequest) ProtoMessage() {}

func (x *GetRDNAccountByRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountByRoleRequest.ProtoReflect.Descriptor instead.
func (*GetRDNAccountByRoleRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{74}
}

func (x *GetRDNAccountByRoleRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *GetRDNAccountByRoleRequest) GetDir() Direction {
	if x != nil {
		return x.Dir
	}
	return Direction_UNKNOWN_DIRECTION
}

func (x *GetRDNAccountByRoleRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetRDNAccountByRoleRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRDNAccountByRoleRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRDNAccountByRoleRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *GetRDNAccountByRoleRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetRDNAccountByRoleRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type GetRDNAccountByUserRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dir       Direction `protobuf:"varint,1,opt,name=dir,proto3,enum=account.service.v1.Direction" json:"dir,omitempty"`
	Filter    string    `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit     int32     `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page      int32     `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	ProcessId string    `protobuf:"bytes,5,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	Query     string    `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	Sort      string    `protobuf:"bytes,7,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *GetRDNAccountByUserRoleRequest) Reset() {
	*x = GetRDNAccountByUserRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountByUserRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountByUserRoleRequest) ProtoMessage() {}

func (x *GetRDNAccountByUserRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountByUserRoleRequest.ProtoReflect.Descriptor instead.
func (*GetRDNAccountByUserRoleRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{75}
}

func (x *GetRDNAccountByUserRoleRequest) GetDir() Direction {
	if x != nil {
		return x.Dir
	}
	return Direction_UNKNOWN_DIRECTION
}

func (x *GetRDNAccountByUserRoleRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetRDNAccountByUserRoleRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRDNAccountByUserRoleRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRDNAccountByUserRoleRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *GetRDNAccountByUserRoleRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetRDNAccountByUserRoleRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type GetRDNAccountByUserRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                               `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*GetRDNAccountByRoleResponseData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination                        `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetRDNAccountByUserRoleResponse) Reset() {
	*x = GetRDNAccountByUserRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountByUserRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountByUserRoleResponse) ProtoMessage() {}

func (x *GetRDNAccountByUserRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountByUserRoleResponse.ProtoReflect.Descriptor instead.
func (*GetRDNAccountByUserRoleResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{76}
}

func (x *GetRDNAccountByUserRoleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetRDNAccountByUserRoleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRDNAccountByUserRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRDNAccountByUserRoleResponse) GetData() []*GetRDNAccountByRoleResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetRDNAccountByUserRoleResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetRDNAccountByRoleResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint64                 `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountName   string                 `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountNumber string                 `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountAlias  string                 `protobuf:"bytes,4,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountType   string                 `protobuf:"bytes,5,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Currency      string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	AccessLevel   string                 `protobuf:"bytes,7,opt,name=accessLevel,proto3" json:"accessLevel,omitempty"`
	AccountStatus string                 `protobuf:"bytes,8,opt,name=accountStatus,proto3" json:"accountStatus,omitempty"`
	CompanyId     uint64                 `protobuf:"varint,9,opt,name=companyId,proto3" json:"companyId,omitempty"`
	CompanyName   string                 `protobuf:"bytes,10,opt,name=companyName,proto3" json:"companyName,omitempty"`
	CompanyCode   string                 `protobuf:"bytes,11,opt,name=companyCode,proto3" json:"companyCode,omitempty"`
	CountryName   string                 `protobuf:"bytes,12,opt,name=countryName,proto3" json:"countryName,omitempty"`
	CountryCode   string                 `protobuf:"bytes,13,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	Cif           string                 `protobuf:"bytes,14,opt,name=cif,proto3" json:"cif,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ProductCode   string                 `protobuf:"bytes,18,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`
	StatusCode    string                 `protobuf:"bytes,19,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
}

func (x *GetRDNAccountByRoleResponseData) Reset() {
	*x = GetRDNAccountByRoleResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountByRoleResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountByRoleResponseData) ProtoMessage() {}

func (x *GetRDNAccountByRoleResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountByRoleResponseData.ProtoReflect.Descriptor instead.
func (*GetRDNAccountByRoleResponseData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{77}
}

func (x *GetRDNAccountByRoleResponseData) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *GetRDNAccountByRoleResponseData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *GetRDNAccountByRoleResponseData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetRDNAccountByRoleResponseData) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *GetRDNAccountByRoleResponseData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetRDNAccountByRoleResponseData) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *GetRDNAccountByRoleResponseData) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

type GetRDNAccountByRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                               `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*GetRDNAccountByRoleResponseData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination                        `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetRDNAccountByRoleResponse) Reset() {
	*x = GetRDNAccountByRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountByRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountByRoleResponse) ProtoMessage() {}

func (x *GetRDNAccountByRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountByRoleResponse.ProtoReflect.Descriptor instead.
func (*GetRDNAccountByRoleResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{78}
}

func (x *GetRDNAccountByRoleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetRDNAccountByRoleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRDNAccountByRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRDNAccountByRoleResponse) GetData() []*GetRDNAccountByRoleResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetRDNAccountByRoleResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetRDNAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dir            Direction                 `protobuf:"varint,1,opt,name=dir,proto3,enum=account.service.v1.Direction" json:"dir,omitempty"`
	Filter         string                    `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit          int32                     `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page           int32                     `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	ProcessId      string                    `protobuf:"bytes,5,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	Query          string                    `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	Sort           string                    `protobuf:"bytes,7,opt,name=sort,proto3" json:"sort,omitempty"`
	SearchCriteria *RDNAccountSearchCriteria `protobuf:"bytes,8,opt,name=search_criteria,json=searchCriteria,proto3" json:"search_criteria,omitempty"`
}

func (x *GetRDNAccountRequest) Reset() {
	*x = GetRDNAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountRequest) ProtoMessage() {}

func (x *GetRDNAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountRequest.ProtoReflect.Descriptor instead.
func (*GetRDNAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{79}
}

func (x *GetRDNAccountRequest) GetDir() Direction {
	if x != nil {
		return x.Dir
	}
	return Direction_UNKNOWN_DIRECTION
}

func (x *GetRDNAccountRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetRDNAccountRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRDNAccountRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRDNAccountRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *GetRDNAccountRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetRDNAccountRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetRDNAccountRequest) GetSearchCriteria() *RDNAccountSearchCriteria {
	if x != nil {
		return x.SearchCriteria
	}
	return nil
}

type RDNAccountSearchCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cif                string `protobuf:"bytes,1,opt,name=cif,proto3" json:"cif,omitempty"`
	CompanyId          string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CompanyCode        string `protobuf:"bytes,3,opt,name=company_code,json=companyCode,proto3" json:"company_code,omitempty"`
	CompanyName        string `protobuf:"bytes,4,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	AccountName        string `protobuf:"bytes,5,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountNumber      string `protobuf:"bytes,6,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	AccountCurrency    string `protobuf:"bytes,7,opt,name=account_currency,json=accountCurrency,proto3" json:"account_currency,omitempty"`
	LastUpdated        string `protobuf:"bytes,8,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Status             string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	KodePerusahaanEfek string `protobuf:"bytes,10,opt,name=kode_perusahaan_efek,json=kodePerusahaanEfek,proto3" json:"kode_perusahaan_efek,omitempty"`
}

func (x *RDNAccountSearchCriteria) Reset() {
	*x = RDNAccountSearchCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RDNAccountSearchCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RDNAccountSearchCriteria) ProtoMessage() {}

func (x *RDNAccountSearchCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RDNAccountSearchCriteria.ProtoReflect.Descriptor instead.
func (*RDNAccountSearchCriteria) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{80}
}

func (x *RDNAccountSearchCriteria) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *RDNAccountSearchCriteria) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *RDNAccountSearchCriteria) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *RDNAccountSearchCriteria) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *RDNAccountSearchCriteria) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *RDNAccountSearchCriteria) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *RDNAccountSearchCriteria) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *RDNAccountSearchCriteria) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *RDNAccountSearchCriteria) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RDNAccountSearchCriteria) GetKodePerusahaanEfek() string {
	if x != nil {
		return x.KodePerusahaanEfek
	}
	return ""
}

type GetRDNAccountResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId          uint64                 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountName        string                 `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountNumber      string                 `protobuf:"bytes,3,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	CompanyName        string                 `protobuf:"bytes,4,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	CompanyId          uint64                 `protobuf:"varint,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CompanyCode        string                 `protobuf:"bytes,6,opt,name=company_code,json=companyCode,proto3" json:"company_code,omitempty"`
	CountryCode        string                 `protobuf:"bytes,7,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	CountryName        string                 `protobuf:"bytes,8,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	Currency           string                 `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	LastUpdated        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Cif                string                 `protobuf:"bytes,11,opt,name=cif,proto3" json:"cif,omitempty"`
	KodePerusahaanEfek string                 `protobuf:"bytes,12,opt,name=kode_perusahaan_efek,json=kodePerusahaanEfek,proto3" json:"kode_perusahaan_efek,omitempty"`
}

func (x *GetRDNAccountResponseData) Reset() {
	*x = GetRDNAccountResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountResponseData) ProtoMessage() {}

func (x *GetRDNAccountResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountResponseData.ProtoReflect.Descriptor instead.
func (*GetRDNAccountResponseData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{81}
}

func (x *GetRDNAccountResponseData) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetRDNAccountResponseData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetRDNAccountResponseData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *GetRDNAccountResponseData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *GetRDNAccountResponseData) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *GetRDNAccountResponseData) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *GetRDNAccountResponseData) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetRDNAccountResponseData) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *GetRDNAccountResponseData) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetRDNAccountResponseData) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *GetRDNAccountResponseData) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *GetRDNAccountResponseData) GetKodePerusahaanEfek() string {
	if x != nil {
		return x.KodePerusahaanEfek
	}
	return ""
}

type GetRDNAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                         `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                       `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*GetRDNAccountResponseData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination                  `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetRDNAccountResponse) Reset() {
	*x = GetRDNAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountResponse) ProtoMessage() {}

func (x *GetRDNAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountResponse.ProtoReflect.Descriptor instead.
func (*GetRDNAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{82}
}

func (x *GetRDNAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetRDNAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRDNAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRDNAccountResponse) GetData() []*GetRDNAccountResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetRDNAccountResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type InsertRDNAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RdnBankAccount *RDNBankAccountData `protobuf:"bytes,1,opt,name=rdn_bank_account,json=rdnBankAccount,proto3" json:"rdn_bank_account,omitempty"`
	RoleId         []uint64            `protobuf:"varint,2,rep,packed,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *InsertRDNAccountRequest) Reset() {
	*x = InsertRDNAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertRDNAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRDNAccountRequest) ProtoMessage() {}

func (x *InsertRDNAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRDNAccountRequest.ProtoReflect.Descriptor instead.
func (*InsertRDNAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{83}
}

func (x *InsertRDNAccountRequest) GetRdnBankAccount() *RDNBankAccountData {
	if x != nil {
		return x.RdnBankAccount
	}
	return nil
}

func (x *InsertRDNAccountRequest) GetRoleId() []uint64 {
	if x != nil {
		return x.RoleId
	}
	return nil
}

type RDNBankAccountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessLevel        string `protobuf:"bytes,1,opt,name=access_level,json=accessLevel,proto3" json:"access_level,omitempty"`
	AccountAlias       string `protobuf:"bytes,2,opt,name=account_alias,json=accountAlias,proto3" json:"account_alias,omitempty"`
	AccountCurrency    string `protobuf:"bytes,3,opt,name=account_currency,json=accountCurrency,proto3" json:"account_currency,omitempty"`
	AccountId          uint64 `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountName        string `protobuf:"bytes,5,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountNumber      string `protobuf:"bytes,6,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	AccountStatus      string `protobuf:"bytes,7,opt,name=account_status,json=accountStatus,proto3" json:"account_status,omitempty"`
	AccountType        string `protobuf:"bytes,8,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	CompanyId          uint64 `protobuf:"varint,9,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CompanyName        string `protobuf:"bytes,10,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	CompanyCode        string `protobuf:"bytes,11,opt,name=company_code,json=companyCode,proto3" json:"company_code,omitempty"`
	CountryName        string `protobuf:"bytes,12,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	CountryCode        string `protobuf:"bytes,13,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Cif                string `protobuf:"bytes,14,opt,name=cif,proto3" json:"cif,omitempty"`
	CreatedAt          string `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DeletedAt          string `protobuf:"bytes,16,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	UpdatedAt          string `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ProductCode        string `protobuf:"bytes,18,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`
	StatusCode         string `protobuf:"bytes,19,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	KodePerusahaanEfek string `protobuf:"bytes,20,opt,name=kode_perusahaan_efek,json=kodePerusahaanEfek,proto3" json:"kode_perusahaan_efek,omitempty"`
}

func (x *RDNBankAccountData) Reset() {
	*x = RDNBankAccountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RDNBankAccountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RDNBankAccountData) ProtoMessage() {}

func (x *RDNBankAccountData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RDNBankAccountData.ProtoReflect.Descriptor instead.
func (*RDNBankAccountData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{84}
}

func (x *RDNBankAccountData) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *RDNBankAccountData) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *RDNBankAccountData) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *RDNBankAccountData) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *RDNBankAccountData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *RDNBankAccountData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *RDNBankAccountData) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *RDNBankAccountData) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *RDNBankAccountData) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *RDNBankAccountData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *RDNBankAccountData) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *RDNBankAccountData) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *RDNBankAccountData) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *RDNBankAccountData) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *RDNBankAccountData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RDNBankAccountData) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *RDNBankAccountData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *RDNBankAccountData) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *RDNBankAccountData) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *RDNBankAccountData) GetKodePerusahaanEfek() string {
	if x != nil {
		return x.KodePerusahaanEfek
	}
	return ""
}

type InsertRDNAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InsertRDNAccountResponse) Reset() {
	*x = InsertRDNAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertRDNAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRDNAccountResponse) ProtoMessage() {}

func (x *InsertRDNAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRDNAccountResponse.ProtoReflect.Descriptor instead.
func (*InsertRDNAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{85}
}

func (x *InsertRDNAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *InsertRDNAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InsertRDNAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GlobalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request string `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GlobalRequest) Reset() {
	*x = GlobalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalRequest) ProtoMessage() {}

func (x *GlobalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalRequest.ProtoReflect.Descriptor instead.
func (*GlobalRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{86}
}

func (x *GlobalRequest) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

type SubmitFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SubmitFileResponseData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SubmitFileResponse) Reset() {
	*x = SubmitFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitFileResponse) ProtoMessage() {}

func (x *SubmitFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitFileResponse.ProtoReflect.Descriptor instead.
func (*SubmitFileResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{87}
}

func (x *SubmitFileResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *SubmitFileResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SubmitFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SubmitFileResponse) GetData() *SubmitFileResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SubmitFileResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId string `protobuf:"bytes,1,opt,name=batch_id,proto3" json:"batch_id,omitempty"`
}

func (x *SubmitFileResponseData) Reset() {
	*x = SubmitFileResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitFileResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitFileResponseData) ProtoMessage() {}

func (x *SubmitFileResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitFileResponseData.ProtoReflect.Descriptor instead.
func (*SubmitFileResponseData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{88}
}

func (x *SubmitFileResponseData) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

type CreateUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadKey       string `protobuf:"bytes,1,opt,name=uploadKey,proto3" json:"uploadKey,omitempty"`
	CompanyId       string `protobuf:"bytes,2,opt,name=companyId,proto3" json:"companyId,omitempty"`
	FileDescription string `protobuf:"bytes,3,opt,name=fileDescription,proto3" json:"fileDescription,omitempty"`
	FileName        string `protobuf:"bytes,4,opt,name=fileName,proto3" json:"fileName,omitempty"`
	CompanyName     string `protobuf:"bytes,5,opt,name=companyName,proto3" json:"companyName,omitempty"`
}

func (x *CreateUploadRequest) Reset() {
	*x = CreateUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUploadRequest) ProtoMessage() {}

func (x *CreateUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUploadRequest.ProtoReflect.Descriptor instead.
func (*CreateUploadRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{89}
}

func (x *CreateUploadRequest) GetUploadKey() string {
	if x != nil {
		return x.UploadKey
	}
	return ""
}

func (x *CreateUploadRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CreateUploadRequest) GetFileDescription() string {
	if x != nil {
		return x.FileDescription
	}
	return ""
}

func (x *CreateUploadRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateUploadRequest) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

type FileUploadsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileInfo *FileDetailMinio     `protobuf:"bytes,1,opt,name=fileInfo,proto3" json:"fileInfo,omitempty"`
	DataInfo *UploadAccountBatchs `protobuf:"bytes,2,opt,name=dataInfo,proto3" json:"dataInfo,omitempty"`
}

func (x *FileUploadsData) Reset() {
	*x = FileUploadsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadsData) ProtoMessage() {}

func (x *FileUploadsData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadsData.ProtoReflect.Descriptor instead.
func (*FileUploadsData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{90}
}

func (x *FileUploadsData) GetFileInfo() *FileDetailMinio {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *FileUploadsData) GetDataInfo() *UploadAccountBatchs {
	if x != nil {
		return x.DataInfo
	}
	return nil
}

type FileDetailMinio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName    string           `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Size        string           `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Extension   string           `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
	TotalRecord string           `protobuf:"bytes,4,opt,name=total_record,json=totalRecord,proto3" json:"total_record,omitempty"`
	ObjectInfo  *MinioObjectInfo `protobuf:"bytes,5,opt,name=object_info,json=objectInfo,proto3" json:"object_info,omitempty"`
}

func (x *FileDetailMinio) Reset() {
	*x = FileDetailMinio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDetailMinio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDetailMinio) ProtoMessage() {}

func (x *FileDetailMinio) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDetailMinio.ProtoReflect.Descriptor instead.
func (*FileDetailMinio) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{91}
}

func (x *FileDetailMinio) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileDetailMinio) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *FileDetailMinio) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *FileDetailMinio) GetTotalRecord() string {
	if x != nil {
		return x.TotalRecord
	}
	return ""
}

func (x *FileDetailMinio) GetObjectInfo() *MinioObjectInfo {
	if x != nil {
		return x.ObjectInfo
	}
	return nil
}

type MinioObjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key              string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ETag             string                 `protobuf:"bytes,2,opt,name=e_tag,json=eTag,proto3" json:"e_tag,omitempty"`
	Size             int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Bucket           string                 `protobuf:"bytes,4,opt,name=bucket,proto3" json:"bucket,omitempty"`
	LastModified     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	Location         string                 `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	VersionId        string                 `protobuf:"bytes,7,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Expiration       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expiration,proto3" json:"expiration,omitempty"`
	ExpirationRuleId string                 `protobuf:"bytes,9,opt,name=expiration_rule_id,json=expirationRuleID,proto3" json:"expiration_rule_id,omitempty"`
}

func (x *MinioObjectInfo) Reset() {
	*x = MinioObjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinioObjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinioObjectInfo) ProtoMessage() {}

func (x *MinioObjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinioObjectInfo.ProtoReflect.Descriptor instead.
func (*MinioObjectInfo) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{92}
}

func (x *MinioObjectInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MinioObjectInfo) GetETag() string {
	if x != nil {
		return x.ETag
	}
	return ""
}

func (x *MinioObjectInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MinioObjectInfo) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *MinioObjectInfo) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

func (x *MinioObjectInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *MinioObjectInfo) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *MinioObjectInfo) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *MinioObjectInfo) GetExpirationRuleId() string {
	if x != nil {
		return x.ExpirationRuleId
	}
	return ""
}

type GetListBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*UploadAccountBatchData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination               `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetListBatchResponse) Reset() {
	*x = GetListBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListBatchResponse) ProtoMessage() {}

func (x *GetListBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListBatchResponse.ProtoReflect.Descriptor instead.
func (*GetListBatchResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{93}
}

func (x *GetListBatchResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetListBatchResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetListBatchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetListBatchResponse) GetData() []*UploadAccountBatchData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetListBatchResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetListBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit              int32                        `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page               int32                        `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort               GetListBatchRequest_Sort     `protobuf:"varint,3,opt,name=sort,proto3,enum=account.service.v1.GetListBatchRequest_Sort" json:"sort,omitempty"`
	Dir                GetListBatchRequestDirection `protobuf:"varint,4,opt,name=dir,proto3,enum=account.service.v1.GetListBatchRequestDirection" json:"dir,omitempty"`
	Filter             *UploadAccountBatchData      `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	Query              string                       `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	FilterOr           string                       `protobuf:"bytes,7,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
	DownloadFileFormat string                       `protobuf:"bytes,8,opt,name=downloadFileFormat,proto3" json:"downloadFileFormat,omitempty"`
}

func (x *GetListBatchRequest) Reset() {
	*x = GetListBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListBatchRequest) ProtoMessage() {}

func (x *GetListBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListBatchRequest.ProtoReflect.Descriptor instead.
func (*GetListBatchRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{94}
}

func (x *GetListBatchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListBatchRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListBatchRequest) GetSort() GetListBatchRequest_Sort {
	if x != nil {
		return x.Sort
	}
	return GetListBatchRequest_batchID
}

func (x *GetListBatchRequest) GetDir() GetListBatchRequestDirection {
	if x != nil {
		return x.Dir
	}
	return GetListBatchRequest_DESC
}

func (x *GetListBatchRequest) GetFilter() *UploadAccountBatchData {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetListBatchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetListBatchRequest) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

func (x *GetListBatchRequest) GetDownloadFileFormat() string {
	if x != nil {
		return x.DownloadFileFormat
	}
	return ""
}

type UploadAccountBatchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchID          string `protobuf:"bytes,1,opt,name=batchID,proto3" json:"batchID,omitempty"`
	CompanyName      string `protobuf:"bytes,2,opt,name=companyName,proto3" json:"companyName,omitempty"`
	FileDescription  string `protobuf:"bytes,3,opt,name=fileDescription,proto3" json:"fileDescription,omitempty"`
	FileFormat       string `protobuf:"bytes,4,opt,name=fileFormat,proto3" json:"fileFormat,omitempty"`
	TotalRecords     string `protobuf:"bytes,5,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
	TotalDataValid   string `protobuf:"bytes,6,opt,name=totalDataValid,proto3" json:"totalDataValid,omitempty"`
	TotalDatainvalid string `protobuf:"bytes,7,opt,name=totalDatainvalid,proto3" json:"totalDatainvalid,omitempty"`
	CreatedAt        string `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy        string `protobuf:"bytes,9,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	Status           string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	FileName         string `protobuf:"bytes,11,opt,name=fileName,proto3" json:"fileName,omitempty"`
	CompanyID        string `protobuf:"bytes,12,opt,name=companyID,proto3" json:"companyID,omitempty"`
	ErrorMessage     string `protobuf:"bytes,13,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *UploadAccountBatchData) Reset() {
	*x = UploadAccountBatchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAccountBatchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAccountBatchData) ProtoMessage() {}

func (x *UploadAccountBatchData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAccountBatchData.ProtoReflect.Descriptor instead.
func (*UploadAccountBatchData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{95}
}

func (x *UploadAccountBatchData) GetBatchID() string {
	if x != nil {
		return x.BatchID
	}
	return ""
}

func (x *UploadAccountBatchData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *UploadAccountBatchData) GetFileDescription() string {
	if x != nil {
		return x.FileDescription
	}
	return ""
}

func (x *UploadAccountBatchData) GetFileFormat() string {
	if x != nil {
		return x.FileFormat
	}
	return ""
}

func (x *UploadAccountBatchData) GetTotalRecords() string {
	if x != nil {
		return x.TotalRecords
	}
	return ""
}

func (x *UploadAccountBatchData) GetTotalDataValid() string {
	if x != nil {
		return x.TotalDataValid
	}
	return ""
}

func (x *UploadAccountBatchData) GetTotalDatainvalid() string {
	if x != nil {
		return x.TotalDatainvalid
	}
	return ""
}

func (x *UploadAccountBatchData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UploadAccountBatchData) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *UploadAccountBatchData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UploadAccountBatchData) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadAccountBatchData) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *UploadAccountBatchData) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CheckFileNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename  string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	CompanyId string `protobuf:"bytes,2,opt,name=companyId,proto3" json:"companyId,omitempty"`
}

func (x *CheckFileNameRequest) Reset() {
	*x = CheckFileNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFileNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFileNameRequest) ProtoMessage() {}

func (x *CheckFileNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFileNameRequest.ProtoReflect.Descriptor instead.
func (*CheckFileNameRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{96}
}

func (x *CheckFileNameRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *CheckFileNameRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type CheckFileNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CheckFileNameResponse) Reset() {
	*x = CheckFileNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFileNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFileNameResponse) ProtoMessage() {}

func (x *CheckFileNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFileNameResponse.ProtoReflect.Descriptor instead.
func (*CheckFileNameResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{97}
}

func (x *CheckFileNameResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CheckFileNameResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckFileNameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetDetailBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId string `protobuf:"bytes,1,opt,name=batchId,proto3" json:"batchId,omitempty"`
}

func (x *GetDetailBatchRequest) Reset() {
	*x = GetDetailBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailBatchRequest) ProtoMessage() {}

func (x *GetDetailBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailBatchRequest.ProtoReflect.Descriptor instead.
func (*GetDetailBatchRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{98}
}

func (x *GetDetailBatchRequest) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

type GetDetailBatchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId         string          `protobuf:"bytes,1,opt,name=batchId,proto3" json:"batchId,omitempty"`
	FileDescription string          `protobuf:"bytes,2,opt,name=fileDescription,proto3" json:"fileDescription,omitempty"`
	FileName        string          `protobuf:"bytes,3,opt,name=fileName,proto3" json:"fileName,omitempty"`
	TotalRecord     int32           `protobuf:"varint,4,opt,name=totalRecord,proto3" json:"totalRecord,omitempty"`
	TotalValid      int32           `protobuf:"varint,5,opt,name=totalValid,proto3" json:"totalValid,omitempty"`
	TotalInvalid    int32           `protobuf:"varint,6,opt,name=totalInvalid,proto3" json:"totalInvalid,omitempty"`
	CompanyName     string          `protobuf:"bytes,7,opt,name=companyName,proto3" json:"companyName,omitempty"`
	Status          string          `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	CompanyId       string          `protobuf:"bytes,9,opt,name=companyId,proto3" json:"companyId,omitempty"`
	StatusApp       *StatusApproval `protobuf:"bytes,10,opt,name=statusApp,proto3" json:"statusApp,omitempty"`
	CreatedAt       string          `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy       string          `protobuf:"bytes,12,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
}

func (x *GetDetailBatchData) Reset() {
	*x = GetDetailBatchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailBatchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailBatchData) ProtoMessage() {}

func (x *GetDetailBatchData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailBatchData.ProtoReflect.Descriptor instead.
func (*GetDetailBatchData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{99}
}

func (x *GetDetailBatchData) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *GetDetailBatchData) GetFileDescription() string {
	if x != nil {
		return x.FileDescription
	}
	return ""
}

func (x *GetDetailBatchData) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *GetDetailBatchData) GetTotalRecord() int32 {
	if x != nil {
		return x.TotalRecord
	}
	return 0
}

func (x *GetDetailBatchData) GetTotalValid() int32 {
	if x != nil {
		return x.TotalValid
	}
	return 0
}

func (x *GetDetailBatchData) GetTotalInvalid() int32 {
	if x != nil {
		return x.TotalInvalid
	}
	return 0
}

func (x *GetDetailBatchData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *GetDetailBatchData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDetailBatchData) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *GetDetailBatchData) GetStatusApp() *StatusApproval {
	if x != nil {
		return x.StatusApp
	}
	return nil
}

func (x *GetDetailBatchData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetDetailBatchData) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type StatusApproval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalComplete  int32 `protobuf:"varint,1,opt,name=total_complete,json=totalComplete,proto3" json:"total_complete,omitempty"`
	TotalSuccess   int32 `protobuf:"varint,2,opt,name=total_success,json=totalSuccess,proto3" json:"total_success,omitempty"`
	TotalUnsuccess int32 `protobuf:"varint,3,opt,name=total_unsuccess,json=totalUnsuccess,proto3" json:"total_unsuccess,omitempty"`
}

func (x *StatusApproval) Reset() {
	*x = StatusApproval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusApproval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusApproval) ProtoMessage() {}

func (x *StatusApproval) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusApproval.ProtoReflect.Descriptor instead.
func (*StatusApproval) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{100}
}

func (x *StatusApproval) GetTotalComplete() int32 {
	if x != nil {
		return x.TotalComplete
	}
	return 0
}

func (x *StatusApproval) GetTotalSuccess() int32 {
	if x != nil {
		return x.TotalSuccess
	}
	return 0
}

func (x *StatusApproval) GetTotalUnsuccess() int32 {
	if x != nil {
		return x.TotalUnsuccess
	}
	return 0
}

type GetDetailBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GetDetailBatchData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDetailBatchResponse) Reset() {
	*x = GetDetailBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailBatchResponse) ProtoMessage() {}

func (x *GetDetailBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailBatchResponse.ProtoReflect.Descriptor instead.
func (*GetDetailBatchResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{101}
}

func (x *GetDetailBatchResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetDetailBatchResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDetailBatchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDetailBatchResponse) GetData() *GetDetailBatchData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDetailAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit       int32                            `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page        int32                            `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort        GetDetailAccountRequest_Sort     `protobuf:"varint,3,opt,name=sort,proto3,enum=account.service.v1.GetDetailAccountRequest_Sort" json:"sort,omitempty"`
	Dir         GetDetailAccountRequestDirection `protobuf:"varint,4,opt,name=dir,proto3,enum=account.service.v1.GetDetailAccountRequestDirection" json:"dir,omitempty"`
	Filter      *AccountDetailData               `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	Query       string                           `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	BatchId     string                           `protobuf:"bytes,7,opt,name=batchId,proto3" json:"batchId,omitempty"`
	CompanyName string                           `protobuf:"bytes,8,opt,name=companyName,proto3" json:"companyName,omitempty"`
	FileFormat  string                           `protobuf:"bytes,9,opt,name=fileFormat,proto3" json:"fileFormat,omitempty"`
}

func (x *GetDetailAccountRequest) Reset() {
	*x = GetDetailAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailAccountRequest) ProtoMessage() {}

func (x *GetDetailAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailAccountRequest.ProtoReflect.Descriptor instead.
func (*GetDetailAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{102}
}

func (x *GetDetailAccountRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetDetailAccountRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetDetailAccountRequest) GetSort() GetDetailAccountRequest_Sort {
	if x != nil {
		return x.Sort
	}
	return GetDetailAccountRequest_status
}

func (x *GetDetailAccountRequest) GetDir() GetDetailAccountRequestDirection {
	if x != nil {
		return x.Dir
	}
	return GetDetailAccountRequest_DESC
}

func (x *GetDetailAccountRequest) GetFilter() *AccountDetailData {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetDetailAccountRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetDetailAccountRequest) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *GetDetailAccountRequest) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *GetDetailAccountRequest) GetFileFormat() string {
	if x != nil {
		return x.FileFormat
	}
	return ""
}

type GetDetailAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                 `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32               `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*AccountDetailData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination          `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetDetailAccountResponse) Reset() {
	*x = GetDetailAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailAccountResponse) ProtoMessage() {}

func (x *GetDetailAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailAccountResponse.ProtoReflect.Descriptor instead.
func (*GetDetailAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{103}
}

func (x *GetDetailAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetDetailAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDetailAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDetailAccountResponse) GetData() []*AccountDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetDetailAccountResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AccountDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyName      string   `protobuf:"bytes,1,opt,name=companyName,proto3" json:"companyName,omitempty"`
	AccountNumber    string   `protobuf:"bytes,2,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountType      string   `protobuf:"bytes,3,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Alias            []string `protobuf:"bytes,4,rep,name=alias,proto3" json:"alias,omitempty"`
	AccessLevel      string   `protobuf:"bytes,5,opt,name=accessLevel,proto3" json:"accessLevel,omitempty"`
	AccountOwnership string   `protobuf:"bytes,6,opt,name=accountOwnership,proto3" json:"accountOwnership,omitempty"`
	Action           string   `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"`
	ErrorMessage     string   `protobuf:"bytes,8,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	Status           string   `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt        string   `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	StatusTask       string   `protobuf:"bytes,11,opt,name=statusTask,proto3" json:"statusTask,omitempty"`
}

func (x *AccountDetailData) Reset() {
	*x = AccountDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailData) ProtoMessage() {}

func (x *AccountDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailData.ProtoReflect.Descriptor instead.
func (*AccountDetailData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{104}
}

func (x *AccountDetailData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *AccountDetailData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *AccountDetailData) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *AccountDetailData) GetAlias() []string {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *AccountDetailData) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *AccountDetailData) GetAccountOwnership() string {
	if x != nil {
		return x.AccountOwnership
	}
	return ""
}

func (x *AccountDetailData) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AccountDetailData) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *AccountDetailData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AccountDetailData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AccountDetailData) GetStatusTask() string {
	if x != nil {
		return x.StatusTask
	}
	return ""
}

type ApproveBatchAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId   string      `protobuf:"bytes,1,opt,name=batchId,proto3" json:"batchId,omitempty"`
	Action    string      `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	CompanyId string      `protobuf:"bytes,3,opt,name=companyId,proto3" json:"companyId,omitempty"`
	User      *UserDataMD `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Comment   string      `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Reason    string      `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Passcode  string      `protobuf:"bytes,7,opt,name=passcode,proto3" json:"passcode,omitempty"`
}

func (x *ApproveBatchAccountRequest) Reset() {
	*x = ApproveBatchAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveBatchAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveBatchAccountRequest) ProtoMessage() {}

func (x *ApproveBatchAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveBatchAccountRequest.ProtoReflect.Descriptor instead.
func (*ApproveBatchAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{105}
}

func (x *ApproveBatchAccountRequest) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *ApproveBatchAccountRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ApproveBatchAccountRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *ApproveBatchAccountRequest) GetUser() *UserDataMD {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ApproveBatchAccountRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ApproveBatchAccountRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ApproveBatchAccountRequest) GetPasscode() string {
	if x != nil {
		return x.Passcode
	}
	return ""
}

type ApproveBatchAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ApproveBatchAccountResponse) Reset() {
	*x = ApproveBatchAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveBatchAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveBatchAccountResponse) ProtoMessage() {}

func (x *ApproveBatchAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveBatchAccountResponse.ProtoReflect.Descriptor instead.
func (*ApproveBatchAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{106}
}

func (x *ApproveBatchAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ApproveBatchAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ApproveBatchAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TaskIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *TaskIds) Reset() {
	*x = TaskIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskIds) ProtoMessage() {}

func (x *TaskIds) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskIds.ProtoReflect.Descriptor instead.
func (*TaskIds) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{107}
}

func (x *TaskIds) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type UserDataMD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID   uint64   `protobuf:"varint,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	CompanyName string   `protobuf:"bytes,2,opt,name=CompanyName,proto3" json:"CompanyName,omitempty"`
	Username    string   `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	RoleIDs     []uint64 `protobuf:"varint,4,rep,packed,name=RoleIDs,proto3" json:"RoleIDs,omitempty"`
	UserType    string   `protobuf:"bytes,5,opt,name=UserType,proto3" json:"UserType,omitempty"`
	UserID      uint64   `protobuf:"varint,6,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *UserDataMD) Reset() {
	*x = UserDataMD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataMD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataMD) ProtoMessage() {}

func (x *UserDataMD) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataMD.ProtoReflect.Descriptor instead.
func (*UserDataMD) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{108}
}

func (x *UserDataMD) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *UserDataMD) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *UserDataMD) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserDataMD) GetRoleIDs() []uint64 {
	if x != nil {
		return x.RoleIDs
	}
	return nil
}

func (x *UserDataMD) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *UserDataMD) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UpdateStatusAccountBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId       string `protobuf:"bytes,1,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	Action        string `protobuf:"bytes,2,opt,name=Action,proto3" json:"Action,omitempty"`
	Task          string `protobuf:"bytes,3,opt,name=Task,proto3" json:"Task,omitempty"`
	AccountNumber string `protobuf:"bytes,4,opt,name=AccountNumber,proto3" json:"AccountNumber,omitempty"`
}

func (x *UpdateStatusAccountBatchRequest) Reset() {
	*x = UpdateStatusAccountBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusAccountBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusAccountBatchRequest) ProtoMessage() {}

func (x *UpdateStatusAccountBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusAccountBatchRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusAccountBatchRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{109}
}

func (x *UpdateStatusAccountBatchRequest) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *UpdateStatusAccountBatchRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *UpdateStatusAccountBatchRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *UpdateStatusAccountBatchRequest) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

type UpdateStatusAccountBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateStatusAccountBatchResponse) Reset() {
	*x = UpdateStatusAccountBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusAccountBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusAccountBatchResponse) ProtoMessage() {}

func (x *UpdateStatusAccountBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusAccountBatchResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusAccountBatchResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{110}
}

func (x *UpdateStatusAccountBatchResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *UpdateStatusAccountBatchResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateStatusAccountBatchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StatusCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnProcess int32 `protobuf:"varint,1,opt,name=on_process,json=onProcess,proto3" json:"on_process,omitempty"`
}

func (x *StatusCount) Reset() {
	*x = StatusCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCount) ProtoMessage() {}

func (x *StatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCount.ProtoReflect.Descriptor instead.
func (*StatusCount) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{111}
}

func (x *StatusCount) GetOnProcess() int32 {
	if x != nil {
		return x.OnProcess
	}
	return 0
}

type MyAllowedAccountByProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleIds      []uint64 `protobuf:"varint,1,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	UserId       uint64   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProductNames []string `protobuf:"bytes,3,rep,name=product_names,json=productNames,proto3" json:"product_names,omitempty"`
	CompanyId    uint64   `protobuf:"varint,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Limit        int32    `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Page         int32    `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *MyAllowedAccountByProductsRequest) Reset() {
	*x = MyAllowedAccountByProductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyAllowedAccountByProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyAllowedAccountByProductsRequest) ProtoMessage() {}

func (x *MyAllowedAccountByProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyAllowedAccountByProductsRequest.ProtoReflect.Descriptor instead.
func (*MyAllowedAccountByProductsRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{112}
}

func (x *MyAllowedAccountByProductsRequest) GetRoleIds() []uint64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *MyAllowedAccountByProductsRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MyAllowedAccountByProductsRequest) GetProductNames() []string {
	if x != nil {
		return x.ProductNames
	}
	return nil
}

func (x *MyAllowedAccountByProductsRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *MyAllowedAccountByProductsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MyAllowedAccountByProductsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type MyAllowedAccountByProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*MyAllowedAccountByProductsResponseData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MyAllowedAccountByProductsResponse) Reset() {
	*x = MyAllowedAccountByProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyAllowedAccountByProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyAllowedAccountByProductsResponse) ProtoMessage() {}

func (x *MyAllowedAccountByProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyAllowedAccountByProductsResponse.ProtoReflect.Descriptor instead.
func (*MyAllowedAccountByProductsResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{113}
}

func (x *MyAllowedAccountByProductsResponse) GetData() []*MyAllowedAccountByProductsResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MyAllowedAccountByProductsResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductName string   `protobuf:"bytes,1,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	AccountIds  []uint64 `protobuf:"varint,2,rep,packed,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"`
}

func (x *MyAllowedAccountByProductsResponseData) Reset() {
	*x = MyAllowedAccountByProductsResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyAllowedAccountByProductsResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyAllowedAccountByProductsResponseData) ProtoMessage() {}

func (x *MyAllowedAccountByProductsResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyAllowedAccountByProductsResponseData.ProtoReflect.Descriptor instead.
func (*MyAllowedAccountByProductsResponseData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{114}
}

func (x *MyAllowedAccountByProductsResponseData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *MyAllowedAccountByProductsResponseData) GetAccountIds() []uint64 {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

type ListAccountByRoleRPCWithCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account      *Account  `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	RoleIds      []uint64  `protobuf:"varint,2,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	Limit        int32     `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page         int32     `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort         string    `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir          Direction `protobuf:"varint,6,opt,name=dir,proto3,enum=account.service.v1.Direction" json:"dir,omitempty"`
	Filter       string    `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query        string    `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	ProductId    uint64    `protobuf:"varint,9,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	AccountTypes []string  `protobuf:"bytes,10,rep,name=account_types,json=accountTypes,proto3" json:"account_types,omitempty"`
}

func (x *ListAccountByRoleRPCWithCacheRequest) Reset() {
	*x = ListAccountByRoleRPCWithCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountByRoleRPCWithCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountByRoleRPCWithCacheRequest) ProtoMessage() {}

func (x *ListAccountByRoleRPCWithCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountByRoleRPCWithCacheRequest.ProtoReflect.Descriptor instead.
func (*ListAccountByRoleRPCWithCacheRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{115}
}

func (x *ListAccountByRoleRPCWithCacheRequest) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ListAccountByRoleRPCWithCacheRequest) GetRoleIds() []uint64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *ListAccountByRoleRPCWithCacheRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAccountByRoleRPCWithCacheRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAccountByRoleRPCWithCacheRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListAccountByRoleRPCWithCacheRequest) GetDir() Direction {
	if x != nil {
		return x.Dir
	}
	return Direction_UNKNOWN_DIRECTION
}

func (x *ListAccountByRoleRPCWithCacheRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAccountByRoleRPCWithCacheRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListAccountByRoleRPCWithCacheRequest) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ListAccountByRoleRPCWithCacheRequest) GetAccountTypes() []string {
	if x != nil {
		return x.AccountTypes
	}
	return nil
}

type GetRDNAccountByRoleRPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId         []uint64        `protobuf:"varint,1,rep,packed,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Dir            Direction       `protobuf:"varint,2,opt,name=dir,proto3,enum=account.service.v1.Direction" json:"dir,omitempty"`
	Filter         string          `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit          int32           `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Page           int32           `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	ProcessId      string          `protobuf:"bytes,6,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	Query          string          `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	Sort           string          `protobuf:"bytes,8,opt,name=sort,proto3" json:"sort,omitempty"`
	RdnBankAccount *RDNBankAccount `protobuf:"bytes,9,opt,name=rdn_bank_account,json=rdnBankAccount,proto3" json:"rdn_bank_account,omitempty"`
	AccountTypes   []string        `protobuf:"bytes,10,rep,name=account_types,json=accountTypes,proto3" json:"account_types,omitempty"`
	ProductId      uint64          `protobuf:"varint,11,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetRDNAccountByRoleRPCRequest) Reset() {
	*x = GetRDNAccountByRoleRPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountByRoleRPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountByRoleRPCRequest) ProtoMessage() {}

func (x *GetRDNAccountByRoleRPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountByRoleRPCRequest.ProtoReflect.Descriptor instead.
func (*GetRDNAccountByRoleRPCRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{116}
}

func (x *GetRDNAccountByRoleRPCRequest) GetRoleId() []uint64 {
	if x != nil {
		return x.RoleId
	}
	return nil
}

func (x *GetRDNAccountByRoleRPCRequest) GetDir() Direction {
	if x != nil {
		return x.Dir
	}
	return Direction_UNKNOWN_DIRECTION
}

func (x *GetRDNAccountByRoleRPCRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRDNAccountByRoleRPCRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRDNAccountByRoleRPCRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCRequest) GetRdnBankAccount() *RDNBankAccount {
	if x != nil {
		return x.RdnBankAccount
	}
	return nil
}

func (x *GetRDNAccountByRoleRPCRequest) GetAccountTypes() []string {
	if x != nil {
		return x.AccountTypes
	}
	return nil
}

func (x *GetRDNAccountByRoleRPCRequest) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type GetRDNAccountByRoleRPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                                  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                                `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*GetRDNAccountByRoleRPCResponseData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination                           `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetRDNAccountByRoleRPCResponse) Reset() {
	*x = GetRDNAccountByRoleRPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountByRoleRPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountByRoleRPCResponse) ProtoMessage() {}

func (x *GetRDNAccountByRoleRPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountByRoleRPCResponse.ProtoReflect.Descriptor instead.
func (*GetRDNAccountByRoleRPCResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{117}
}

func (x *GetRDNAccountByRoleRPCResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetRDNAccountByRoleRPCResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRDNAccountByRoleRPCResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponse) GetData() []*GetRDNAccountByRoleRPCResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetRDNAccountByRoleRPCResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetRDNAccountByRoleRPCResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessLevel     string                 `protobuf:"bytes,1,opt,name=access_level,json=accessLevel,proto3" json:"access_level,omitempty"`
	AccountAlias    string                 `protobuf:"bytes,2,opt,name=account_alias,json=accountAlias,proto3" json:"account_alias,omitempty"`
	AccountCurrency string                 `protobuf:"bytes,3,opt,name=account_currency,json=accountCurrency,proto3" json:"account_currency,omitempty"`
	AccountId       uint64                 `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountName     string                 `protobuf:"bytes,5,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountNumber   string                 `protobuf:"bytes,6,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	AccountStatus   string                 `protobuf:"bytes,7,opt,name=account_status,json=accountStatus,proto3" json:"account_status,omitempty"`
	AccountType     string                 `protobuf:"bytes,8,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	CompanyId       uint64                 `protobuf:"varint,9,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CompanyName     string                 `protobuf:"bytes,10,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	CompanyCode     string                 `protobuf:"bytes,11,opt,name=company_code,json=companyCode,proto3" json:"company_code,omitempty"`
	CountryName     string                 `protobuf:"bytes,12,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	CountryCode     string                 `protobuf:"bytes,13,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Cif             string                 `protobuf:"bytes,14,opt,name=cif,proto3" json:"cif,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DeletedAt       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ProductCode     string                 `protobuf:"bytes,18,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`
	StatusCode      string                 `protobuf:"bytes,19,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	RoleId          uint64                 `protobuf:"varint,20,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *GetRDNAccountByRoleRPCResponseData) Reset() {
	*x = GetRDNAccountByRoleRPCResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountByRoleRPCResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountByRoleRPCResponseData) ProtoMessage() {}

func (x *GetRDNAccountByRoleRPCResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountByRoleRPCResponseData.ProtoReflect.Descriptor instead.
func (*GetRDNAccountByRoleRPCResponseData) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{118}
}

func (x *GetRDNAccountByRoleRPCResponseData) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetRDNAccountByRoleRPCResponseData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *GetRDNAccountByRoleRPCResponseData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetRDNAccountByRoleRPCResponseData) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *GetRDNAccountByRoleRPCResponseData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetRDNAccountByRoleRPCResponseData) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *GetRDNAccountByRoleRPCResponseData) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// You coud add more request but you also required to adjust the query
type GetRDNAccountIdsGeneralQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleIds        []uint64        `protobuf:"varint,1,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	ProductId      uint64          `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	AccountTypes   []string        `protobuf:"bytes,3,rep,name=account_types,json=accountTypes,proto3" json:"account_types,omitempty"`
	RdnBankAccount *RDNBankAccount `protobuf:"bytes,4,opt,name=rdn_bank_account,json=rdnBankAccount,proto3" json:"rdn_bank_account,omitempty"`
}

func (x *GetRDNAccountIdsGeneralQueryRequest) Reset() {
	*x = GetRDNAccountIdsGeneralQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountIdsGeneralQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountIdsGeneralQueryRequest) ProtoMessage() {}

func (x *GetRDNAccountIdsGeneralQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountIdsGeneralQueryRequest.ProtoReflect.Descriptor instead.
func (*GetRDNAccountIdsGeneralQueryRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{119}
}

func (x *GetRDNAccountIdsGeneralQueryRequest) GetRoleIds() []uint64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *GetRDNAccountIdsGeneralQueryRequest) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GetRDNAccountIdsGeneralQueryRequest) GetAccountTypes() []string {
	if x != nil {
		return x.AccountTypes
	}
	return nil
}

func (x *GetRDNAccountIdsGeneralQueryRequest) GetRdnBankAccount() *RDNBankAccount {
	if x != nil {
		return x.RdnBankAccount
	}
	return nil
}

type GetRDNAccountIdsGeneralQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId          uint64                 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountName        string                 `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountNumber      string                 `protobuf:"bytes,3,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	CompanyName        string                 `protobuf:"bytes,4,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	CompanyId          uint64                 `protobuf:"varint,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CompanyCode        string                 `protobuf:"bytes,6,opt,name=company_code,json=companyCode,proto3" json:"company_code,omitempty"`
	CountryCode        string                 `protobuf:"bytes,7,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	CountryName        string                 `protobuf:"bytes,8,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	Currency           string                 `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	LastUpdated        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Cif                string                 `protobuf:"bytes,11,opt,name=cif,proto3" json:"cif,omitempty"`
	KodePerusahaanEfek string                 `protobuf:"bytes,12,opt,name=kode_perusahaan_efek,json=kodePerusahaanEfek,proto3" json:"kode_perusahaan_efek,omitempty"`
	RoleId             uint64                 `protobuf:"varint,13,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *GetRDNAccountIdsGeneralQueryResponse) Reset() {
	*x = GetRDNAccountIdsGeneralQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDNAccountIdsGeneralQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDNAccountIdsGeneralQueryResponse) ProtoMessage() {}

func (x *GetRDNAccountIdsGeneralQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDNAccountIdsGeneralQueryResponse.ProtoReflect.Descriptor instead.
func (*GetRDNAccountIdsGeneralQueryResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{120}
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetKodePerusahaanEfek() string {
	if x != nil {
		return x.KodePerusahaanEfek
	}
	return ""
}

func (x *GetRDNAccountIdsGeneralQueryResponse) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type DeleteAccountByCompanyIdRPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId uint64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *DeleteAccountByCompanyIdRPCRequest) Reset() {
	*x = DeleteAccountByCompanyIdRPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountByCompanyIdRPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountByCompanyIdRPCRequest) ProtoMessage() {}

func (x *DeleteAccountByCompanyIdRPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountByCompanyIdRPCRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountByCompanyIdRPCRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{121}
}

func (x *DeleteAccountByCompanyIdRPCRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type GetListAccountRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId    uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	AccountId uint64 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *GetListAccountRolesRequest) Reset() {
	*x = GetListAccountRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListAccountRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListAccountRolesRequest) ProtoMessage() {}

func (x *GetListAccountRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListAccountRolesRequest.ProtoReflect.Descriptor instead.
func (*GetListAccountRolesRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{122}
}

func (x *GetListAccountRolesRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *GetListAccountRolesRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type GetListAccountRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool           `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32         `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*AccountRole `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetListAccountRolesResponse) Reset() {
	*x = GetListAccountRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListAccountRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListAccountRolesResponse) ProtoMessage() {}

func (x *GetListAccountRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListAccountRolesResponse.ProtoReflect.Descriptor instead.
func (*GetListAccountRolesResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{123}
}

func (x *GetListAccountRolesResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetListAccountRolesResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetListAccountRolesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetListAccountRolesResponse) GetData() []*AccountRole {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateAccountTaskRPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data             *AccountWrite   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskId           uint64          `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	IsDraft          bool            `protobuf:"varint,3,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	IsSkipToApproved bool            `protobuf:"varint,5,opt,name=is_skip_to_approved,json=isSkipToApproved,proto3" json:"is_skip_to_approved,omitempty"`
	User             *UserNonSession `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	IsTrb            bool            `protobuf:"varint,7,opt,name=is_trb,json=isTrb,proto3" json:"is_trb,omitempty"`
}

func (x *CreateAccountTaskRPCRequest) Reset() {
	*x = CreateAccountTaskRPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountTaskRPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountTaskRPCRequest) ProtoMessage() {}

func (x *CreateAccountTaskRPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountTaskRPCRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountTaskRPCRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{124}
}

func (x *CreateAccountTaskRPCRequest) GetData() *AccountWrite {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateAccountTaskRPCRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *CreateAccountTaskRPCRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *CreateAccountTaskRPCRequest) GetIsSkipToApproved() bool {
	if x != nil {
		return x.IsSkipToApproved
	}
	return false
}

func (x *CreateAccountTaskRPCRequest) GetUser() *UserNonSession {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateAccountTaskRPCRequest) GetIsTrb() bool {
	if x != nil {
		return x.IsTrb
	}
	return false
}

type UserNonSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      uint64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CompanyId   uint64   `protobuf:"varint,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CompanyName string   `protobuf:"bytes,3,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	UserName    string   `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	RoleIds     []uint64 `protobuf:"varint,5,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	UserType    string   `protobuf:"bytes,6,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *UserNonSession) Reset() {
	*x = UserNonSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNonSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNonSession) ProtoMessage() {}

func (x *UserNonSession) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNonSession.ProtoReflect.Descriptor instead.
func (*UserNonSession) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{125}
}

func (x *UserNonSession) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserNonSession) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *UserNonSession) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *UserNonSession) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserNonSession) GetRoleIds() []uint64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *UserNonSession) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

type GetListAccountRoleIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *GetListAccountRoleIDsRequest) Reset() {
	*x = GetListAccountRoleIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListAccountRoleIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListAccountRoleIDsRequest) ProtoMessage() {}

func (x *GetListAccountRoleIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListAccountRoleIDsRequest.ProtoReflect.Descriptor instead.
func (*GetListAccountRoleIDsRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{126}
}

func (x *GetListAccountRoleIDsRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type GetListAccountRoleIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	RoleIds []uint64 `protobuf:"varint,4,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
}

func (x *GetListAccountRoleIDsResponse) Reset() {
	*x = GetListAccountRoleIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListAccountRoleIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListAccountRoleIDsResponse) ProtoMessage() {}

func (x *GetListAccountRoleIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListAccountRoleIDsResponse.ProtoReflect.Descriptor instead.
func (*GetListAccountRoleIDsResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{127}
}

func (x *GetListAccountRoleIDsResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetListAccountRoleIDsResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetListAccountRoleIDsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetListAccountRoleIDsResponse) GetRoleIds() []uint64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type SendNotifQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId    []uint64                        `protobuf:"varint,1,rep,packed,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	BatchId   string                          `protobuf:"bytes,2,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	CompanyId uint64                          `protobuf:"varint,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	NotifType SendNotifQueueRequest_NotifType `protobuf:"varint,4,opt,name=notif_type,json=notifType,proto3,enum=account.service.v1.SendNotifQueueRequest_NotifType" json:"notif_type,omitempty"`
	Action    SendNotifQueueRequest_Actions   `protobuf:"varint,5,opt,name=action,proto3,enum=account.service.v1.SendNotifQueueRequest_Actions" json:"action,omitempty"`
}

func (x *SendNotifQueueRequest) Reset() {
	*x = SendNotifQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNotifQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotifQueueRequest) ProtoMessage() {}

func (x *SendNotifQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotifQueueRequest.ProtoReflect.Descriptor instead.
func (*SendNotifQueueRequest) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{128}
}

func (x *SendNotifQueueRequest) GetTaskId() []uint64 {
	if x != nil {
		return x.TaskId
	}
	return nil
}

func (x *SendNotifQueueRequest) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *SendNotifQueueRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *SendNotifQueueRequest) GetNotifType() SendNotifQueueRequest_NotifType {
	if x != nil {
		return x.NotifType
	}
	return SendNotifQueueRequest_null_type
}

func (x *SendNotifQueueRequest) GetAction() SendNotifQueueRequest_Actions {
	if x != nil {
		return x.Action
	}
	return SendNotifQueueRequest_null_action
}

type SendNotificationAccountRPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendNotificationAccountRPCResponse) Reset() {
	*x = SendNotificationAccountRPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNotificationAccountRPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationAccountRPCResponse) ProtoMessage() {}

func (x *SendNotificationAccountRPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationAccountRPCResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationAccountRPCResponse) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{129}
}

func (x *SendNotificationAccountRPCResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *SendNotificationAccountRPCResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendNotificationAccountRPCResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ValidateAccountByCIFResponse_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber      string `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	AccountType        string `protobuf:"bytes,2,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	AccountCurrency    string `protobuf:"bytes,3,opt,name=account_currency,json=accountCurrency,proto3" json:"account_currency,omitempty"`
	AccountStatus      string `protobuf:"bytes,4,opt,name=account_status,json=accountStatus,proto3" json:"account_status,omitempty"`
	AccountName        string `protobuf:"bytes,5,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountProductType string `protobuf:"bytes,6,opt,name=account_product_type,json=accountProductType,proto3" json:"account_product_type,omitempty"`
	AccountProductName string `protobuf:"bytes,7,opt,name=account_product_name,json=accountProductName,proto3" json:"account_product_name,omitempty"`
	AccountCifNumber   string `protobuf:"bytes,8,opt,name=account_cif_number,json=accountCifNumber,proto3" json:"account_cif_number,omitempty"`
}

func (x *ValidateAccountByCIFResponse_Response) Reset() {
	*x = ValidateAccountByCIFResponse_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountByCIFResponse_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountByCIFResponse_Response) ProtoMessage() {}

func (x *ValidateAccountByCIFResponse_Response) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountByCIFResponse_Response.ProtoReflect.Descriptor instead.
func (*ValidateAccountByCIFResponse_Response) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{51, 0}
}

func (x *ValidateAccountByCIFResponse_Response) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *ValidateAccountByCIFResponse_Response) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *ValidateAccountByCIFResponse_Response) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *ValidateAccountByCIFResponse_Response) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *ValidateAccountByCIFResponse_Response) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ValidateAccountByCIFResponse_Response) GetAccountProductType() string {
	if x != nil {
		return x.AccountProductType
	}
	return ""
}

func (x *ValidateAccountByCIFResponse_Response) GetAccountProductName() string {
	if x != nil {
		return x.AccountProductName
	}
	return ""
}

func (x *ValidateAccountByCIFResponse_Response) GetAccountCifNumber() string {
	if x != nil {
		return x.AccountCifNumber
	}
	return ""
}

type ValidateAccountByAccountNumberResponse_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address1       string `protobuf:"bytes,1,opt,name=address1,proto3" json:"address1,omitempty"`
	ZipCode        string `protobuf:"bytes,2,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
	Nik            string `protobuf:"bytes,3,opt,name=nik,proto3" json:"nik,omitempty"`
	Cif            string `protobuf:"bytes,4,opt,name=cif,proto3" json:"cif,omitempty"`
	Branch         string `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty"`
	Name           string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	MobileNumber   string `protobuf:"bytes,7,opt,name=mobileNumber,proto3" json:"mobileNumber,omitempty"`
	Email          string `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Citizenship    string `protobuf:"bytes,9,opt,name=citizenship,proto3" json:"citizenship,omitempty"`
	IdentityType   string `protobuf:"bytes,10,opt,name=identityType,proto3" json:"identityType,omitempty"`
	IdentityNumber string `protobuf:"bytes,11,opt,name=identityNumber,proto3" json:"identityNumber,omitempty"`
	PlaceOfBirth   string `protobuf:"bytes,12,opt,name=placeOfBirth,proto3" json:"placeOfBirth,omitempty"`
	DateOfBirth    string `protobuf:"bytes,13,opt,name=dateOfBirth,proto3" json:"dateOfBirth,omitempty"`
	AccountType    string `protobuf:"bytes,14,opt,name=accountType,proto3" json:"accountType,omitempty"`
}

func (x *ValidateAccountByAccountNumberResponse_Response) Reset() {
	*x = ValidateAccountByAccountNumberResponse_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountByAccountNumberResponse_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountByAccountNumberResponse_Response) ProtoMessage() {}

func (x *ValidateAccountByAccountNumberResponse_Response) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountByAccountNumberResponse_Response.ProtoReflect.Descriptor instead.
func (*ValidateAccountByAccountNumberResponse_Response) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{53, 0}
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetMobileNumber() string {
	if x != nil {
		return x.MobileNumber
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetCitizenship() string {
	if x != nil {
		return x.Citizenship
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetIdentityType() string {
	if x != nil {
		return x.IdentityType
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetIdentityNumber() string {
	if x != nil {
		return x.IdentityNumber
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetPlaceOfBirth() string {
	if x != nil {
		return x.PlaceOfBirth
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *ValidateAccountByAccountNumberResponse_Response) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type ValidateAccountUklnDataResponse_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark2         string `protobuf:"bytes,1,opt,name=remark2,proto3" json:"remark2,omitempty"`
	AcctNo          string `protobuf:"bytes,2,opt,name=acctNo,proto3" json:"acctNo,omitempty"`
	ErrorCode       string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ResponseCode    string `protobuf:"bytes,4,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string `protobuf:"bytes,5,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ShortName       string `protobuf:"bytes,6,opt,name=shortName,proto3" json:"shortName,omitempty"`
	AcctCurr        string `protobuf:"bytes,7,opt,name=acctCurr,proto3" json:"acctCurr,omitempty"`
	Status          string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Cif             string `protobuf:"bytes,10,opt,name=cif,proto3" json:"cif,omitempty"`
	ProductCode     string `protobuf:"bytes,11,opt,name=productCode,proto3" json:"productCode,omitempty"`
	StatusCode      string `protobuf:"bytes,12,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	IdNumber        string `protobuf:"bytes,13,opt,name=idNumber,proto3" json:"idNumber,omitempty"`
	AccountType     string `protobuf:"bytes,14,opt,name=accountType,proto3" json:"accountType,omitempty"`
}

func (x *ValidateAccountUklnDataResponse_Response) Reset() {
	*x = ValidateAccountUklnDataResponse_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountUklnDataResponse_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountUklnDataResponse_Response) ProtoMessage() {}

func (x *ValidateAccountUklnDataResponse_Response) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountUklnDataResponse_Response.ProtoReflect.Descriptor instead.
func (*ValidateAccountUklnDataResponse_Response) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{62, 0}
}

func (x *ValidateAccountUklnDataResponse_Response) GetRemark2() string {
	if x != nil {
		return x.Remark2
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetAcctNo() string {
	if x != nil {
		return x.AcctNo
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetAcctCurr() string {
	if x != nil {
		return x.AcctCurr
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetIdNumber() string {
	if x != nil {
		return x.IdNumber
	}
	return ""
}

func (x *ValidateAccountUklnDataResponse_Response) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type ValidateAccountResponse_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark2         string `protobuf:"bytes,1,opt,name=remark2,proto3" json:"remark2,omitempty"`
	AcctNo          string `protobuf:"bytes,2,opt,name=acctNo,proto3" json:"acctNo,omitempty"`
	ErrorCode       string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ResponseCode    string `protobuf:"bytes,4,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string `protobuf:"bytes,5,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ShortName       string `protobuf:"bytes,6,opt,name=shortName,proto3" json:"shortName,omitempty"`
	AcctCurr        string `protobuf:"bytes,7,opt,name=acctCurr,proto3" json:"acctCurr,omitempty"`
	MinimumBal      string `protobuf:"bytes,14,opt,name=minimumBal,proto3" json:"minimumBal,omitempty"`
	AcctType        string `protobuf:"bytes,15,opt,name=acctType,proto3" json:"acctType,omitempty"`
	AvailableBal    string `protobuf:"bytes,8,opt,name=availableBal,proto3" json:"availableBal,omitempty"`
	Status          string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Cif             string `protobuf:"bytes,10,opt,name=cif,proto3" json:"cif,omitempty"`
	ProductCode     string `protobuf:"bytes,11,opt,name=productCode,proto3" json:"productCode,omitempty"`
	StatusCode      string `protobuf:"bytes,12,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	IdNumber        string `protobuf:"bytes,13,opt,name=idNumber,proto3" json:"idNumber,omitempty"`
	Branch          string `protobuf:"bytes,22,opt,name=branch,proto3" json:"branch,omitempty"`
	HoldAmt         string `protobuf:"bytes,23,opt,name=holdAmt,proto3" json:"holdAmt,omitempty"`
}

func (x *ValidateAccountResponse_Response) Reset() {
	*x = ValidateAccountResponse_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountResponse_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountResponse_Response) ProtoMessage() {}

func (x *ValidateAccountResponse_Response) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountResponse_Response.ProtoReflect.Descriptor instead.
func (*ValidateAccountResponse_Response) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{71, 0}
}

func (x *ValidateAccountResponse_Response) GetRemark2() string {
	if x != nil {
		return x.Remark2
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetAcctNo() string {
	if x != nil {
		return x.AcctNo
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetAcctCurr() string {
	if x != nil {
		return x.AcctCurr
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetMinimumBal() string {
	if x != nil {
		return x.MinimumBal
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetAcctType() string {
	if x != nil {
		return x.AcctType
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetAvailableBal() string {
	if x != nil {
		return x.AvailableBal
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetIdNumber() string {
	if x != nil {
		return x.IdNumber
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *ValidateAccountResponse_Response) GetHoldAmt() string {
	if x != nil {
		return x.HoldAmt
	}
	return ""
}

type ValidateAccountDataResponse_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark2          string `protobuf:"bytes,1,opt,name=remark2,proto3" json:"remark2,omitempty"`
	AcctNo           string `protobuf:"bytes,2,opt,name=acctNo,proto3" json:"acctNo,omitempty"`
	ErrorCode        string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ResponseCode     string `protobuf:"bytes,4,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage  string `protobuf:"bytes,5,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ShortName        string `protobuf:"bytes,6,opt,name=shortName,proto3" json:"shortName,omitempty"`
	AcctCurr         string `protobuf:"bytes,7,opt,name=acctCurr,proto3" json:"acctCurr,omitempty"`
	Status           string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Cif              string `protobuf:"bytes,10,opt,name=cif,proto3" json:"cif,omitempty"`
	ProductCode      string `protobuf:"bytes,11,opt,name=productCode,proto3" json:"productCode,omitempty"`
	StatusCode       string `protobuf:"bytes,12,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	IdNumber         string `protobuf:"bytes,13,opt,name=idNumber,proto3" json:"idNumber,omitempty"`
	AvailableBalance string `protobuf:"bytes,14,opt,name=availableBalance,proto3" json:"availableBalance,omitempty"`
	AccountType      string `protobuf:"bytes,15,opt,name=accountType,proto3" json:"accountType,omitempty"`
	IsRdn            bool   `protobuf:"varint,16,opt,name=isRdn,proto3" json:"isRdn,omitempty"`
}

func (x *ValidateAccountDataResponse_Response) Reset() {
	*x = ValidateAccountDataResponse_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_service_account_payload_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAccountDataResponse_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccountDataResponse_Response) ProtoMessage() {}

func (x *ValidateAccountDataResponse_Response) ProtoReflect() protoreflect.Message {
	mi := &file_account_service_account_payload_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccountDataResponse_Response.ProtoReflect.Descriptor instead.
func (*ValidateAccountDataResponse_Response) Descriptor() ([]byte, []int) {
	return file_account_service_account_payload_proto_rawDescGZIP(), []int{72, 0}
}

func (x *ValidateAccountDataResponse_Response) GetRemark2() string {
	if x != nil {
		return x.Remark2
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetAcctNo() string {
	if x != nil {
		return x.AcctNo
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetAcctCurr() string {
	if x != nil {
		return x.AcctCurr
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetIdNumber() string {
	if x != nil {
		return x.IdNumber
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetAvailableBalance() string {
	if x != nil {
		return x.AvailableBalance
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *ValidateAccountDataResponse_Response) GetIsRdn() bool {
	if x != nil {
		return x.IsRdn
	}
	return false
}

var File_account_service_account_payload_proto protoreflect.FileDescriptor

var file_account_service_account_payload_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x25, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x22, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f,
	0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a,
	0x25, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x22, 0xef, 0x07, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74,
	0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65,
	0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x65,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42,
	0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61,
	0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x48, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12,
	0x3e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f,
	0x72, 0x22, 0x7b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a,
	0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x11,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10,
	0x06, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x07, 0x22, 0x46,
	0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74,
	0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0xd5, 0x01, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12,
	0x0d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x04,
	0x12, 0x11, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x10,
	0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x10,
	0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x10,
	0x09, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x0a, 0x12, 0x0e, 0x0a,
	0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x10, 0x0b, 0x12, 0x0f, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x0c, 0x22, 0x1e,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x32,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x22, 0x5f, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x75, 0x0a, 0x1f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x20, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x56, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x0d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2f,
	0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3d, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x4b, 0x65, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x10, 0x4a, 0x57, 0x54, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9b,
	0x0c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b,
	0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72,
	0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a,
	0x03, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69,
	0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0xf5, 0x03, 0x92, 0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x20, 0x27, 0x41, 0x4e, 0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d,
	0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70,
	0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d,
	0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20,
	0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20,
	0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25,
	0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20,
	0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a,
	0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31,
	0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c,
	0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20,
	0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20,
	0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0xd7, 0x02, 0x92, 0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20,
	0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c,
	0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d,
	0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20,
	0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27,
	0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20,
	0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0xbc, 0x01,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x97, 0x01, 0x92, 0x41, 0x93, 0x01, 0x32, 0x90, 0x01, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x20, 0x62, 0x79, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x27, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x65, 0x74, 0x20, 0x61,
	0x6c, 0x6c, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x2c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x3a, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3d, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x2c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x20, 0x46, 0x75, 0x6e, 0x64, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x1e, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53,
	0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x3c, 0x0a, 0x04,
	0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x17, 0x4d, 0x79,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x22,
	0x3a, 0x0a, 0x18, 0x4d, 0x79, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x77, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x1d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0xb4, 0x06,
	0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73,
	0x4f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x69, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0x32, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8c, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x03, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdd, 0x06, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65,
	0x64, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49,
	0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x66, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x66, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe3, 0x06, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10,
	0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x42,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf6, 0x01, 0x0a,
	0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x3d, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x3f, 0x0a, 0x08, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x22, 0x7f, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x22, 0x9b, 0x0c, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x33, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67,
	0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92,
	0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62,
	0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x46, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92,
	0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e,
	0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c,
	0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e,
	0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20,
	0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c,
	0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45,
	0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e,
	0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0xee, 0x02, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92,
	0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52,
	0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b,
	0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65,
	0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65,
	0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49,
	0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31,
	0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x5b, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22, 0x46, 0x0a, 0x05, 0x73, 0x74,
	0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72,
	0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43,
	0x10, 0x01, 0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0xd2, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x11,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x8c, 0x01, 0x0a, 0x15,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x90, 0x01, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xaf, 0x01, 0x0a, 0x17, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x66, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x37, 0x0a, 0x0f, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e,
	0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x78, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x78, 0x6c, 0x73, 0x78, 0x10,
	0x03, 0x22, 0xff, 0x08, 0x0a, 0x1a, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x56, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x66, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x48, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67,
	0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x67, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64,
	0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x4a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x03, 0x64, 0x69, 0x72, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x22, 0x2e, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70,
	0x64, 0x66, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x78, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x63, 0x73, 0x76, 0x10, 0x03, 0x22, 0x7b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x10, 0x07, 0x22, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b,
	0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0xd5, 0x01, 0x0a, 0x04,
	0x53, 0x6f, 0x72, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x42, 0x79, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74,
	0x10, 0x0b, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x10, 0x0c, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53,
	0x43, 0x10, 0x01, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x43, 0x65, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x76, 0x61, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x17, 0x43, 0x65, 0x6b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x11, 0x43, 0x65,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x22, 0xf9, 0x05, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x26, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x41, 0x4b, 0x45,
	0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d,
	0x45, 0x5f, 0x4d, 0x41, 0x4b, 0x45, 0x52, 0x12, 0x2c, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x52, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x50, 0x50,
	0x52, 0x4f, 0x56, 0x45, 0x52, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d,
	0x45, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54,
	0x45, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x44, 0x41, 0x54, 0x45, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d,
	0x45, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54,
	0x45, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d,
	0x42, 0x45, 0x52, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x49, 0x41, 0x53, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x49, 0x41, 0x53, 0x12,
	0x30, 0x0a, 0x13, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x45,
	0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x12,
	0x24, 0x0a, 0x0d, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x49, 0x44,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x49, 0x44, 0x12,
	0x2c, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4a, 0x45,
	0x43, 0x54, 0x4f, 0x52, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x55, 0x53, 0x45, 0x52,
	0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x43, 0x48,
	0x45, 0x43, 0x4b, 0x45, 0x52, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x55, 0x53, 0x45,
	0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x45, 0x52, 0x12, 0x2c, 0x0a,
	0x11, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53,
	0x45, 0x52, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x52, 0x12, 0x22, 0x0a, 0x0c, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x22,
	0x84, 0x0b, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b,
	0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72,
	0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x4b, 0x0a,
	0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92, 0x41,
	0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e, 0x44,
	0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b,
	0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65,
	0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44,
	0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a,
	0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e,
	0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e,
	0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92, 0x41,
	0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27,
	0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65,
	0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c,
	0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20,
	0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27,
	0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b,
	0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d,
	0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x72, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x49, 0x46, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x63, 0x69, 0x66, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x69, 0x66, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x8f, 0x04, 0x0a, 0x1c, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79,
	0x43, 0x49, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x4d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x43, 0x49, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xdb,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x69, 0x66, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x69, 0x66, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6b, 0x0a, 0x25,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0xe8, 0x04, 0x0a, 0x26, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x57, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0xa0, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6e, 0x69, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x31, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x14, 0x51, 0x6c, 0x6f, 0x6c,
	0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6e, 0x0a, 0x20,
	0x51, 0x6c, 0x6f, 0x6c, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x6c, 0x6f, 0x6c, 0x61,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xef, 0x01, 0x0a,
	0x1f, 0x51, 0x6c, 0x6f, 0x6c, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x72, 0x69, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x58,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x6c, 0x6f, 0x6c, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x59,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x49,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x6c, 0x6f, 0x6c, 0x61, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x21, 0x51, 0x6c, 0x6f,
	0x6c, 0x61, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xb1, 0x01, 0x0a, 0x13, 0x51, 0x6c, 0x6f, 0x6c, 0x61, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xe4, 0x01, 0x0a, 0x26, 0x51, 0x6c, 0x6f, 0x6c, 0x61, 0x42, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x42, 0x72, 0x69, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0xc6, 0x04, 0x0a, 0x1f,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x6b, 0x6c, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6b, 0x6c, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x8c, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x63, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x63, 0x74, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x63, 0x63, 0x74, 0x43, 0x75, 0x72, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x63, 0x63, 0x74, 0x43, 0x75, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x19, 0x42, 0x72, 0x69, 0x67, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e,
	0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6e,
	0x6f, 0x74, 0x2d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x7e, 0x0a, 0x15, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xae, 0x03, 0x0a, 0x0e, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x12, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a,
	0x0e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x54, 0x0a, 0x16, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xc2, 0x02, 0x0a, 0x24, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x22, 0xc4, 0x01, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa6, 0x05, 0x0a, 0x17,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xfc, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x63, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x63, 0x74, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x63, 0x63, 0x74, 0x43, 0x75, 0x72, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x63, 0x63, 0x74, 0x43, 0x75, 0x72, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f,
	0x6c, 0x64, 0x41, 0x6d, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x6c,
	0x64, 0x41, 0x6d, 0x74, 0x22, 0x80, 0x05, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xce, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x63, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x63, 0x74, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x74, 0x43, 0x75, 0x72, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x74, 0x43, 0x75, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x69, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x52, 0x64, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x69, 0x73, 0x52, 0x64, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70,
	0x47, 0x65, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x47, 0x65, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x22, 0x38, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x62,
	0x61, 0x6e, 0x6b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x75, 0x73, 0x65, 0x72, 0x10, 0x02, 0x22, 0xf1, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x22, 0xdc, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0xee, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xde, 0x05, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x66, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x66, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xa9, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x55, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x63,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x0e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0xf3, 0x02, 0x0a, 0x18,
	0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x75, 0x73, 0x61, 0x68, 0x61,
	0x61, 0x6e, 0x5f, 0x65, 0x66, 0x65, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6b,
	0x6f, 0x64, 0x65, 0x50, 0x65, 0x72, 0x75, 0x73, 0x61, 0x68, 0x61, 0x61, 0x6e, 0x45, 0x66, 0x65,
	0x6b, 0x22, 0xce, 0x03, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x66,
	0x12, 0x30, 0x0a, 0x14, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x75, 0x73, 0x61, 0x68,
	0x61, 0x61, 0x6e, 0x5f, 0x65, 0x66, 0x65, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6b, 0x6f, 0x64, 0x65, 0x50, 0x65, 0x72, 0x75, 0x73, 0x61, 0x68, 0x61, 0x61, 0x6e, 0x45, 0x66,
	0x65, 0x6b, 0x22, 0xde, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x44,
	0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x50, 0x0a, 0x10, 0x72, 0x64, 0x6e, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x44, 0x4e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0e, 0x72, 0x64, 0x6e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xca, 0x05, 0x0a, 0x12, 0x52,
	0x44, 0x4e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x75, 0x73, 0x61, 0x68, 0x61, 0x61, 0x6e, 0x5f, 0x65, 0x66, 0x65, 0x6b, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6b, 0x6f, 0x64, 0x65, 0x50, 0x65, 0x72, 0x75, 0x73, 0x61, 0x68,
	0x61, 0x61, 0x6e, 0x45, 0x66, 0x65, 0x6b, 0x22, 0x5e, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x34, 0x0a,
	0x16, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x97, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x73, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x0f, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x44, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xca, 0x02, 0x0a, 0x0f, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x13, 0x0a, 0x05, 0x65,
	0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x54, 0x61, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x49, 0x44, 0x22, 0xda, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xe1, 0x05, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65,
	0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e,
	0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f,
	0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x60, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74,
	0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x43, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f,
	0x72, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x22, 0xaf, 0x01, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x10, 0x03, 0x12, 0x10, 0x0a,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x10, 0x04, 0x12,
	0x14, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x10, 0x09, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53,
	0x43, 0x10, 0x01, 0x22, 0xc8, 0x03, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x50,
	0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64,
	0x22, 0x5b, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x22, 0xb0, 0x03, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41,
	0x70, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x41, 0x70, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x22, 0x85, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x55, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xda, 0x04, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67,
	0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x64, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42,
	0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61,
	0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x47, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x3d,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22,
	0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x10, 0x00, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53,
	0x43, 0x10, 0x01, 0x22, 0xd9, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xf3, 0x02, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x61, 0x73, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x61, 0x73, 0x6b, 0x22, 0xee, 0x01, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x44, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x61, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x22, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xb6, 0x01,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x8d, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2c,
	0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0xc8, 0x02, 0x0a,
	0x21, 0x4d, 0x79, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70,
	0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41,
	0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x22, 0x4d, 0x79, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x79, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a,
	0x26, 0x4d, 0x79, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0xd9, 0x02, 0x0a, 0x24,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x86, 0x03, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52,
	0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x4c,
	0x0a, 0x10, 0x72, 0x64, 0x6e, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x44,
	0x4e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x72, 0x64,
	0x6e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x22, 0xf0, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x44,
	0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x50,
	0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x95, 0x06, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x50, 0x43, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x66, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x66, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x23,
	0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x73,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x4c, 0x0a, 0x10, 0x72, 0x64, 0x6e, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x44, 0x4e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x0e, 0x72, 0x64, 0x6e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xf2, 0x03, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x52, 0x44, 0x4e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x66, 0x12, 0x30, 0x0a, 0x14, 0x6b, 0x6f,
	0x64, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x75, 0x73, 0x61, 0x68, 0x61, 0x61, 0x6e, 0x5f, 0x65, 0x66,
	0x65, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6b, 0x6f, 0x64, 0x65, 0x50, 0x65,
	0x72, 0x75, 0x73, 0x61, 0x68, 0x61, 0x61, 0x6e, 0x45, 0x66, 0x65, 0x6b, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x52, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x96, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85, 0x02, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x74,
	0x6f, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x5f, 0x74, 0x72, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x72,
	0x62, 0x22, 0xc0, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x22, 0xc2, 0x03, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64,
	0x12, 0x52, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x3d, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x5f, 0x63, 0x69, 0x66, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x02, 0x22, 0x78,
	0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x6e, 0x75, 0x6c,
	0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x04,
	0x12, 0x0a, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x06, 0x22, 0x68, 0x0a, 0x22, 0x53, 0x65, 0x6e, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2a, 0x5b, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a,
	0x09, 0x47, 0x45, 0x54, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x4e, 0x54, 0x52, 0x4f, 0x53, 0x50, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x59, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d,
	0x42, 0x52, 0x49, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x04, 0x42,
	0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_account_service_account_payload_proto_rawDescOnce sync.Once
	file_account_service_account_payload_proto_rawDescData = file_account_service_account_payload_proto_rawDesc
)

func file_account_service_account_payload_proto_rawDescGZIP() []byte {
	file_account_service_account_payload_proto_rawDescOnce.Do(func() {
		file_account_service_account_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_account_service_account_payload_proto_rawDescData)
	})
	return file_account_service_account_payload_proto_rawDescData
}

var file_account_service_account_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 23)
var file_account_service_account_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 135)
var file_account_service_account_payload_proto_goTypes = []interface{}{
	(ApiType)(0),                                            // 0: account.service.v1.ApiType
	(ListAccountTaskV2RequestStatuses)(0),                   // 1: account.service.v1.ListAccountTaskV2Request.statuses
	(ListAccountTaskV2RequestSteps)(0),                      // 2: account.service.v1.ListAccountTaskV2Request.steps
	(ListAccountTaskV2Request_Sort)(0),                      // 3: account.service.v1.ListAccountTaskV2Request.Sort
	(ListAccountTaskV2RequestDirection)(0),                  // 4: account.service.v1.ListAccountTaskV2Request.direction
	(ListAccountRequestDirection)(0),                        // 5: account.service.v1.ListAccountRequest.direction
	(ListAccountTaskRequestStatuses)(0),                     // 6: account.service.v1.ListAccountTaskRequest.statuses
	(ListAccountTaskRequestSteps)(0),                        // 7: account.service.v1.ListAccountTaskRequest.steps
	(ListAccountTaskRequestDirection)(0),                    // 8: account.service.v1.ListAccountTaskRequest.direction
	(FileListTemplateRequest_FormatTemplates)(0),            // 9: account.service.v1.FileListTemplateRequest.FormatTemplates
	(FileListAccountTaskRequest_Formats)(0),                 // 10: account.service.v1.FileListAccountTaskRequest.Formats
	(FileListAccountTaskRequestStatuses)(0),                 // 11: account.service.v1.FileListAccountTaskRequest.statuses
	(FileListAccountTaskRequestSteps)(0),                    // 12: account.service.v1.FileListAccountTaskRequest.steps
	(FileListAccountTaskRequest_Sort)(0),                    // 13: account.service.v1.FileListAccountTaskRequest.Sort
	(FileListAccountTaskRequestDirection)(0),                // 14: account.service.v1.FileListAccountTaskRequest.direction
	(ListAccountByRoleRPCRequestDirection)(0),               // 15: account.service.v1.ListAccountByRoleRPCRequest.direction
	(TempGenToken_Role)(0),                                  // 16: account.service.v1.TempGenToken.Role
	(GetListBatchRequest_Sort)(0),                           // 17: account.service.v1.GetListBatchRequest.Sort
	(GetListBatchRequestDirection)(0),                       // 18: account.service.v1.GetListBatchRequest.direction
	(GetDetailAccountRequest_Sort)(0),                       // 19: account.service.v1.GetDetailAccountRequest.Sort
	(GetDetailAccountRequestDirection)(0),                   // 20: account.service.v1.GetDetailAccountRequest.direction
	(SendNotifQueueRequest_NotifType)(0),                    // 21: account.service.v1.SendNotifQueueRequest.NotifType
	(SendNotifQueueRequest_Actions)(0),                      // 22: account.service.v1.SendNotifQueueRequest.Actions
	(*GetUserApprovedAndCreatedResponse)(nil),               // 23: account.service.v1.GetUserApprovedAndCreatedResponse
	(*DataGetUserApprovedAndCreatedResponse)(nil),           // 24: account.service.v1.DataGetUserApprovedAndCreatedResponse
	(*ListAccountTaskV2Request)(nil),                        // 25: account.service.v1.ListAccountTaskV2Request
	(*DeleteAccountRoleRequest)(nil),                        // 26: account.service.v1.DeleteAccountRoleRequest
	(*DeleteAccountRoleResponse)(nil),                       // 27: account.service.v1.DeleteAccountRoleResponse
	(*ValidateNameAliasAccountRequest)(nil),                 // 28: account.service.v1.ValidateNameAliasAccountRequest
	(*ValidateNameAliasAccountResponse)(nil),                // 29: account.service.v1.ValidateNameAliasAccountResponse
	(*LoginRequest)(nil),                                    // 30: account.service.v1.LoginRequest
	(*LoginResponse)(nil),                                   // 31: account.service.v1.LoginResponse
	(*HealthCheckResponse)(nil),                             // 32: account.service.v1.HealthCheckResponse
	(*Empty)(nil),                                           // 33: account.service.v1.Empty
	(*InvalidKeyError)(nil),                                 // 34: account.service.v1.InvalidKeyError
	(*JWTTokenResponse)(nil),                                // 35: account.service.v1.JWTTokenResponse
	(*ListRequest)(nil),                                     // 36: account.service.v1.ListRequest
	(*ListAccountRequest)(nil),                              // 37: account.service.v1.ListAccountRequest
	(*Sort)(nil),                                            // 38: account.service.v1.Sort
	(*MyAllowedAccountRequest)(nil),                         // 39: account.service.v1.MyAllowedAccountRequest
	(*MyAllowedAccountResponse)(nil),                        // 40: account.service.v1.MyAllowedAccountResponse
	(*ListAccountResponse)(nil),                             // 41: account.service.v1.ListAccountResponse
	(*ListAccountActiveResponse)(nil),                       // 42: account.service.v1.ListAccountActiveResponse
	(*CreateAccountRequest)(nil),                            // 43: account.service.v1.CreateAccountRequest
	(*CreateAccountTaskRequest)(nil),                        // 44: account.service.v1.CreateAccountTaskRequest
	(*CreateAccountBatchTaskRequest)(nil),                   // 45: account.service.v1.CreateAccountBatchTaskRequest
	(*AccountWrite)(nil),                                    // 46: account.service.v1.AccountWrite
	(*CreateAccountTaskBulkRequest)(nil),                    // 47: account.service.v1.CreateAccountTaskBulkRequest
	(*AccountAlias)(nil),                                    // 48: account.service.v1.AccountAlias
	(*CreateAccountResponse)(nil),                           // 49: account.service.v1.CreateAccountResponse
	(*DeleteAccountResponse)(nil),                           // 50: account.service.v1.DeleteAccountResponse
	(*Task)(nil),                                            // 51: account.service.v1.Task
	(*AccountTaskData)(nil),                                 // 52: account.service.v1.AccountTaskData
	(*AccountTaskDataString)(nil),                           // 53: account.service.v1.AccountTaskDataString
	(*AccountTask)(nil),                                     // 54: account.service.v1.AccountTask
	(*CompanyData)(nil),                                     // 55: account.service.v1.CompanyData
	(*CreateAccountTaskResponse)(nil),                       // 56: account.service.v1.CreateAccountTaskResponse
	(*CreateAccountTaskMultipleResponse)(nil),               // 57: account.service.v1.CreateAccountTaskMultipleResponse
	(*ListAccountTaskRequest)(nil),                          // 58: account.service.v1.ListAccountTaskRequest
	(*GetAccountTaskByIDRequest)(nil),                       // 59: account.service.v1.GetAccountTaskByIDRequest
	(*ListAccountTaskResponse)(nil),                         // 60: account.service.v1.ListAccountTaskResponse
	(*ErrorBodyResponse)(nil),                               // 61: account.service.v1.errorBodyResponse
	(*AccountDetailRequest)(nil),                            // 62: account.service.v1.AccountDetailRequest
	(*AccountDetailResponse)(nil),                           // 63: account.service.v1.AccountDetailResponse
	(*UpdateAccountRoleRequest)(nil),                        // 64: account.service.v1.UpdateAccountRoleRequest
	(*UpdateAccountRoleResponse)(nil),                       // 65: account.service.v1.UpdateAccountRoleResponse
	(*FileListTemplateRequest)(nil),                         // 66: account.service.v1.FileListTemplateRequest
	(*FileListAccountTaskRequest)(nil),                      // 67: account.service.v1.FileListAccountTaskRequest
	(*CekAccountAvaibilityReq)(nil),                         // 68: account.service.v1.CekAccountAvaibilityReq
	(*CekAccountAvaibilityRes)(nil),                         // 69: account.service.v1.CekAccountAvaibilityRes
	(*CekAccountUsedRes)(nil),                               // 70: account.service.v1.CekAccountUsedRes
	(*AccountNotificationData)(nil),                         // 71: account.service.v1.AccountNotificationData
	(*ListAccountByRoleRPCRequest)(nil),                     // 72: account.service.v1.ListAccountByRoleRPCRequest
	(*ValidateAccountByCIFRequest)(nil),                     // 73: account.service.v1.ValidateAccountByCIFRequest
	(*ValidateAccountByCIFResponse)(nil),                    // 74: account.service.v1.ValidateAccountByCIFResponse
	(*ValidateAccountByAccountNumberRequest)(nil),           // 75: account.service.v1.ValidateAccountByAccountNumberRequest
	(*ValidateAccountByAccountNumberResponse)(nil),          // 76: account.service.v1.ValidateAccountByAccountNumberResponse
	(*AccountsByUserIdRequest)(nil),                         // 77: account.service.v1.AccountsByUserIdRequest
	(*QlolaAccountByUserId)(nil),                            // 78: account.service.v1.QlolaAccountByUserId
	(*QlolaListAccountByUserIDResponse)(nil),                // 79: account.service.v1.QlolaListAccountByUserIDResponse
	(*QlolaListAccountBrigateResponse)(nil),                 // 80: account.service.v1.QlolaListAccountBrigateResponse
	(*ResponseData)(nil),                                    // 81: account.service.v1.ResponseData
	(*QlolaGetBankAccountCompanyRequest)(nil),               // 82: account.service.v1.QlolaGetBankAccountCompanyRequest
	(*QlolaGetBankAccount)(nil),                             // 83: account.service.v1.QlolaGetBankAccount
	(*QlolaBankAccountCompanyBrigateResponse)(nil),          // 84: account.service.v1.QlolaBankAccountCompanyBrigateResponse
	(*ValidateAccountUklnDataResponse)(nil),                 // 85: account.service.v1.ValidateAccountUklnDataResponse
	(*BrigateAccessTokenRequest)(nil),                       // 86: account.service.v1.BrigateAccessTokenRequest
	(*GetTokenResponse)(nil),                                // 87: account.service.v1.GetTokenResponse
	(*InquiryAccountRequest)(nil),                           // 88: account.service.v1.InquiryAccountRequest
	(*InquiryAccount)(nil),                                  // 89: account.service.v1.InquiryAccount
	(*InquiryAccountData)(nil),                              // 90: account.service.v1.InquiryAccountData
	(*InquiryAccountResponse)(nil),                          // 91: account.service.v1.InquiryAccountResponse
	(*ValidateAccountWithoutSessionRequest)(nil),            // 92: account.service.v1.ValidateAccountWithoutSessionRequest
	(*ValidateAccountRequest)(nil),                          // 93: account.service.v1.ValidateAccountRequest
	(*ValidateAccountResponse)(nil),                         // 94: account.service.v1.ValidateAccountResponse
	(*ValidateAccountDataResponse)(nil),                     // 95: account.service.v1.ValidateAccountDataResponse
	(*TempGenToken)(nil),                                    // 96: account.service.v1.TempGenToken
	(*GetRDNAccountByRoleRequest)(nil),                      // 97: account.service.v1.GetRDNAccountByRoleRequest
	(*GetRDNAccountByUserRoleRequest)(nil),                  // 98: account.service.v1.GetRDNAccountByUserRoleRequest
	(*GetRDNAccountByUserRoleResponse)(nil),                 // 99: account.service.v1.GetRDNAccountByUserRoleResponse
	(*GetRDNAccountByRoleResponseData)(nil),                 // 100: account.service.v1.GetRDNAccountByRoleResponseData
	(*GetRDNAccountByRoleResponse)(nil),                     // 101: account.service.v1.GetRDNAccountByRoleResponse
	(*GetRDNAccountRequest)(nil),                            // 102: account.service.v1.GetRDNAccountRequest
	(*RDNAccountSearchCriteria)(nil),                        // 103: account.service.v1.RDNAccountSearchCriteria
	(*GetRDNAccountResponseData)(nil),                       // 104: account.service.v1.GetRDNAccountResponseData
	(*GetRDNAccountResponse)(nil),                           // 105: account.service.v1.GetRDNAccountResponse
	(*InsertRDNAccountRequest)(nil),                         // 106: account.service.v1.InsertRDNAccountRequest
	(*RDNBankAccountData)(nil),                              // 107: account.service.v1.RDNBankAccountData
	(*InsertRDNAccountResponse)(nil),                        // 108: account.service.v1.InsertRDNAccountResponse
	(*GlobalRequest)(nil),                                   // 109: account.service.v1.GlobalRequest
	(*SubmitFileResponse)(nil),                              // 110: account.service.v1.SubmitFileResponse
	(*SubmitFileResponseData)(nil),                          // 111: account.service.v1.SubmitFileResponseData
	(*CreateUploadRequest)(nil),                             // 112: account.service.v1.CreateUploadRequest
	(*FileUploadsData)(nil),                                 // 113: account.service.v1.FileUploadsData
	(*FileDetailMinio)(nil),                                 // 114: account.service.v1.FileDetailMinio
	(*MinioObjectInfo)(nil),                                 // 115: account.service.v1.MinioObjectInfo
	(*GetListBatchResponse)(nil),                            // 116: account.service.v1.GetListBatchResponse
	(*GetListBatchRequest)(nil),                             // 117: account.service.v1.GetListBatchRequest
	(*UploadAccountBatchData)(nil),                          // 118: account.service.v1.UploadAccountBatchData
	(*CheckFileNameRequest)(nil),                            // 119: account.service.v1.CheckFileNameRequest
	(*CheckFileNameResponse)(nil),                           // 120: account.service.v1.CheckFileNameResponse
	(*GetDetailBatchRequest)(nil),                           // 121: account.service.v1.GetDetailBatchRequest
	(*GetDetailBatchData)(nil),                              // 122: account.service.v1.GetDetailBatchData
	(*StatusApproval)(nil),                                  // 123: account.service.v1.StatusApproval
	(*GetDetailBatchResponse)(nil),                          // 124: account.service.v1.GetDetailBatchResponse
	(*GetDetailAccountRequest)(nil),                         // 125: account.service.v1.GetDetailAccountRequest
	(*GetDetailAccountResponse)(nil),                        // 126: account.service.v1.GetDetailAccountResponse
	(*AccountDetailData)(nil),                               // 127: account.service.v1.AccountDetailData
	(*ApproveBatchAccountRequest)(nil),                      // 128: account.service.v1.ApproveBatchAccountRequest
	(*ApproveBatchAccountResponse)(nil),                     // 129: account.service.v1.ApproveBatchAccountResponse
	(*TaskIds)(nil),                                         // 130: account.service.v1.taskIds
	(*UserDataMD)(nil),                                      // 131: account.service.v1.UserDataMD
	(*UpdateStatusAccountBatchRequest)(nil),                 // 132: account.service.v1.UpdateStatusAccountBatchRequest
	(*UpdateStatusAccountBatchResponse)(nil),                // 133: account.service.v1.UpdateStatusAccountBatchResponse
	(*StatusCount)(nil),                                     // 134: account.service.v1.StatusCount
	(*MyAllowedAccountByProductsRequest)(nil),               // 135: account.service.v1.MyAllowedAccountByProductsRequest
	(*MyAllowedAccountByProductsResponse)(nil),              // 136: account.service.v1.MyAllowedAccountByProductsResponse
	(*MyAllowedAccountByProductsResponseData)(nil),          // 137: account.service.v1.MyAllowedAccountByProductsResponseData
	(*ListAccountByRoleRPCWithCacheRequest)(nil),            // 138: account.service.v1.ListAccountByRoleRPCWithCacheRequest
	(*GetRDNAccountByRoleRPCRequest)(nil),                   // 139: account.service.v1.GetRDNAccountByRoleRPCRequest
	(*GetRDNAccountByRoleRPCResponse)(nil),                  // 140: account.service.v1.GetRDNAccountByRoleRPCResponse
	(*GetRDNAccountByRoleRPCResponseData)(nil),              // 141: account.service.v1.GetRDNAccountByRoleRPCResponseData
	(*GetRDNAccountIdsGeneralQueryRequest)(nil),             // 142: account.service.v1.GetRDNAccountIdsGeneralQueryRequest
	(*GetRDNAccountIdsGeneralQueryResponse)(nil),            // 143: account.service.v1.GetRDNAccountIdsGeneralQueryResponse
	(*DeleteAccountByCompanyIdRPCRequest)(nil),              // 144: account.service.v1.DeleteAccountByCompanyIdRPCRequest
	(*GetListAccountRolesRequest)(nil),                      // 145: account.service.v1.GetListAccountRolesRequest
	(*GetListAccountRolesResponse)(nil),                     // 146: account.service.v1.GetListAccountRolesResponse
	(*CreateAccountTaskRPCRequest)(nil),                     // 147: account.service.v1.CreateAccountTaskRPCRequest
	(*UserNonSession)(nil),                                  // 148: account.service.v1.UserNonSession
	(*GetListAccountRoleIDsRequest)(nil),                    // 149: account.service.v1.GetListAccountRoleIDsRequest
	(*GetListAccountRoleIDsResponse)(nil),                   // 150: account.service.v1.GetListAccountRoleIDsResponse
	(*SendNotifQueueRequest)(nil),                           // 151: account.service.v1.SendNotifQueueRequest
	(*SendNotificationAccountRPCResponse)(nil),              // 152: account.service.v1.SendNotificationAccountRPCResponse
	(*ValidateAccountByCIFResponse_Response)(nil),           // 153: account.service.v1.ValidateAccountByCIFResponse.Response
	(*ValidateAccountByAccountNumberResponse_Response)(nil), // 154: account.service.v1.ValidateAccountByAccountNumberResponse.Response
	(*ValidateAccountUklnDataResponse_Response)(nil),        // 155: account.service.v1.ValidateAccountUklnDataResponse.Response
	(*ValidateAccountResponse_Response)(nil),                // 156: account.service.v1.ValidateAccountResponse.Response
	(*ValidateAccountDataResponse_Response)(nil),            // 157: account.service.v1.ValidateAccountDataResponse.Response
	(*AccountWithCompany)(nil),                              // 158: account.service.v1.AccountWithCompany
	(*Account)(nil),                                         // 159: account.service.v1.Account
	(*Pagination)(nil),                                      // 160: account.service.v1.Pagination
	(*timestamppb.Timestamp)(nil),                           // 161: google.protobuf.Timestamp
	(Direction)(0),                                          // 162: account.service.v1.Direction
	(*UploadAccountBatchs)(nil),                             // 163: account.service.v1.UploadAccountBatchs
	(*RDNBankAccount)(nil),                                  // 164: account.service.v1.RDNBankAccount
	(*AccountRole)(nil),                                     // 165: account.service.v1.AccountRole
}
var file_account_service_account_payload_proto_depIdxs = []int32{
	24,  // 0: account.service.v1.GetUserApprovedAndCreatedResponse.data:type_name -> account.service.v1.DataGetUserApprovedAndCreatedResponse
	2,   // 1: account.service.v1.ListAccountTaskV2Request.step:type_name -> account.service.v1.ListAccountTaskV2Request.steps
	3,   // 2: account.service.v1.ListAccountTaskV2Request.sort:type_name -> account.service.v1.ListAccountTaskV2Request.Sort
	4,   // 3: account.service.v1.ListAccountTaskV2Request.dir:type_name -> account.service.v1.ListAccountTaskV2Request.direction
	158, // 4: account.service.v1.ListAccountTaskV2Request.filter:type_name -> account.service.v1.AccountWithCompany
	159, // 5: account.service.v1.ListAccountRequest.account:type_name -> account.service.v1.Account
	5,   // 6: account.service.v1.ListAccountRequest.dir:type_name -> account.service.v1.ListAccountRequest.direction
	159, // 7: account.service.v1.ListAccountResponse.data:type_name -> account.service.v1.Account
	160, // 8: account.service.v1.ListAccountResponse.pagination:type_name -> account.service.v1.Pagination
	159, // 9: account.service.v1.ListAccountActiveResponse.data:type_name -> account.service.v1.Account
	159, // 10: account.service.v1.CreateAccountRequest.data:type_name -> account.service.v1.Account
	46,  // 11: account.service.v1.CreateAccountTaskRequest.data:type_name -> account.service.v1.AccountWrite
	46,  // 12: account.service.v1.CreateAccountBatchTaskRequest.data:type_name -> account.service.v1.AccountWrite
	161, // 13: account.service.v1.AccountWrite.createdAt:type_name -> google.protobuf.Timestamp
	161, // 14: account.service.v1.AccountWrite.updatedAt:type_name -> google.protobuf.Timestamp
	161, // 15: account.service.v1.AccountWrite.deletedAt:type_name -> google.protobuf.Timestamp
	46,  // 16: account.service.v1.CreateAccountTaskBulkRequest.accounts:type_name -> account.service.v1.AccountWrite
	159, // 17: account.service.v1.CreateAccountResponse.data:type_name -> account.service.v1.Account
	159, // 18: account.service.v1.DeleteAccountResponse.data:type_name -> account.service.v1.Account
	161, // 19: account.service.v1.Task.createdAt:type_name -> google.protobuf.Timestamp
	161, // 20: account.service.v1.Task.updatedAt:type_name -> google.protobuf.Timestamp
	161, // 21: account.service.v1.AccountTaskData.createdAt:type_name -> google.protobuf.Timestamp
	161, // 22: account.service.v1.AccountTaskData.updatedAt:type_name -> google.protobuf.Timestamp
	161, // 23: account.service.v1.AccountTaskData.deletedAt:type_name -> google.protobuf.Timestamp
	161, // 24: account.service.v1.AccountTaskDataString.createdAt:type_name -> google.protobuf.Timestamp
	161, // 25: account.service.v1.AccountTaskDataString.updatedAt:type_name -> google.protobuf.Timestamp
	161, // 26: account.service.v1.AccountTaskDataString.deletedAt:type_name -> google.protobuf.Timestamp
	52,  // 27: account.service.v1.AccountTask.account:type_name -> account.service.v1.AccountTaskData
	51,  // 28: account.service.v1.AccountTask.task:type_name -> account.service.v1.Task
	52,  // 29: account.service.v1.AccountTask.accounts:type_name -> account.service.v1.AccountTaskData
	55,  // 30: account.service.v1.AccountTask.company:type_name -> account.service.v1.CompanyData
	6,   // 31: account.service.v1.ListAccountTaskRequest.status:type_name -> account.service.v1.ListAccountTaskRequest.statuses
	7,   // 32: account.service.v1.ListAccountTaskRequest.step:type_name -> account.service.v1.ListAccountTaskRequest.steps
	8,   // 33: account.service.v1.ListAccountTaskRequest.dir:type_name -> account.service.v1.ListAccountTaskRequest.direction
	54,  // 34: account.service.v1.ListAccountTaskResponse.data:type_name -> account.service.v1.AccountTask
	160, // 35: account.service.v1.ListAccountTaskResponse.pagination:type_name -> account.service.v1.Pagination
	159, // 36: account.service.v1.AccountDetailResponse.data:type_name -> account.service.v1.Account
	159, // 37: account.service.v1.UpdateAccountRoleResponse.data:type_name -> account.service.v1.Account
	9,   // 38: account.service.v1.FileListTemplateRequest.fileFormat:type_name -> account.service.v1.FileListTemplateRequest.FormatTemplates
	10,  // 39: account.service.v1.FileListAccountTaskRequest.fileFormat:type_name -> account.service.v1.FileListAccountTaskRequest.Formats
	12,  // 40: account.service.v1.FileListAccountTaskRequest.step:type_name -> account.service.v1.FileListAccountTaskRequest.steps
	13,  // 41: account.service.v1.FileListAccountTaskRequest.sort:type_name -> account.service.v1.FileListAccountTaskRequest.Sort
	14,  // 42: account.service.v1.FileListAccountTaskRequest.dir:type_name -> account.service.v1.FileListAccountTaskRequest.direction
	158, // 43: account.service.v1.FileListAccountTaskRequest.filter:type_name -> account.service.v1.AccountWithCompany
	159, // 44: account.service.v1.ListAccountByRoleRPCRequest.account:type_name -> account.service.v1.Account
	15,  // 45: account.service.v1.ListAccountByRoleRPCRequest.dir:type_name -> account.service.v1.ListAccountByRoleRPCRequest.direction
	153, // 46: account.service.v1.ValidateAccountByCIFResponse.data:type_name -> account.service.v1.ValidateAccountByCIFResponse.Response
	154, // 47: account.service.v1.ValidateAccountByAccountNumberResponse.data:type_name -> account.service.v1.ValidateAccountByAccountNumberResponse.Response
	78,  // 48: account.service.v1.QlolaListAccountByUserIDResponse.accountList:type_name -> account.service.v1.QlolaAccountByUserId
	79,  // 49: account.service.v1.QlolaListAccountBrigateResponse.responseData:type_name -> account.service.v1.QlolaListAccountByUserIDResponse
	83,  // 50: account.service.v1.ResponseData.accountList:type_name -> account.service.v1.QlolaGetBankAccount
	81,  // 51: account.service.v1.QlolaBankAccountCompanyBrigateResponse.responseData:type_name -> account.service.v1.ResponseData
	155, // 52: account.service.v1.ValidateAccountUklnDataResponse.data:type_name -> account.service.v1.ValidateAccountUklnDataResponse.Response
	89,  // 53: account.service.v1.InquiryAccountData.inquiryAccount:type_name -> account.service.v1.InquiryAccount
	90,  // 54: account.service.v1.InquiryAccountResponse.data:type_name -> account.service.v1.InquiryAccountData
	156, // 55: account.service.v1.ValidateAccountResponse.data:type_name -> account.service.v1.ValidateAccountResponse.Response
	157, // 56: account.service.v1.ValidateAccountDataResponse.data:type_name -> account.service.v1.ValidateAccountDataResponse.Response
	16,  // 57: account.service.v1.TempGenToken.role:type_name -> account.service.v1.TempGenToken.Role
	162, // 58: account.service.v1.GetRDNAccountByRoleRequest.dir:type_name -> account.service.v1.Direction
	162, // 59: account.service.v1.GetRDNAccountByUserRoleRequest.dir:type_name -> account.service.v1.Direction
	100, // 60: account.service.v1.GetRDNAccountByUserRoleResponse.data:type_name -> account.service.v1.GetRDNAccountByRoleResponseData
	160, // 61: account.service.v1.GetRDNAccountByUserRoleResponse.pagination:type_name -> account.service.v1.Pagination
	161, // 62: account.service.v1.GetRDNAccountByRoleResponseData.created_at:type_name -> google.protobuf.Timestamp
	161, // 63: account.service.v1.GetRDNAccountByRoleResponseData.deleted_at:type_name -> google.protobuf.Timestamp
	161, // 64: account.service.v1.GetRDNAccountByRoleResponseData.updated_at:type_name -> google.protobuf.Timestamp
	100, // 65: account.service.v1.GetRDNAccountByRoleResponse.data:type_name -> account.service.v1.GetRDNAccountByRoleResponseData
	160, // 66: account.service.v1.GetRDNAccountByRoleResponse.pagination:type_name -> account.service.v1.Pagination
	162, // 67: account.service.v1.GetRDNAccountRequest.dir:type_name -> account.service.v1.Direction
	103, // 68: account.service.v1.GetRDNAccountRequest.search_criteria:type_name -> account.service.v1.RDNAccountSearchCriteria
	161, // 69: account.service.v1.GetRDNAccountResponseData.last_updated:type_name -> google.protobuf.Timestamp
	104, // 70: account.service.v1.GetRDNAccountResponse.data:type_name -> account.service.v1.GetRDNAccountResponseData
	160, // 71: account.service.v1.GetRDNAccountResponse.pagination:type_name -> account.service.v1.Pagination
	107, // 72: account.service.v1.InsertRDNAccountRequest.rdn_bank_account:type_name -> account.service.v1.RDNBankAccountData
	111, // 73: account.service.v1.SubmitFileResponse.data:type_name -> account.service.v1.SubmitFileResponseData
	114, // 74: account.service.v1.FileUploadsData.fileInfo:type_name -> account.service.v1.FileDetailMinio
	163, // 75: account.service.v1.FileUploadsData.dataInfo:type_name -> account.service.v1.UploadAccountBatchs
	115, // 76: account.service.v1.FileDetailMinio.object_info:type_name -> account.service.v1.MinioObjectInfo
	161, // 77: account.service.v1.MinioObjectInfo.last_modified:type_name -> google.protobuf.Timestamp
	161, // 78: account.service.v1.MinioObjectInfo.expiration:type_name -> google.protobuf.Timestamp
	118, // 79: account.service.v1.GetListBatchResponse.data:type_name -> account.service.v1.UploadAccountBatchData
	160, // 80: account.service.v1.GetListBatchResponse.pagination:type_name -> account.service.v1.Pagination
	17,  // 81: account.service.v1.GetListBatchRequest.sort:type_name -> account.service.v1.GetListBatchRequest.Sort
	18,  // 82: account.service.v1.GetListBatchRequest.dir:type_name -> account.service.v1.GetListBatchRequest.direction
	118, // 83: account.service.v1.GetListBatchRequest.filter:type_name -> account.service.v1.UploadAccountBatchData
	123, // 84: account.service.v1.GetDetailBatchData.statusApp:type_name -> account.service.v1.StatusApproval
	122, // 85: account.service.v1.GetDetailBatchResponse.data:type_name -> account.service.v1.GetDetailBatchData
	19,  // 86: account.service.v1.GetDetailAccountRequest.sort:type_name -> account.service.v1.GetDetailAccountRequest.Sort
	20,  // 87: account.service.v1.GetDetailAccountRequest.dir:type_name -> account.service.v1.GetDetailAccountRequest.direction
	127, // 88: account.service.v1.GetDetailAccountRequest.filter:type_name -> account.service.v1.AccountDetailData
	127, // 89: account.service.v1.GetDetailAccountResponse.data:type_name -> account.service.v1.AccountDetailData
	160, // 90: account.service.v1.GetDetailAccountResponse.pagination:type_name -> account.service.v1.Pagination
	131, // 91: account.service.v1.ApproveBatchAccountRequest.user:type_name -> account.service.v1.UserDataMD
	137, // 92: account.service.v1.MyAllowedAccountByProductsResponse.data:type_name -> account.service.v1.MyAllowedAccountByProductsResponseData
	159, // 93: account.service.v1.ListAccountByRoleRPCWithCacheRequest.account:type_name -> account.service.v1.Account
	162, // 94: account.service.v1.ListAccountByRoleRPCWithCacheRequest.dir:type_name -> account.service.v1.Direction
	162, // 95: account.service.v1.GetRDNAccountByRoleRPCRequest.dir:type_name -> account.service.v1.Direction
	164, // 96: account.service.v1.GetRDNAccountByRoleRPCRequest.rdn_bank_account:type_name -> account.service.v1.RDNBankAccount
	141, // 97: account.service.v1.GetRDNAccountByRoleRPCResponse.data:type_name -> account.service.v1.GetRDNAccountByRoleRPCResponseData
	160, // 98: account.service.v1.GetRDNAccountByRoleRPCResponse.pagination:type_name -> account.service.v1.Pagination
	161, // 99: account.service.v1.GetRDNAccountByRoleRPCResponseData.created_at:type_name -> google.protobuf.Timestamp
	161, // 100: account.service.v1.GetRDNAccountByRoleRPCResponseData.deleted_at:type_name -> google.protobuf.Timestamp
	161, // 101: account.service.v1.GetRDNAccountByRoleRPCResponseData.updated_at:type_name -> google.protobuf.Timestamp
	164, // 102: account.service.v1.GetRDNAccountIdsGeneralQueryRequest.rdn_bank_account:type_name -> account.service.v1.RDNBankAccount
	161, // 103: account.service.v1.GetRDNAccountIdsGeneralQueryResponse.last_updated:type_name -> google.protobuf.Timestamp
	165, // 104: account.service.v1.GetListAccountRolesResponse.data:type_name -> account.service.v1.AccountRole
	46,  // 105: account.service.v1.CreateAccountTaskRPCRequest.data:type_name -> account.service.v1.AccountWrite
	148, // 106: account.service.v1.CreateAccountTaskRPCRequest.user:type_name -> account.service.v1.UserNonSession
	21,  // 107: account.service.v1.SendNotifQueueRequest.notif_type:type_name -> account.service.v1.SendNotifQueueRequest.NotifType
	22,  // 108: account.service.v1.SendNotifQueueRequest.action:type_name -> account.service.v1.SendNotifQueueRequest.Actions
	109, // [109:109] is the sub-list for method output_type
	109, // [109:109] is the sub-list for method input_type
	109, // [109:109] is the sub-list for extension type_name
	109, // [109:109] is the sub-list for extension extendee
	0,   // [0:109] is the sub-list for field type_name
}

func init() { file_account_service_account_payload_proto_init() }
func file_account_service_account_payload_proto_init() {
	if File_account_service_account_payload_proto != nil {
		return
	}
	file_account_service_account_gorm_db_proto_init()
	file_account_service_account_core_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_account_service_account_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserApprovedAndCreatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataGetUserApprovedAndCreatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountTaskV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateNameAliasAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateNameAliasAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidKeyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWTTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyAllowedAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyAllowedAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountBatchTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountTaskBulkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAlias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountTaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountTaskDataString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountTaskMultipleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountTaskByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorBodyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileListTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileListAccountTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CekAccountAvaibilityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CekAccountAvaibilityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CekAccountUsedRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountNotificationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountByRoleRPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountByCIFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountByCIFResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountByAccountNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountByAccountNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountsByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QlolaAccountByUserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QlolaListAccountByUserIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QlolaListAccountBrigateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QlolaGetBankAccountCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QlolaGetBankAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QlolaBankAccountCompanyBrigateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountUklnDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrigateAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquiryAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquiryAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquiryAccountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquiryAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountWithoutSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TempGenToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountByRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountByUserRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountByUserRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountByRoleResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountByRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RDNAccountSearchCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertRDNAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RDNBankAccountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertRDNAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitFileResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDetailMinio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinioObjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadAccountBatchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckFileNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckFileNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailBatchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusApproval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveBatchAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveBatchAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataMD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusAccountBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusAccountBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyAllowedAccountByProductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyAllowedAccountByProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyAllowedAccountByProductsResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountByRoleRPCWithCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountByRoleRPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountByRoleRPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountByRoleRPCResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountIdsGeneralQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDNAccountIdsGeneralQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountByCompanyIdRPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListAccountRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListAccountRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountTaskRPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNonSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListAccountRoleIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListAccountRoleIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNotifQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNotificationAccountRPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountByCIFResponse_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountByAccountNumberResponse_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountUklnDataResponse_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountResponse_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_service_account_payload_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAccountDataResponse_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_account_service_account_payload_proto_rawDesc,
			NumEnums:      23,
			NumMessages:   135,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_account_service_account_payload_proto_goTypes,
		DependencyIndexes: file_account_service_account_payload_proto_depIdxs,
		EnumInfos:         file_account_service_account_payload_proto_enumTypes,
		MessageInfos:      file_account_service_account_payload_proto_msgTypes,
	}.Build()
	File_account_service_account_payload_proto = out.File
	file_account_service_account_payload_proto_rawDesc = nil
	file_account_service_account_payload_proto_goTypes = nil
	file_account_service_account_payload_proto_depIdxs = nil
}
