{
  "swagger": "2.0",
  "info": {
    "title": "account-service/account_api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ApiService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/account/approved-created": {
      "get": {
        "summary": "List user has been approved and  created account",
        "description": "This API for get list user has been approved and created account",
        "operationId": "ApiService_GetUserApprovedAndCreated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserApprovedAndCreatedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/account/available": {
      "post": {
        "summary": "Validate account",
        "description": "This API for Validate account",
        "operationId": "ApiService_CekAccountAvaibility",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CekAccountAvaibilityRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CekAccountAvaibilityReq"
            }
          }
        ],
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/account/data": {
      "get": {
        "summary": "List account data",
        "description": "This API for get list account",
        "operationId": "ApiService_ListAccountHttp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account.accountID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "account.companyID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "account.accountNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accountAlias",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accountName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accountType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accountStatus",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accountCurrency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accessLevel",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.isOwnedByCompany",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.createdByID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "account.updatedByID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "account.deletedByID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "account.disabled",
            "description": "uint64 roleID = 14 [(gorm.field).tag = {column: \"RoleID\"}];",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.cif",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.productCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.statusCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.batchId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.createdAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "account.updatedAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "account.deletedAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "description": "limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter",
            "description": "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement =\u003e Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' =\u003e 'key = value' \n - 'key:%%value' =\u003e 'key LIKE %value%' \n - 'key:%!value' =\u003e 'key ILIKE %value%' \n - 'key:\u003e=value' =\u003e 'key \u003e= value' \n - 'key:\u003c=value' =\u003e 'key \u003c= value' \n - 'key1:\u003e=value1,key2:\u003c=value2' =\u003e 'key1 \u003e= value1 AND key2 \u003c= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' =\u003e 'key1-\u003e\u003enestedKey1 = value'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement =\u003e Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' =\u003e 'key = value' \n - 'key:%%value' =\u003e 'key LIKE %value%' \n - 'key:%!value' =\u003e 'key ILIKE %value%' \n - 'key1.nestedKey1:value' =\u003e 'key1-\u003e\u003enestedKey1 = value'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterOr",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "in",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "productNames",
            "description": "group by product names. Default value '' for get all accounts \n format: [key:value,value] \n example: feature=productNames,Internal Fund Transfer",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/data/update-account": {
      "post": {
        "summary": "Account data update account",
        "description": "This API for get account update account",
        "operationId": "ApiService_UpdateAccountRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAccountRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAccountRoleRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/data/{accountID}": {
      "get": {
        "summary": "Account data by id",
        "description": "This API for get account by id",
        "operationId": "ApiService_AccountDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AccountDetailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/account/dataByRole": {
      "get": {
        "summary": "List account data",
        "description": "This API for get list account",
        "operationId": "ApiService_ListAccountByRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account.accountID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "account.companyID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "account.accountNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accountAlias",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accountName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accountType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accountStatus",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accountCurrency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.accessLevel",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.isOwnedByCompany",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.createdByID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "account.updatedByID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "account.deletedByID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "account.disabled",
            "description": "uint64 roleID = 14 [(gorm.field).tag = {column: \"RoleID\"}];",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.cif",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.productCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.statusCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.batchId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.createdAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "account.updatedAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "account.deletedAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "description": "limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter",
            "description": "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement =\u003e Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' =\u003e 'key = value' \n - 'key:%%value' =\u003e 'key LIKE %value%' \n - 'key:%!value' =\u003e 'key ILIKE %value%' \n - 'key:\u003e=value' =\u003e 'key \u003e= value' \n - 'key:\u003c=value' =\u003e 'key \u003c= value' \n - 'key1:\u003e=value1,key2:\u003c=value2' =\u003e 'key1 \u003e= value1 AND key2 \u003c= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' =\u003e 'key1-\u003e\u003enestedKey1 = value'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement =\u003e Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' =\u003e 'key = value' \n - 'key:%%value' =\u003e 'key LIKE %value%' \n - 'key:%!value' =\u003e 'key ILIKE %value%' \n - 'key1.nestedKey1:value' =\u003e 'key1-\u003e\u003enestedKey1 = value'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterOr",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "in",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "productNames",
            "description": "group by product names. Default value '' for get all accounts \n format: [key:value,value] \n example: feature=productNames,Internal Fund Transfer",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/direct-validate-account-number": {
      "post": {
        "summary": "Direct Validate account by account number",
        "description": "This API for Direct Validate account by account number",
        "operationId": "ApiService_DirectValidateAccountByAccountNumberHttp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountByAccountNumberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountByAccountNumberRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/account/health": {
      "get": {
        "summary": "Health Check",
        "description": "This API for check health server",
        "operationId": "ApiService_HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/account/mass-register/approve": {
      "post": {
        "summary": "Approve batch account",
        "description": "m API for approve batch account",
        "operationId": "ApiService_ApproveBatchAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ApproveBatchAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ApproveBatchAccountRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/create-task": {
      "post": {
        "summary": "Approve batch account",
        "description": "m API for approve batch account",
        "operationId": "ApiService_CreateAccountBatchTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ApproveBatchAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ApproveBatchAccountRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/delete-batch": {
      "post": {
        "summary": "Approve batch account",
        "description": "m API for approve batch account",
        "operationId": "ApiService_DeleteAccountBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ApproveBatchAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetDetailBatchRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/detail-account": {
      "get": {
        "summary": "get detail account",
        "description": "This API for get detail account",
        "operationId": "ApiService_GetDetailAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDetailAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "status"
            ],
            "default": "status"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter.companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.alias",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.accessLevel",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountOwnership",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.action",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.errorMessage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.statusTask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "batchId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/detail-account-invalid": {
      "get": {
        "summary": "get detail account",
        "description": "This API for get detail account",
        "operationId": "ApiService_GetDetailAccountInvalid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDetailAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "status"
            ],
            "default": "status"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter.companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.alias",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.accessLevel",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountOwnership",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.action",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.errorMessage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.statusTask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "batchId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/detail-batch": {
      "get": {
        "summary": "get detail batch",
        "description": "This API for get detail batch",
        "operationId": "ApiService_GetDetailBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDetailBatchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "batchId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/download-detail-file": {
      "get": {
        "summary": "Download detail batch account",
        "description": "m API for download detail batch account",
        "operationId": "ApiService_DownloadDetailAccountBatchFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHttpBody"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "status"
            ],
            "default": "status"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter.companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.alias",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.accessLevel",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountOwnership",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.action",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.errorMessage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.statusTask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "batchId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/download-file": {
      "get": {
        "summary": "Download batch account",
        "description": "m API for download batch account",
        "operationId": "ApiService_DownloadAccountBatchFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHttpBody"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "batchID",
              "companyName",
              "fileDescription",
              "fileFormat",
              "totalRecords",
              "totalDataInvalid",
              "totalDataValid",
              "createdAt",
              "status",
              "createdBy"
            ],
            "default": "batchID"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter.batchID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.fileDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.fileFormat",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.totalRecords",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.totalDataValid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.totalDatainvalid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.fileName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.companyID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.errorMessage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterOr",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "downloadFileFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/duplicate-by-name": {
      "post": {
        "summary": "Check Duplicate Filename",
        "description": "This API for check duplicate filename",
        "operationId": "ApiService_CheckDuplicateFilename",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckFileNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckFileNameRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/list": {
      "get": {
        "summary": "get list account batch",
        "description": "This API for get list account batch",
        "operationId": "ApiService_GetListBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetListBatchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "batchID",
              "companyName",
              "fileDescription",
              "fileFormat",
              "totalRecords",
              "totalDataInvalid",
              "totalDataValid",
              "createdAt",
              "status",
              "createdBy"
            ],
            "default": "batchID"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter.batchID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.fileDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.fileFormat",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.totalRecords",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.totalDataValid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.totalDatainvalid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.fileName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.companyID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.errorMessage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterOr",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "downloadFileFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/submit-file": {
      "post": {
        "summary": "Create Upload",
        "description": "Create Upload",
        "operationId": "ApiService_CreateUpload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SubmitFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GlobalRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/mass-register/update-status": {
      "post": {
        "summary": "Update status batch account",
        "description": "m API for update status batch account",
        "operationId": "ApiService_UpdateStatusAccountBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateStatusAccountBatchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateStatusAccountBatchRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/qlola/account-userid-list": {
      "post": {
        "summary": "Get List of accounts by user id",
        "description": "This API is used for retrieving list of accounts related to user given its id",
        "operationId": "ApiService_QlolaGetListAccountByUserId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1QlolaListAccountBrigateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AccountsByUserIdRequest"
            }
          }
        ],
        "tags": [
          "QLOLA"
        ],
        "security": []
      }
    },
    "/api/account/qlola/company-bank-account": {
      "post": {
        "summary": "Get Bank Account of Company",
        "description": "This API retrieves a bank account of company based on specified criteria.",
        "operationId": "ApiService_QlolaGetBankAccountCompany",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1QlolaBankAccountCompanyBrigateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1QlolaGetBankAccountCompanyRequest"
            }
          }
        ],
        "tags": [
          "QLOLA"
        ]
      }
    },
    "/api/account/rdn": {
      "post": {
        "summary": "Get RDN Account",
        "description": "This API for get RDN account",
        "operationId": "ApiService_GetRDNAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRDNAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetRDNAccountRequest"
            }
          }
        ],
        "tags": [
          "RDN"
        ]
      }
    },
    "/api/account/rdn/insert": {
      "post": {
        "summary": "Get RDN Account By Role",
        "description": "This API for get RDN account by role",
        "operationId": "ApiService_InsertRDNAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InsertRDNAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InsertRDNAccountRequest"
            }
          }
        ],
        "tags": [
          "RDN"
        ],
        "security": []
      }
    },
    "/api/account/rdn/list": {
      "post": {
        "summary": "Get RDN Account By Role Ids",
        "description": "This API for get RDN account by role Ids",
        "operationId": "ApiService_GetRDNAccountByUserRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRDNAccountByUserRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetRDNAccountByUserRoleRequest"
            }
          }
        ],
        "tags": [
          "RDN"
        ]
      }
    },
    "/api/account/rdn/role": {
      "post": {
        "summary": "Get RDN Account By Role",
        "description": "This API for get RDN account by role",
        "operationId": "ApiService_GetRDNAccountByRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRDNAccountByRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetRDNAccountByRoleRequest"
            }
          }
        ],
        "tags": [
          "RDN"
        ]
      }
    },
    "/api/account/rdn/validate": {
      "post": {
        "summary": "Validate RDN account",
        "description": "This API for Validate RDN account",
        "operationId": "ApiService_ValidateAccountRDN",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountRequest"
            }
          }
        ],
        "tags": [
          "RDN"
        ]
      }
    },
    "/api/account/task": {
      "get": {
        "summary": "get list account task",
        "description": "This API for get list account task",
        "operationId": "ApiService_ListAccountTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AllStatus",
              "Pending",
              "Draft",
              "Returned",
              "Approved",
              "Rejected"
            ],
            "default": "AllStatus"
          },
          {
            "name": "step",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AllStep",
              "Maker",
              "Checker",
              "Signer",
              "Releaser"
            ],
            "default": "AllStep"
          },
          {
            "name": "limit",
            "description": "limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter",
            "description": "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement =\u003e Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' =\u003e 'key = value' \n - 'key:%%value' =\u003e 'key LIKE %value%' \n - 'key:%!value' =\u003e 'key ILIKE %value%' \n - 'key:\u003e=value' =\u003e 'key \u003e= value' \n - 'key:\u003c=value' =\u003e 'key \u003c= value' \n - 'key1:\u003e=value1,key2:\u003c=value2' =\u003e 'key1 \u003e= value1 AND key2 \u003c= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' =\u003e 'key1-\u003e\u003enestedKey1 = value'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement =\u003e Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' =\u003e 'key = value' \n - 'key:%%value' =\u003e 'key LIKE %value%' \n - 'key:%!value' =\u003e 'key ILIKE %value%' \n - 'key1.nestedKey1:value' =\u003e 'key1-\u003e\u003enestedKey1 = value'",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      },
      "post": {
        "summary": "Create task account",
        "description": "This API for create task account",
        "operationId": "ApiService_CreateAccountTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccountTaskRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/task-bulk": {
      "post": {
        "summary": "Create bulk task account",
        "description": "This API for create bulk task account",
        "operationId": "ApiService_CreateAccountTaskMultiple",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccountTaskBulkRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/task-multiple": {
      "post": {
        "summary": "Create bulk task account without parent",
        "description": "This API for create bulk task account without parent",
        "operationId": "ApiService_CreateAccountTaskMultipleNoParrent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountTaskMultipleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccountTaskBulkRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/task/delete/{taskID}": {
      "post": {
        "summary": "Delete request account task",
        "description": "This API for deletes account task",
        "operationId": "ApiService_RequestDeleteAccountTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/task/edit/{taskID}": {
      "post": {
        "summary": "Create task account",
        "description": "This API for create task account",
        "operationId": "ApiService_CreateAccountTask2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiServiceCreateAccountTaskBody"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/task/file/{fileFormat}": {
      "get": {
        "summary": "Download list account task",
        "description": "This API for download list account task",
        "operationId": "ApiService_DownloadListAccountTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHttpBody"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fileFormat",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "null",
              "pdf",
              "xls",
              "csv"
            ]
          },
          {
            "name": "step",
            "description": "statuses status = 1;",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AllStep",
              "Maker",
              "Checker",
              "Signer",
              "Releaser"
            ],
            "default": "AllStep"
          },
          {
            "name": "limit",
            "description": "limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "companyID",
              "loginCode",
              "companyName",
              "countryCode",
              "accountName",
              "accountNumber",
              "currency",
              "createdTime",
              "createdBy",
              "approvedBy",
              "status",
              "approvedAt",
              "countryName"
            ],
            "default": "companyID"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter.taskID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filter.companyID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filter.accountName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountCurrency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.approvedAt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdByName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.loginCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.countryCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.countryName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.step",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filter.LastApprovedByName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.LastRejectedByName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.UpdatedByName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.reason",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.comment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterOr",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/task/{taskID}": {
      "get": {
        "summary": "get account task by id",
        "description": "This API for get account task by id",
        "operationId": "ApiService_GetAccountTaskByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/account/template/file/{fileFormat}": {
      "get": {
        "summary": "Download list account task",
        "description": "This API for download list account task",
        "operationId": "ApiService_DownloadTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHttpBody"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fileFormat",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "null",
              "csv",
              "xls",
              "xlsx"
            ]
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/ukln/brigate/token": {
      "get": {
        "summary": "Get Token",
        "description": "This API for get token brigate access",
        "operationId": "ApiService_GetBrigateAccessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UKLN"
        ],
        "security": []
      }
    },
    "/api/account/ukln/inquiry": {
      "post": {
        "summary": "Inquiry Account",
        "description": "This API for inquiry account",
        "operationId": "ApiService_InquiryAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InquiryAccountData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InquiryAccountRequest"
            }
          }
        ],
        "tags": [
          "UKLN"
        ],
        "security": []
      }
    },
    "/api/account/ukln/token": {
      "get": {
        "summary": "Get Token",
        "description": "This API for get api ukln token",
        "operationId": "ApiService_GetToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UKLN"
        ],
        "security": []
      }
    },
    "/api/account/ukln/validate/data": {
      "post": {
        "summary": "Validate account ukln",
        "description": "This API for Validate account ukln",
        "operationId": "ApiService_ValidateAccountUklnDataHttp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountUklnDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/used": {
      "post": {
        "summary": "Validate account",
        "description": "This API for Validate account",
        "operationId": "ApiService_CekAccountUsed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CekAccountUsedRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CekAccountAvaibilityReq"
            }
          }
        ],
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/account/v2/task": {
      "get": {
        "summary": "get list account task",
        "description": "This API for get list account task",
        "operationId": "ApiService_ListAccountTaskV2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "step",
            "description": "statuses status = 1;",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AllStep",
              "Maker",
              "Checker",
              "Signer",
              "Releaser"
            ],
            "default": "AllStep"
          },
          {
            "name": "limit",
            "description": "limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "companyID",
              "loginCode",
              "companyName",
              "countryCode",
              "accountName",
              "accountNumber",
              "currency",
              "createdTime",
              "createdBy",
              "approvedBy",
              "status",
              "approvedAt",
              "countryName"
            ],
            "default": "companyID"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter.taskID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filter.companyID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filter.accountName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountCurrency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.approvedAt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdByName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.loginCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.countryCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.countryName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.step",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filter.LastApprovedByName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.LastRejectedByName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.UpdatedByName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.reason",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.comment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.accountType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterOr",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/validate": {
      "post": {
        "summary": "Validate account",
        "description": "This API for Validate account",
        "operationId": "ApiService_ValidateAccountHttp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/validate-account-name-alias": {
      "get": {
        "summary": "Validate account name alias",
        "description": "This API for Validate account name alis",
        "operationId": "ApiService_ValidateAccountNameAlias",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateNameAliasAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "nameAlias",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "companyID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "taskID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/account/validate-account-number": {
      "post": {
        "summary": "Validate account by account number",
        "description": "This API for Validate account by account number",
        "operationId": "ApiService_ValidateAccountByAccountNumberHttp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountByAccountNumberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountByAccountNumberRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/account/validate-cif": {
      "post": {
        "summary": "Validate account by CIF",
        "description": "This API for Validate account by CIF",
        "operationId": "ApiService_ValidateAccountByCIFHttp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountByCIFResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountByCIFRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/account/validate/data": {
      "post": {
        "summary": "Validate account",
        "description": "This API for Validate account",
        "operationId": "ApiService_ValidateAccountDataHttp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateAccountRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    }
  },
  "definitions": {
    "ApiServiceCreateAccountTaskBody": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1AccountWrite"
        },
        "isDraft": {
          "type": "boolean"
        }
      }
    },
    "FileListAccountTaskRequestFormats": {
      "type": "string",
      "enum": [
        "null",
        "pdf",
        "xls",
        "csv"
      ],
      "default": "null"
    },
    "FileListTemplateRequestFormatTemplates": {
      "type": "string",
      "enum": [
        "null",
        "csv",
        "xls",
        "xlsx"
      ],
      "default": "null"
    },
    "SendNotifQueueRequestActions": {
      "type": "string",
      "enum": [
        "null_action",
        "send_approval",
        "update_send_approval",
        "approve",
        "reject",
        "rework",
        "delete"
      ],
      "default": "null_action"
    },
    "SendNotifQueueRequestNotifType": {
      "type": "string",
      "enum": [
        "null_type",
        "common",
        "notif_cif_account"
      ],
      "default": "null_type"
    },
    "apiHttpBody": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "The HTTP Content-Type header value specifying the content type of the body."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "The HTTP request/response body as raw binary."
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs."
        }
      },
      "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest)\n        returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody)\n        returns (google.protobuf.Empty);\n\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "servicev1InquiryAccount": {
      "type": "object",
      "properties": {
        "customerNumber": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "availableBalance": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "branchCode": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "openingDate": {
          "type": "string"
        },
        "productGroup": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "currentBalance": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        }
      }
    },
    "v1Account": {
      "type": "object",
      "properties": {
        "accountID": {
          "type": "string",
          "format": "uint64",
          "readOnly": true
        },
        "companyID": {
          "type": "string",
          "format": "uint64"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountAlias": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountStatus": {
          "type": "string"
        },
        "accountCurrency": {
          "type": "string"
        },
        "accessLevel": {
          "type": "string"
        },
        "isOwnedByCompany": {
          "type": "string"
        },
        "createdByID": {
          "type": "string",
          "format": "uint64"
        },
        "updatedByID": {
          "type": "string",
          "format": "uint64"
        },
        "deletedByID": {
          "type": "string",
          "format": "uint64"
        },
        "disabled": {
          "type": "boolean",
          "title": "uint64 roleID = 14 [(gorm.field).tag = {column: \"RoleID\"}];"
        },
        "cif": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "batchId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "v1AccountDetailData": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "alias": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accessLevel": {
          "type": "string"
        },
        "accountOwnership": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "statusTask": {
          "type": "string"
        }
      }
    },
    "v1AccountDetailResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1Account"
        }
      }
    },
    "v1AccountRole": {
      "type": "object",
      "properties": {
        "accountID": {
          "type": "integer",
          "format": "uint64"
        },
        "roleID": {
          "type": "string",
          "format": "uint64"
        },
        "createdByID": {
          "type": "integer",
          "format": "uint64",
          "readOnly": true
        },
        "updatedByID": {
          "type": "integer",
          "format": "uint64",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "v1AccountTask": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1AccountTaskData"
        },
        "task": {
          "$ref": "#/definitions/v1Task"
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountTaskData"
          }
        },
        "company": {
          "$ref": "#/definitions/v1CompanyData"
        }
      }
    },
    "v1AccountTaskData": {
      "type": "object",
      "properties": {
        "accountID": {
          "type": "string",
          "format": "uint64"
        },
        "companyID": {
          "type": "string",
          "format": "uint64"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountAlias": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountName": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountStatus": {
          "type": "string"
        },
        "accountCurrency": {
          "type": "string"
        },
        "accessLevel": {
          "type": "string"
        },
        "isOwnedByCompany": {
          "type": "string"
        },
        "createdByID": {
          "type": "string",
          "format": "uint64"
        },
        "updatedByID": {
          "type": "string",
          "format": "uint64"
        },
        "deletedByID": {
          "type": "string",
          "format": "uint64"
        },
        "roleID": {
          "type": "string",
          "format": "uint64"
        },
        "disabled": {
          "type": "boolean"
        },
        "cif": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "createdByName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1AccountWithCompany": {
      "type": "object",
      "properties": {
        "taskID": {
          "type": "integer",
          "format": "int64"
        },
        "companyID": {
          "type": "integer",
          "format": "int64"
        },
        "accountName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountCurrency": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "approvedAt": {
          "type": "string"
        },
        "createdByName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "loginCode": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "step": {
          "type": "string",
          "format": "int64"
        },
        "LastApprovedByName": {
          "type": "string"
        },
        "LastRejectedByName": {
          "type": "string"
        },
        "UpdatedByName": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        }
      }
    },
    "v1AccountWrite": {
      "type": "object",
      "properties": {
        "accountID": {
          "type": "string",
          "format": "uint64"
        },
        "companyID": {
          "type": "string",
          "format": "uint64"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountAlias": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountName": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountStatus": {
          "type": "string"
        },
        "accountCurrency": {
          "type": "string"
        },
        "accessLevel": {
          "type": "string"
        },
        "isOwnedByCompany": {
          "type": "string"
        },
        "createdByID": {
          "type": "string",
          "format": "uint64"
        },
        "updatedByID": {
          "type": "string",
          "format": "uint64"
        },
        "deletedByID": {
          "type": "string",
          "format": "uint64"
        },
        "roleID": {
          "type": "string",
          "format": "uint64"
        },
        "disabled": {
          "type": "boolean"
        },
        "cif": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1AccountsByUserIdRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ApproveBatchAccountRequest": {
      "type": "object",
      "properties": {
        "batchId": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/v1UserDataMD"
        },
        "comment": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "passcode": {
          "type": "string"
        }
      }
    },
    "v1ApproveBatchAccountResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1CekAccountAvaibilityReq": {
      "type": "object",
      "properties": {
        "companyID": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "v1CekAccountAvaibilityRes": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1CekAccountUsedRes": {
      "type": "object",
      "properties": {
        "accountAlias": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1CheckFileNameRequest": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        }
      }
    },
    "v1CheckFileNameResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1CompanyData": {
      "type": "object",
      "properties": {
        "companyID": {
          "type": "string",
          "format": "uint64"
        },
        "companyCode": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        }
      }
    },
    "v1CreateAccountResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1Account"
        }
      }
    },
    "v1CreateAccountTaskBulkRequest": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountWrite"
          }
        },
        "taskID": {
          "type": "string",
          "format": "uint64"
        },
        "isDraft": {
          "type": "boolean"
        }
      }
    },
    "v1CreateAccountTaskMultipleResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "taskID": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "v1CreateAccountTaskRequest": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1AccountWrite"
        },
        "taskID": {
          "type": "string",
          "format": "uint64"
        },
        "isDraft": {
          "type": "boolean"
        }
      }
    },
    "v1CreateAccountTaskResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "taskID": {
          "type": "string",
          "format": "uint64"
        },
        "accountID": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1DataGetUserApprovedAndCreatedResponse": {
      "type": "object",
      "properties": {
        "Created": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Approved": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1DeleteAccountResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Account"
          }
        }
      }
    },
    "v1DeleteAccountRoleResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1Direction": {
      "type": "string",
      "enum": [
        "UNKNOWN_DIRECTION",
        "DESC",
        "ASC"
      ],
      "default": "UNKNOWN_DIRECTION"
    },
    "v1FileListAccountTaskRequestSort": {
      "type": "string",
      "enum": [
        "companyID",
        "loginCode",
        "companyName",
        "countryCode",
        "accountName",
        "accountNumber",
        "currency",
        "createdTime",
        "createdBy",
        "approvedBy",
        "status",
        "approvedAt",
        "countryName"
      ],
      "default": "companyID"
    },
    "v1FileListAccountTaskRequestdirection": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC"
    },
    "v1FileListAccountTaskRequeststeps": {
      "type": "string",
      "enum": [
        "AllStep",
        "Maker",
        "Checker",
        "Signer",
        "Releaser"
      ],
      "default": "AllStep"
    },
    "v1GetDetailAccountRequestSort": {
      "type": "string",
      "enum": [
        "status"
      ],
      "default": "status"
    },
    "v1GetDetailAccountRequestdirection": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC"
    },
    "v1GetDetailAccountResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountDetailData"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1GetDetailBatchData": {
      "type": "object",
      "properties": {
        "batchId": {
          "type": "string"
        },
        "fileDescription": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "totalRecord": {
          "type": "integer",
          "format": "int32"
        },
        "totalValid": {
          "type": "integer",
          "format": "int32"
        },
        "totalInvalid": {
          "type": "integer",
          "format": "int32"
        },
        "companyName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "statusApp": {
          "$ref": "#/definitions/v1StatusApproval"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        }
      }
    },
    "v1GetDetailBatchRequest": {
      "type": "object",
      "properties": {
        "batchId": {
          "type": "string"
        }
      }
    },
    "v1GetDetailBatchResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1GetDetailBatchData"
        }
      }
    },
    "v1GetListAccountRolesResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountRole"
          }
        }
      }
    },
    "v1GetListBatchRequestSort": {
      "type": "string",
      "enum": [
        "batchID",
        "companyName",
        "fileDescription",
        "fileFormat",
        "totalRecords",
        "totalDataInvalid",
        "totalDataValid",
        "createdAt",
        "status",
        "createdBy"
      ],
      "default": "batchID"
    },
    "v1GetListBatchRequestdirection": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC"
    },
    "v1GetListBatchResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UploadAccountBatchData"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1GetRDNAccountByRoleRPCResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetRDNAccountByRoleRPCResponseData"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1GetRDNAccountByRoleRPCResponseData": {
      "type": "object",
      "properties": {
        "accessLevel": {
          "type": "string"
        },
        "accountAlias": {
          "type": "string"
        },
        "accountCurrency": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "format": "uint64"
        },
        "accountName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountStatus": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "companyId": {
          "type": "string",
          "format": "uint64"
        },
        "companyName": {
          "type": "string"
        },
        "companyCode": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "cif": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "productCode": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "roleId": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1GetRDNAccountByRoleRequest": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "format": "uint64"
        },
        "dir": {
          "$ref": "#/definitions/v1Direction"
        },
        "filter": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "processId": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        }
      }
    },
    "v1GetRDNAccountByRoleResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetRDNAccountByRoleResponseData"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1GetRDNAccountByRoleResponseData": {
      "type": "object",
      "properties": {
        "accountID": {
          "type": "string",
          "format": "uint64"
        },
        "accountName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountAlias": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "accessLevel": {
          "type": "string"
        },
        "accountStatus": {
          "type": "string"
        },
        "companyId": {
          "type": "string",
          "format": "uint64"
        },
        "companyName": {
          "type": "string"
        },
        "companyCode": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "cif": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "productCode": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        }
      }
    },
    "v1GetRDNAccountByUserRoleRequest": {
      "type": "object",
      "properties": {
        "dir": {
          "$ref": "#/definitions/v1Direction"
        },
        "filter": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "processId": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        }
      }
    },
    "v1GetRDNAccountByUserRoleResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetRDNAccountByRoleResponseData"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1GetRDNAccountRequest": {
      "type": "object",
      "properties": {
        "dir": {
          "$ref": "#/definitions/v1Direction"
        },
        "filter": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "processId": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "searchCriteria": {
          "$ref": "#/definitions/v1RDNAccountSearchCriteria"
        }
      }
    },
    "v1GetRDNAccountResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetRDNAccountResponseData"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1GetRDNAccountResponseData": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "format": "uint64"
        },
        "accountName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "companyId": {
          "type": "string",
          "format": "uint64"
        },
        "companyCode": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "cif": {
          "type": "string"
        },
        "kodePerusahaanEfek": {
          "type": "string"
        }
      }
    },
    "v1GetTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "expiresIn": {
          "type": "string",
          "format": "uint64"
        },
        "refreshExpiresIn": {
          "type": "string",
          "format": "uint64"
        },
        "refreshToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "not-before-policy": {
          "type": "string",
          "format": "uint64"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "v1GetUserApprovedAndCreatedResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "string",
          "format": "uint64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1DataGetUserApprovedAndCreatedResponse"
        }
      }
    },
    "v1GlobalRequest": {
      "type": "object",
      "properties": {
        "request": {
          "type": "string"
        }
      }
    },
    "v1HealthCheckResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1InquiryAccountData": {
      "type": "object",
      "properties": {
        "inquiryAccount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/servicev1InquiryAccount"
          }
        }
      }
    },
    "v1InquiryAccountRequest": {
      "type": "object",
      "properties": {
        "tellerId": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        }
      }
    },
    "v1InsertRDNAccountRequest": {
      "type": "object",
      "properties": {
        "rdnBankAccount": {
          "$ref": "#/definitions/v1RDNBankAccountData"
        },
        "roleId": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "v1InsertRDNAccountResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1ListAccountByRoleRPCRequestdirection": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC"
    },
    "v1ListAccountRequestdirection": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC"
    },
    "v1ListAccountResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Account"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1ListAccountTaskRequestdirection": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC"
    },
    "v1ListAccountTaskRequeststatuses": {
      "type": "string",
      "enum": [
        "AllStatus",
        "Pending",
        "Draft",
        "Returned",
        "Approved",
        "Rejected"
      ],
      "default": "AllStatus"
    },
    "v1ListAccountTaskRequeststeps": {
      "type": "string",
      "enum": [
        "AllStep",
        "Maker",
        "Checker",
        "Signer",
        "Releaser"
      ],
      "default": "AllStep"
    },
    "v1ListAccountTaskResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountTask"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1ListAccountTaskV2RequestSort": {
      "type": "string",
      "enum": [
        "companyID",
        "loginCode",
        "companyName",
        "countryCode",
        "accountName",
        "accountNumber",
        "currency",
        "createdTime",
        "createdBy",
        "approvedBy",
        "status",
        "approvedAt",
        "countryName"
      ],
      "default": "companyID"
    },
    "v1ListAccountTaskV2Requestdirection": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC"
    },
    "v1ListAccountTaskV2Requeststeps": {
      "type": "string",
      "enum": [
        "AllStep",
        "Maker",
        "Checker",
        "Signer",
        "Releaser"
      ],
      "default": "AllStep"
    },
    "v1MyAllowedAccountByProductsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MyAllowedAccountByProductsResponseData"
          }
        }
      }
    },
    "v1MyAllowedAccountByProductsResponseData": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string"
        },
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "v1MyAllowedAccountResponse": {
      "type": "object",
      "properties": {
        "accountIDs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "string"
        },
        "dir": {
          "$ref": "#/definitions/v1Direction"
        },
        "totalPages": {
          "type": "string",
          "format": "uint64"
        },
        "totalRows": {
          "type": "string",
          "format": "uint64"
        },
        "filter": {
          "type": "string"
        }
      }
    },
    "v1QlolaAccountByUserId": {
      "type": "object",
      "properties": {
        "accountNo": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1QlolaBankAccountCompanyBrigateResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "responseData": {
          "$ref": "#/definitions/v1ResponseData"
        },
        "responseErrors": {
          "type": "string"
        }
      }
    },
    "v1QlolaGetBankAccount": {
      "type": "object",
      "properties": {
        "accountNo": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1QlolaGetBankAccountCompanyRequest": {
      "type": "object",
      "properties": {
        "companyCode": {
          "type": "string"
        }
      }
    },
    "v1QlolaListAccountBrigateResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "responseData": {
          "$ref": "#/definitions/v1QlolaListAccountByUserIDResponse"
        },
        "responseError": {
          "type": "string"
        }
      }
    },
    "v1QlolaListAccountByUserIDResponse": {
      "type": "object",
      "properties": {
        "accountList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1QlolaAccountByUserId"
          }
        }
      }
    },
    "v1RDNAccountSearchCriteria": {
      "type": "object",
      "properties": {
        "cif": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "companyCode": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountCurrency": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "kodePerusahaanEfek": {
          "type": "string"
        }
      }
    },
    "v1RDNBankAccount": {
      "type": "object",
      "properties": {
        "accessLevel": {
          "type": "string"
        },
        "accountAlias": {
          "type": "string"
        },
        "accountCurrency": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "format": "uint64"
        },
        "accountName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountStatus": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "companyId": {
          "type": "string",
          "format": "uint64"
        },
        "companyName": {
          "type": "string"
        },
        "companyCode": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "cif": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "productCode": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        }
      }
    },
    "v1RDNBankAccountData": {
      "type": "object",
      "properties": {
        "accessLevel": {
          "type": "string"
        },
        "accountAlias": {
          "type": "string"
        },
        "accountCurrency": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "format": "uint64"
        },
        "accountName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountStatus": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "companyId": {
          "type": "string",
          "format": "uint64"
        },
        "companyName": {
          "type": "string"
        },
        "companyCode": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "cif": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "kodePerusahaanEfek": {
          "type": "string"
        }
      }
    },
    "v1ResponseData": {
      "type": "object",
      "properties": {
        "accountList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1QlolaGetBankAccount"
          }
        }
      }
    },
    "v1SendNotificationAccountRPCResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1StatusApproval": {
      "type": "object",
      "properties": {
        "totalComplete": {
          "type": "integer",
          "format": "int32"
        },
        "totalSuccess": {
          "type": "integer",
          "format": "int32"
        },
        "totalUnsuccess": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1SubmitFileResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1SubmitFileResponseData"
        }
      }
    },
    "v1SubmitFileResponseData": {
      "type": "object",
      "properties": {
        "batch_id": {
          "type": "string"
        }
      }
    },
    "v1Task": {
      "type": "object",
      "properties": {
        "taskID": {
          "type": "string",
          "format": "uint64"
        },
        "status": {
          "type": "string"
        },
        "step": {
          "type": "string"
        },
        "featureID": {
          "type": "string",
          "format": "uint64"
        },
        "lastApprovedByName": {
          "type": "string"
        },
        "lastRejectedByName": {
          "type": "string"
        },
        "createdByName": {
          "type": "string"
        },
        "updatedByName": {
          "type": "string"
        },
        "reasons": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1UpdateAccountRoleRequest": {
      "type": "object",
      "properties": {
        "RoleID": {
          "type": "string",
          "format": "uint64"
        },
        "accountID": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "v1UpdateAccountRoleResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Account"
          }
        }
      }
    },
    "v1UpdateStatusAccountBatchRequest": {
      "type": "object",
      "properties": {
        "BatchId": {
          "type": "string"
        },
        "Action": {
          "type": "string"
        },
        "Task": {
          "type": "string"
        },
        "AccountNumber": {
          "type": "string"
        }
      }
    },
    "v1UpdateStatusAccountBatchResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1UploadAccountBatchData": {
      "type": "object",
      "properties": {
        "batchID": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "fileDescription": {
          "type": "string"
        },
        "fileFormat": {
          "type": "string"
        },
        "totalRecords": {
          "type": "string"
        },
        "totalDataValid": {
          "type": "string"
        },
        "totalDatainvalid": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "companyID": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1UserDataMD": {
      "type": "object",
      "properties": {
        "CompanyID": {
          "type": "string",
          "format": "uint64"
        },
        "CompanyName": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "RoleIDs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "UserType": {
          "type": "string"
        },
        "UserID": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1UserNonSession": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uint64"
        },
        "companyId": {
          "type": "string",
          "format": "uint64"
        },
        "companyName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "roleIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "userType": {
          "type": "string"
        }
      }
    },
    "v1ValidateAccountByAccountNumberRequest": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string"
        },
        "companyID": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1ValidateAccountByAccountNumberResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1ValidateAccountByAccountNumberResponseResponse"
        }
      }
    },
    "v1ValidateAccountByAccountNumberResponseResponse": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "nik": {
          "type": "string"
        },
        "cif": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mobileNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "citizenship": {
          "type": "string"
        },
        "identityType": {
          "type": "string"
        },
        "identityNumber": {
          "type": "string"
        },
        "placeOfBirth": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        }
      }
    },
    "v1ValidateAccountByCIFRequest": {
      "type": "object",
      "properties": {
        "accountCifNumber": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        }
      }
    },
    "v1ValidateAccountByCIFResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ValidateAccountByCIFResponseResponse"
          }
        }
      }
    },
    "v1ValidateAccountByCIFResponseResponse": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountCurrency": {
          "type": "string"
        },
        "accountStatus": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "accountProductType": {
          "type": "string"
        },
        "accountProductName": {
          "type": "string"
        },
        "accountCifNumber": {
          "type": "string"
        }
      }
    },
    "v1ValidateAccountDataResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1ValidateAccountDataResponseResponse"
        }
      }
    },
    "v1ValidateAccountDataResponseResponse": {
      "type": "object",
      "properties": {
        "remark2": {
          "type": "string"
        },
        "acctNo": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "acctCurr": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "cif": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "idNumber": {
          "type": "string"
        },
        "availableBalance": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "isRdn": {
          "type": "boolean"
        }
      }
    },
    "v1ValidateAccountRequest": {
      "type": "object",
      "properties": {
        "accountNo": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "companyId": {
          "type": "string",
          "format": "uint64"
        },
        "countryCode": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "v1ValidateAccountResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1ValidateAccountResponseResponse"
        }
      }
    },
    "v1ValidateAccountResponseResponse": {
      "type": "object",
      "properties": {
        "remark2": {
          "type": "string"
        },
        "acctNo": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "acctCurr": {
          "type": "string"
        },
        "minimumBal": {
          "type": "string"
        },
        "acctType": {
          "type": "string"
        },
        "availableBal": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "cif": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "idNumber": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "holdAmt": {
          "type": "string"
        }
      }
    },
    "v1ValidateAccountUklnDataResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1ValidateAccountUklnDataResponseResponse"
        }
      },
      "title": "UKLN"
    },
    "v1ValidateAccountUklnDataResponseResponse": {
      "type": "object",
      "properties": {
        "remark2": {
          "type": "string"
        },
        "acctNo": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "acctCurr": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "cif": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "idNumber": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        }
      }
    },
    "v1ValidateNameAliasAccountResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
