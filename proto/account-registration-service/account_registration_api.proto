syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";
import "account-registration-service/account_registration_payload.proto";
import "google/api/httpbody.proto";



package account_registration.service.v1;
option go_package = "./pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
};

service ApiService {

  rpc HealthCheck(google.protobuf.Empty) returns (HealthCheckResponse) {
    option (google.api.http) = {
        get: "/api/account-registration/health"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        security: {} // Disable security key
        summary: "Health Check"
        description: "This API for check server's health"
    };
  };


  rpc CreateAccountWithResCache(GlobalRequestWithResCache) returns (CreateAccountResponse) {
    option (google.api.http) = {
        post: "/api/account-registration/create"
        body: "*"
        additional_bindings: {
          post: "/api/account-registration/edit/{task_id}"
          body: "*"
        }
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "create Account"
        description: "This API for create new account"
    };
  };

  rpc CreateAccount(GlobalRequest) returns (CreateAccountResponse) {}

  rpc GetListAccount(GetListAccountRequest) returns (GetListAccountResponse) {
    option (google.api.http) = {
      post: "/api/account-registration/list"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Get List Account"
        description: "This API for get list account"
    };
  };

  rpc FilterDistinct (FilterDistinctRequest) returns (FilterDistinctResponse){
    option (google.api.http) = {
        post: "/api/account-registration/filter"
        body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Filter Account Registration";
        // security: {}
        description: "Filter Account Registration"
    };
  }

  rpc GetUrlDownloadPublic(GetUrlDownloadPublicRequest) returns (google.api.HttpBody) {
    option (google.api.http) = {
        post: "/api/account-registration/url-download"
        body: "*"
    };
  }

  rpc DownloadTemplatePowerOfAttorney (DownloadTemplateRequest) returns (google.api.HttpBody){
    option (google.api.http) = {
        post: "/api/account-registration/download-template"
        body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Download Template Power of Attorney";
        // security: {}
        description: "Download Template Power of Attorney"
    };
  };
  rpc DownloadListAccountRegistration (DownloadListAccountRegistrationRequest) returns (google.api.HttpBody){
    option (google.api.http) = {
        post: "/api/account-registration/download/{format}"
        body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Download List Items";
        // security: {}
        description: "Download List Items"
    };
  }

  rpc DetailAccountRegistration (DetailAccountRegistrationRequest) returns (DetailAccountRegistrationResponse){
    option (google.api.http) = {
        post: "/api/account-registration/detail"
        body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Detail Account Registration";
        // security: {}
        description: "Detail Account Registration"
  };
}  rpc ActionAccountRegister (ActionAccountRequest) returns (ActionAccountResponse){
    option (google.api.http) = {
        post: "/api/account-registration/action"
        body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Action Account Register";
        // security: {}
        description: "Action Account Register"
    };
  }

  rpc GetListAccountNds(GetListAccountNdsRequest) returns (GetListAccountNdsResponse) {
    option (google.api.http) = {
      post: "/api/account-registration/list-nds"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Get List Account"
        description: "This API for get list account"
    };
  };

  rpc GetResCache(ResCacheReq) returns (ResCacheRes) {
    option (google.api.http) = {
        post: "/api/account-registration/rescache"
        body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Get Response Cache"
        description: "This API for get rescache"
    };
}
}

message ResCacheReq {
  string rcode = 1;
}

message ResCacheRes {
  string response = 1;
  string error = 2;
  string responseCode = 3;
  string status = 4;
}