syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "beneficiary-account-service/beneficiary_account_payload.proto";
import "google/api/httpbody.proto";
package beneficiary.account.service.v1;
option go_package = "./pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    security_definitions: {
        security: {
                key: "bearer"
                value: {
                type: TYPE_API_KEY
                in: IN_HEADER
                name: "Authorization"
                description: "Authentication token, prefixed by Bearer: Bearer <token>"
            }
        }
    }
    security: {
        security_requirement: {
            key: "bearer"
        }
    }
};

service ApiService {

    rpc HealthCheck(Empty) returns (HealthCheckResponse) {
        option (google.api.http) = {
            get: "/api/beneficiary-account/health"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { } // Disable security key
            summary: "Health Check"
            description: "This API for check health server"
        };
    };

    rpc ListBeneficiaryAccount(ListBeneficiaryAccountRequest) returns (ListBeneficiaryAccountResponse) {
        option (google.api.http) = {
            get: "/api/beneficiary-account/data"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "List beneficiary account data"
            description: "This API for get list account"
        };
    };

    rpc ListBeneficiaryAccountByRole(ListBeneficiaryAccountRequest) returns (ListBeneficiaryAccountResponse) {
        option (google.api.http) = {
            get: "/api/beneficiary-account/dataByRole"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "List beneficiary account data"
            description: "This API for get list account"
        };
    };

    rpc ListBeneficiaryAccountDataByRole(ListBeneficiaryAccountDataByRoleRequest) returns (ListBeneficiaryAccountResponse) {};

    rpc TaskAction(TaskActionRequest) returns (TaskActionResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/task/{taskID}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Set status task by action"
            description: "This API is used for set task by action \n Actions: \n - approve \n - rework \n - reject"
        };
    };

    rpc CreateBeneficiaryAccount(CreateBeneficiaryAccountRequest) returns (CreateBeneficiaryAccountResponse);

    rpc CreateBeneficiaryAccountTask(CreateBeneficiaryAccountTaskRequest) returns (CreateBeneficiaryAccountTaskResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/task"
            body: "*"
            additional_bindings: [
				{
					post: "/api/beneficiary-account/task/edit/{taskID}"
					body: "*"
				}
			]
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Create task beneficiary-account"
            description: "This API for create task beneficiary-account"
        };
    };

    rpc CreateBeneficiaryAccountTaskMultiple(CreateBeneficiaryAccountTaskBulkRequest) returns (CreateBeneficiaryAccountTaskResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/task-bulk"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Create bulk task beneficiary-account"
            description: "This API for create bulk task beneficiary-account"
        };
    }

    rpc CreateBeneficiaryAccountTaskMultipleNoParrent(CreateBeneficiaryAccountTaskBulkRequest) returns (CreateBeneficiaryAccountTaskMultipleResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/task-multiple"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Create bulk task beneficiary-account without parent"
            description: "This API for create bulk task beneficiary-account without parent"
        };
    }

    rpc ListBeneficiaryAccountTask(ListBeneficiaryAccountTaskRequest) returns (ListBeneficiaryAccountTaskResponse) {
        option (google.api.http) = {
            get: "/api/beneficiary-account/task"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            summary: "get list beneficiary-account task"
            description: "This API for get list beneficiary-account task"
        };
    };

    rpc GetBeneficiaryAccountTaskByID(GetBeneficiaryAccountTaskByIDRequest) returns (ListBeneficiaryAccountTaskResponse) {
        option (google.api.http) = {
            get: "/api/beneficiary-account/task/{taskID}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "get beneficiary-account task by id"
            description: "This API for get beneficiary-account task by id"
        };
    }

    rpc DeleteBeneficiaryAccount(CreateBeneficiaryAccountRequest) returns (DeleteBeneficiaryRes) ;

    rpc RequestDeleteBeneficiaryAccountTask(GetBeneficiaryAccountTaskByIDRequest) returns (ListBeneficiaryAccountTaskResponse){
        option (google.api.http) = {
            post: "/api/beneficiary-account/task/delete/{taskID}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Delete request beneficiary-account task"
            description: "This API for deletes beneficiary-account task"
        };
    }

    rpc ValidateBeneficiaryAccount(ValidateBeneficiaryAccountRequest) returns (ValidateBeneficiaryAccountResponse) {}
    rpc ValidateBeneficiaryAccountWithoutSession(ValidateBeneficiaryAccountRequest) returns (ValidateBeneficiaryAccountResponse) {}
    rpc ValidateBeneficiaryAccountHTTP(ValidateBeneficiaryAccountRequest) returns (ValidateBeneficiaryAccountResponseHTTP) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/validate"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "Validate beneficiary-account"
            description: "This API for Validate beneficiary-account"
        };
    }

    rpc ValidateBeneficiaryAccountEnquiry(ValidateBeneficiaryAccountEnquiryRequest) returns (ValidateBeneficiaryAccountEnquiryResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/validate/enquiry"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "Validate beneficiary-account"
            description: "This API for Validate beneficiary-account"
        };
    }

    rpc ValidateBenefPaymentHubV2(ValidateBenefPaymentHubV2Request) returns (ValidateBenefPaymentHubV2Response){
        option (google.api.http) = {
            post: "/api/beneficiary-account/validate/paymenthub-v2"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "Validate beneficiary-account PaymentHub V2"
            description: "This API for Validate beneficiary-account"
        };
    }

    rpc BeneficiaryAccountDetail(BeneficiaryAccountDetailRequest) returns (BeneficiaryAccountDetailResponse) {
        option (google.api.http) = {
            get: "/api/beneficiary-account/data/{beneficiaryAccountID}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { } // Disable security key
            summary: "beneficiary-account data by id"
            description: "This API for get beneficiary-account by id"
        };
    };

    rpc UpdateBeneficiaryAccountRoleRPC(UpdateBeneficiaryAccountRoleRequest) returns (UpdateBeneficiaryAccountRoleResponse) {}

    rpc UpdateBeneficiaryAccountRole(UpdateBeneficiaryAccountRoleRequest) returns (UpdateBeneficiaryAccountRoleResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/data/update-beneficiary-account"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Account data update beneficiary-account"
            description: "This API for get beneficiary-account update beneficiary-account"
        };
    };

    rpc DownloadListBeneficiaryAccountTasks(FileListBeneficiaryAccountTaskRequest) returns (google.api.HttpBody) {
        option (google.api.http) = {
            get: "/api/beneficiary-account/task/file/{fileFormat}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Download list beneficiary-account task"
            description: "This API for download list beneficiary-account task"
        };
    };


    rpc DownloadTemplate(FileListTemplateRequest) returns (google.api.HttpBody) {
        option (google.api.http) = {
            get: "/api/beneficiary-account/template/file/{fileFormat}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Download list beneficiary-account task"
            description: "This API for download list beneficiary-account task"
        };
    };

    rpc CekBeneficiaryAccountAvaibility(CekBeneficiaryAccountAvaibilityReq) returns (CekBeneficiaryAccountAvaibilityRes) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/available"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "Validate beneficiary-account"
            description: "This API for Validate beneficiary-account"
        };
    };


    rpc CekBeneficiaryAccountUsed(CekBeneficiaryAccountAvaibilityReq) returns (CekBeneficiaryAccountUsedRes) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/used"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "get used  beneficiary-account by role"
            description: "This API for get beneficiary-account used"
        };
    };


    rpc ListBank(ListBankReq) returns (ListBankRes){
        option (google.api.http) = {
            get: "/api/beneficiary-account/bank"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { } // Disable security key
            summary: ""
            description: ""
        };
    }

    rpc BankDetail(BankDetailRequest) returns (BankDetailResponse) {
        option (google.api.http) = {
            get: "/api/system/data/{beneficiaryBankID}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { } // Disable security key
            summary: "Bank data by id"
            description: "This API for get bank by id"
        };
    };

    rpc ListBeneficiaryAccountByRoleRPC(ListBeneficiaryAccountByRoleRPCRequest) returns (ListBeneficiaryAccountResponse);

    rpc ListBeneficiaryAccountRPC(ListBeneficiaryAccountRequest) returns (ListBeneficiaryAccountResponse);

    rpc ValidateBeneficiaryAccountRPC(ValidateBeneficiaryAccountRequest) returns (ValidateBeneficiaryAccountResponse);
    
    // * Start Beneficiary Favorite
    rpc FullCreateBeneficiaryFavorite(FullCreateBeneficiaryFavoriteRequest) returns (BeneficiaryFavoriteResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/favorite/full"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            tags: ["Beneficiary Favorite"];
            summary: "Full Create Beneficiary Account Favorite"
            description: "This API for full create beneficiary account favorite"
        };
    };

    rpc CreateBeneficiaryFavorite(CreateBeneficiaryFavoriteRequest) returns (BeneficiaryFavoriteResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/favorite"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            tags: ["Beneficiary Favorite"];
            summary: "Create Beneficiary Account Favorite"
            description: "This API for create beneficiary account favorite"
        };
    };

    rpc ListBeneficiaryFavorite(ListBeneficiaryFavoriteRequest) returns (ListBeneficiaryFavoriteResponse) {
        option (google.api.http) = {
            get: "/api/beneficiary-account/favorite"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            tags: ["Beneficiary Favorite"];
            summary: "Get List Beneficiary Account Favorite"
            description: "This API for get list beneficiary account favorite"
        };
    };

    rpc UpdateBeneficiaryFavorite(UpdateBeneficiaryFavoriteRequest) returns (BeneficiaryFavoriteResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/favorite/update"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            tags: ["Beneficiary Favorite"];
            summary: "Update Beneficiary Account Favorite"
            description: "This API for update beneficiary account favorite"
        };
    };

    rpc DeleteBeneficiaryFavorite(DeleteBeneficiaryFavoriteRequest) returns (BeneficiaryFavoriteResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/favorite/delete"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            tags: ["Beneficiary Favorite"];
            summary: "Delete Beneficiary Account Favorite"
            description: "This API for delete beneficiary account favorite"
        };
    };

    rpc BeneficiaryFavoriteAvaiblity(BeneficiaryFavoriteAvaiblityRequest) returns (BeneficiaryFavoriteAvaiblityResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/favorite/avaible"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            tags: ["Beneficiary Favorite"];
            summary: "Check Beneficiary Account Favorite Avaiblity"
            description: "This API for Checking beneficiary account favorite avaiblity"
        };
    };
    
    rpc CreateBatchBeneficiaryFavorite(CreateBatchBeneficiaryFavoriteRequest) returns (BeneficiaryFavoriteResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/favorite/batch"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            tags: ["Beneficiary Favorite"];
            summary: "Create Batch Beneficiary Account Favorite"
            description: "This API for create batch beneficiary account favorite"
        };
    }
    
    // * End Beneficiary Favorite

    // UKLN
    rpc AddUKLNBeneficiaryAccountToList(AddUKLNBeneficiaryAccountToListRequest) returns (AddUKLNBeneficiaryAccountToListResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/ukln-ift"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["UKLN IFT"]
            summary: "Add Beneficiary Account to List"
            description: "This API for add beneficiary account to list"
        };
    };

    rpc IsExistBeneficiaryFavorite(IsExistBeneficiaryFavoriteRequest) returns (IsExistBeneficiaryFavoriteResponse) {
        option (google.api.http) = {
            post: "/api/beneficiary-account/favorite/is-exist"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            tags: ["Beneficiary Favorite"];
            summary: "Check if Beneficiary Account Favorite Exists"
            description: "This API for checking if beneficiary account favorite exists"
        };
    };
    
}

message ValidateBeneficiaryAccountRequest{
    string accountNo = 1;  
    string bankCode = 2;
    string amount = 4;
}

message ValidateBeneficiaryAccountResponse{
    bool error = 1;
    uint32 code = 2;
    string message = 3;

    message Detail {
        string status = 1;
        string header = 2;
        string body = 3;
        // string responseCode = 2;
        // string responseMessage = 3;
        // uint64 acctNo = 4;
        // string actype = 5;
        // // uint64 availableBal = 6;
        // string acctCurr = 7;
        // string shortName = 8;
        // uint32 status = 9;
    }

    message Response {
        string remark2 = 1;
        string acctNo = 2;
        string errorCode = 3;
        string responseCode = 4;
        string responseMessage = 5;
        string shortName = 6;
        string acctCurr = 7;
        string availableBal = 8;
        string status = 9 ;
        string idNumber = 10;
        // string errorCode = 1;
        // string responseCode = 2;
        // string responseMessage = 3;
        // string name = 4;
        // string feeAmount = 5;
        ValidateBeneficiaryAccountResponse.Detail detail = 11;
        string accType = 12;
        string CIF = 13;
        string loanType = 14;
        // string acctType = 15;
        bool is_rdn = 15;
    }

    Response data = 4;
}

message ValidateBeneficiaryAccountResponseHTTP{
    bool error = 1;
    uint32 code = 2;
    string message = 3;

    message Response {
        string remark2 = 1;
        string acctNo = 2;
        string errorCode = 3;
        string responseCode = 4;
        string responseMessage = 5;
        string shortName = 6;
        string acctCurr = 7;
        string availableBal = 8;
        string status = 9 ;
        string idNumber = 10;
        string accType = 11;
        string acctType = 12;
    }

    Response data = 4;
}

message TempGenToken {
    enum Role {
        bankadmin = 0;
        companyadmin = 1;
        companyuser = 2;
    }
    Role role = 1;
}
