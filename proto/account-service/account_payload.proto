syntax = "proto3";

import "account-service/account_gorm_db.proto";
import "account-service/account_core.proto";

package account.service.v1;
option go_package = "./pb";

import "mwitkow/go-proto-validators/validator.proto";
import "google/protobuf/timestamp.proto";
// import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// response for get user created and approved

message GetUserApprovedAndCreatedResponse{
    bool error = 1;
    uint64 code = 2;
    string message = 3;
    DataGetUserApprovedAndCreatedResponse data = 4;
}

message DataGetUserApprovedAndCreatedResponse{
    repeated string Created = 1;
    repeated string Approved = 2;
}

//list v2
message ListAccountTaskV2Request {
    enum statuses{
        AllStatus = 0;
        Pending = 1;
        Draft = 2;
        Returned = 3;
        Approved = 4;
        Rejected = 5;
        DeleteRequest = 6;
        Deleted = 7;
    }

    enum steps{
        AllStep = 0;
        Maker = 1;
        Checker = 2;
        Signer = 3;
        Releaser = 4;
    }

    //    statuses status = 1;
    steps step = 2;

    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "limit data per page. Default value '-1' for disable limit",
    }];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "page number to get data. Default value '-1' for disable page",
    }];

    enum Sort {
        companyID = 0;
        loginCode = 1;
        companyName = 2;
        countryCode = 3;
        accountName = 4;
        accountNumber = 5;
        currency = 6;
        createdTime = 7;
        createdBy = 8;
        approvedBy = 9;
        status = 10;
        approvedAt = 11;
        countryName = 12;
    }

    Sort sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Order data by column name",
    }];

    enum direction {
        DESC = 0;
        ASC = 1;
    }

    direction dir = 6;
    AccountWithCompany filter = 7;
    string query = 8;
    string filterOr = 9;
}

// DeleteAccountRole
message DeleteAccountRoleRequest {
    uint64 roleID = 1;
}

message DeleteAccountRoleResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}



// validate account alias
message ValidateNameAliasAccountRequest {
   repeated string nameAlias = 1;
    uint64 companyID = 2;
    uint64 taskID = 3;

}

message ValidateNameAliasAccountResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message LoginRequest {
    string username = 1 [(validator.field) = {msg_exists : true}];
    string password = 2 [(validator.field) = {msg_exists : true}];
}

message LoginResponse {
    string access_token = 1;
}

message HealthCheckResponse {
    string message = 1;
}

message Empty {}

message InvalidKeyError {
    string key = 1;
    string message = 2;
}

message JWTTokenResponse {
    string token = 1;
    int64 expiredAt = 2;
}

message ListRequest {}



message ListAccountRequest {
    Account account = 1;
    int32 limit = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "limit data per page. Default value '-1' for disable limit",
    }];
    int32 page = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "page number to get data. Default value '-1' for disable page",
    }];
    string sort = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Order data by column name",
    }];
    
    enum direction {
        DESC = 0;
        ASC = 1;
    }

    direction dir = 5;
    string filter = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string filterOr = 8;
    string in = 9;
    uint64 productID = 10;
    string productNames = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "group by product names. Default value '' for get all accounts \n format: [key:value,value] \n example: feature=productNames,Internal Fund Transfer"
    }];
}

message Sort {
    string column = 1;
    string direction = 2;
}

message MyAllowedAccountRequest {
    repeated uint64 roleIDs = 1;
}

message MyAllowedAccountResponse {
    repeated uint64 accountIDs = 4;
}

message ListAccountResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Account data = 4;
    Pagination pagination = 5;
}

message ListAccountActiveResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Account data = 4;
}

message CreateAccountRequest {
    Account data = 1;
    uint64 taskID = 2;
    string action = 3;
}

 
message CreateAccountTaskRequest {
    AccountWrite data = 1;
    uint64 taskID = 2;
    bool isDraft = 3;
}

message CreateAccountBatchTaskRequest {
    AccountWrite data = 1;
    uint64 taskID = 2;
    string batchID = 3;
    bool isDraft = 4;
}

message AccountWrite {
    uint64 accountID = 1  ;
    uint64 companyID = 2  ;
    string accountNumber = 3 ;
    repeated string accountAlias = 4  ;
    string accountName = 5  ;
    string accountType = 6  ;
    string accountStatus = 7  ;
    string accountCurrency = 8  ;
    string accessLevel = 9 ;
    string isOwnedByCompany = 10  ;
    uint64 createdByID = 11  ;
    uint64 updatedByID = 12 ;
    uint64 deletedByID = 13  ;
    uint64 roleID = 14  ;
    bool disabled = 15  ; 
    string cif = 19 ;
    string productCode = 20 ;
    string statusCode = 21 ;
    string companyName = 22;
    google.protobuf.Timestamp createdAt = 16;
    google.protobuf.Timestamp updatedAt = 17;
    google.protobuf.Timestamp deletedAt = 18 ; 
}

message CreateAccountTaskBulkRequest {
    repeated AccountWrite accounts = 1;
    uint64 taskID = 2;
    bool isDraft = 3;
}

message AccountAlias {
    string accountAlias = 1;
}

message CreateAccountResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Account data = 4;
}

message DeleteAccountResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Account data = 4;
}

message Task {
    uint64 taskID = 1;
    string status = 2;
    string step = 3;
    uint64 featureID = 4;
    string lastApprovedByName = 5;
    string lastRejectedByName = 6;
    string createdByName = 7;
    string updatedByName = 8;
    string reasons = 9;
    string comment = 10;
    google.protobuf.Timestamp createdAt = 50;
    google.protobuf.Timestamp updatedAt = 51;
}


message AccountTaskData {
    uint64 accountID = 1;
    uint64 companyID = 2;
    string accountNumber = 3;
    repeated string accountAlias = 4;
    string accountName = 5;
    string accountType = 6; 
    string accountStatus = 7;
    string accountCurrency = 8;
    string accessLevel = 9;
    string isOwnedByCompany = 10;
    uint64 createdByID = 11;
    uint64 updatedByID = 12;
    uint64 deletedByID = 13;
    uint64 roleID = 14  ;
    bool disabled = 15  ; 
    string cif = 16;
    string productCode = 17 ;
    string statusCode = 18 ;

    string companyName = 31;
    string createdByName = 32;

    google.protobuf.Timestamp createdAt = 51;
    google.protobuf.Timestamp updatedAt = 52;
    google.protobuf.Timestamp deletedAt = 53;
}

message AccountTaskDataString {
    uint64 accountID = 1;
    uint64 companyID = 2;
    string accountNumber = 3;
    string accountAlias = 4;
    string accountName = 5;
    string accountType = 6; 
    string accountStatus = 7;
    string accountCurrency = 8;
    string accessLevel = 9;
    string isOwnedByCompany = 10;
    uint64 createdByID = 11;
    uint64 updatedByID = 12;
    uint64 deletedByID = 13;
    uint64 roleID = 14  ;
    bool disabled = 15  ; 
    string cif = 16 ;
    string productCode = 17 ;
    string statusCode = 18 ;

    string companyName = 31;
    string createdByName = 32;

    google.protobuf.Timestamp createdAt = 51;
    google.protobuf.Timestamp updatedAt = 52;
    google.protobuf.Timestamp deletedAt = 53;
}

message AccountTask {
    AccountTaskData account = 1;
    Task task = 2;
    repeated AccountTaskData accounts = 3;
    CompanyData company = 4;
}

message CompanyData {
    uint64 companyID = 1;
    string companyCode = 2;
    string companyName  = 3;
    string countryCode = 4;
    string countryName = 5;
}

message CreateAccountTaskResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    uint64 taskID = 4;
    uint64 accountID = 5;
}

message CreateAccountTaskMultipleResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated uint64 taskID = 4;
}

message ListAccountTaskRequest {
    enum statuses{
        AllStatus = 0;
        Pending = 1;
        Draft = 2;
        Returned = 3;
        Approved = 4;
        Rejected = 5;
    }

    enum steps{
        AllStep = 0;
        Maker = 1;
        Checker = 2;
        Signer = 3;
        Releaser = 4;
    }

    statuses status = 1;
    steps step = 2;

    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "limit data per page. Default value '-1' for disable limit",
    }];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "page number to get data. Default value '-1' for disable page",
    }];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Order data by column name",
    }];

    enum direction {
        DESC = 0;
        ASC = 1;
    }

    direction dir = 6;
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
}

message GetAccountTaskByIDRequest {
    uint64 taskID = 1;

}

message ListAccountTaskResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated AccountTask data = 4;
    Pagination pagination = 5;
}

message errorBodyResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message AccountDetailRequest {
    uint64 accountID = 1;
}

message AccountDetailResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Account data = 4;
}

message UpdateAccountRoleRequest {
    uint64 RoleID = 1;
    repeated uint64 accountID = 2;
}

message UpdateAccountRoleResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Account data = 4;
}

message FileListTemplateRequest {
    
    enum FormatTemplates {
        null = 0;
        csv = 1;
        xls = 2;
        xlsx = 3;
    }
    FormatTemplates fileFormat = 1;
}
	
message FileListAccountTaskRequest {
    enum Formats {
        null = 0;
        pdf = 1;
        xls = 2;
        csv = 3;
    }
    Formats fileFormat = 1;

    enum statuses{
        AllStatus = 0;
        Pending = 1;
        Draft = 2;
        Returned = 3;
        Approved = 4;
        Rejected = 5;
        DeleteRequest = 6;
        Deleted = 7;
    }

    enum steps{
        AllStep = 0;
        Maker = 1;
        Checker = 2;
        Signer = 3;
        Releaser = 4;
    }

    //    statuses status = 1;
    steps step = 2;

    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "limit data per page. Default value '-1' for disable limit",
    }];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "page number to get data. Default value '-1' for disable page",
    }];

    enum Sort {
        companyID = 0;
        loginCode = 1;
        companyName = 2;
        countryCode = 3;
        accountName = 4;
        accountNumber = 5;
        currency = 6;
        createdTime = 7;
        createdBy = 8;
        approvedBy = 9;
        status = 10;
        approvedAt = 11;
        countryName = 12;
    }

    Sort sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Order data by column name",
    }];

    enum direction {
        DESC = 0;
        ASC = 1;
    }

    direction dir = 6;
    AccountWithCompany filter = 7;
    string query = 8;
    string filterOr = 9;
}


message CekAccountAvaibilityReq {
    string companyID = 1;
    string accountNumber = 2;
    string countryCode = 3;
    string  type = 4;
}

message CekAccountAvaibilityRes {
    bool available = 1;
    string status = 2;
}

message CekAccountUsedRes {
   repeated string accountAlias = 1;
}

message AccountNotificationData {
    string USERNAME_MAKER = 1 [json_name='USERNAME_MAKER'];
    string USERNAME_APPROVER = 2 [json_name='USERNAME_APPROVER'];
    string CREATED_DATETIME = 3 [json_name='CREATED_DATETIME'];
    string CREATED_DATE = 4 [json_name='CREATED_DATE'];
    string CREATED_TIME = 5 [json_name='CREATED_TIME'];
    string EVENT_DATETIME = 6 [json_name='EVENT_DATETIME'];
    string EVENT_DATE = 7 [json_name='EVENT_DATE'];
    string EVENT_TIME = 8 [json_name='EVENT_TIME'];
    string ACCOUNT_NUMBER = 9 [json_name='ACCOUNT_NUMBER'];
    string ACCOUNT_ALIAS = 10 [json_name='ACCOUNT_ALIAS'];
    string ACCOUNT_HOLDER_NAME = 11 [json_name='ACCOUNT_HOLDER_NAME'];
    string BANK_NAME = 12 [json_name='BANK_NAME'];
    string CURRENCY_NAME = 13 [json_name='CURRENCY_NAME'];
    string TASK_ID = 14 [json_name='TASK_ID'];
    string USERNAME_REJECTOR = 15 [json_name='USERNAME_REJECTOR'];
    string COMPANY_NAME = 16 [json_name='COMPANY_NAME'];
    string USERNAME_CHECKER = 17 [json_name='USERNAME_CHECKER'];
    string USERNAME_RELEASER = 18 [json_name='USERNAME_RELEASER'];
    string ACCOUNT_TYPE = 19 [json_name='ACCOUNT_TYPE'];
}

message ListAccountByRoleRPCRequest {
    Account account = 1;
    repeated uint64 roles = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "limit data per page. Default value '-1' for disable limit",
    }];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "page number to get data. Default value '-1' for disable page",
    }];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Order data by column name",
    }];
    
    enum direction {
        DESC = 0;
        ASC = 1;
    }

    direction dir = 6;
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string filterOr = 9;
    string in = 10;
    uint64 productID = 11;
}

message ValidateAccountByCIFRequest {
    string account_cif_number = 1;
    string account_number = 2;
}

message ValidateAccountByCIFResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;

    message Response {
        string account_number = 1;
        string account_type = 2;
        string account_currency = 3;
        string account_status = 4;
        string account_name = 5;
        string account_product_type = 6;
        string account_product_name = 7;
        string account_cif_number = 8;
    }

    repeated Response data = 4;
}

message ValidateAccountByAccountNumberRequest {
    string accountNumber = 1;
    uint64 companyID = 2;
}

message ValidateAccountByAccountNumberResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;

    message Response {
        string address1 = 1;
        string zipCode = 2;
        string nik = 3;
        string cif = 4;
        string branch = 5;
        string name = 6;
        string mobileNumber = 7;
        string email = 8;
        string citizenship = 9;
        string identityType = 10;
        string identityNumber = 11;
        string placeOfBirth = 12;
        string dateOfBirth = 13;
        string accountType = 14;
    }

    Response data = 4;
}

message AccountsByUserIdRequest {
    int64 userId = 1; 
}

message QlolaAccountByUserId {
    string accountNo = 1;
    string accountName = 4;
    string accountType = 2;
    string currency = 3;
    string updatedAt = 20;
}

message QlolaListAccountByUserIDResponse {
    repeated QlolaAccountByUserId accountList = 1;
}

message QlolaListAccountBrigateResponse {
    string responseCode = 1;
    string responseMessage = 2;
    QlolaListAccountByUserIDResponse responseData = 3;
    string responseError = 4;
}
message ResponseData {
    repeated QlolaGetBankAccount accountList = 1;
}

message QlolaGetBankAccountCompanyRequest {
    string companyCode = 1;
}

message QlolaGetBankAccount {
    string accountNo = 1;
    string accountName = 4;
    string accountType = 2;
    string currency = 3;
    string updatedAt = 20;
}

message QlolaBankAccountCompanyBrigateResponse {
    string responseCode = 1;
    string responseMessage = 2;
    ResponseData responseData = 3;
    string responseErrors = 4;
}

// UKLN
message ValidateAccountUklnDataResponse{
    bool error = 1;
    uint32 code = 2;
    string message = 3;

    message Response {
        string remark2 = 1;
        string acctNo = 2;
        string errorCode = 3;
        string responseCode = 4;
        string responseMessage = 5;
        string shortName = 6;
        string acctCurr = 7;
        string status = 9 ;
        string cif = 10 ;
        string productCode = 11 ;
        string statusCode = 12 ;
        string idNumber = 13;
        string accountType = 14;
    }

    Response data = 4;
}

message BrigateAccessTokenRequest {
    string client_id = 1;
    string client_secret = 2;
    string grant_type = 3;
    string scope = 4;
}

message GetTokenResponse {
    string access_token = 1 [json_name='accessToken'];
    uint64 expires_in = 2 [json_name='expiresIn'];
    uint64 refresh_expires_in = 3 [json_name='refreshExpiresIn'];
    string refresh_token = 4 [json_name='refreshToken'];
    string token_type = 5 [json_name='tokenType'];
    uint64 not_before_policy = 6 [json_name='not-before-policy'];
    string scope = 7;
}

message InquiryAccountRequest {
    string teller_id = 1;
    string account_number = 2;
    string country_code = 3;
}

message InquiryAccount {
    string customerNumber = 1;
    string accountNumber = 2;
    string availableBalance = 3;
    string accountType = 4;
    string branchCode = 5;
    string currency = 6;
    string openingDate = 7;
    string productGroup = 8;
    string productName = 9;
    string status = 10;
    string currentBalance = 11;
    string shortName = 12;
}

message InquiryAccountData {
    repeated InquiryAccount inquiryAccount = 1;
}

message InquiryAccountResponse {
    InquiryAccountData data = 1;
}

enum ApiType {
    GET_TOKEN = 0;
    INTROSPECT = 1;
    REFRESH_TOKEN = 2;
    INQUIRY = 3;
    BRIGATE_TOKEN = 4;
}

message ValidateAccountWithoutSessionRequest{
    string accountNo = 1;
    string remark = 2;
    string productName = 3;
    uint64 companyId = 4;
    string countryCode = 5;
    string type = 6;
    uint64 userId = 7;
    string username = 8;
    string userType = 9;
    string userRegion = 10;
}

message ValidateAccountRequest{
    string accountNo = 1;
    string remark = 2;
    string productName = 3;
    uint64 companyId = 4;
    string countryCode = 5;
    string type = 6;
}

message ValidateAccountResponse{
    bool error = 1;
    uint32 code = 2;
    string message = 3;

    message Response {
        string remark2 = 1;
        string acctNo = 2;
        string errorCode = 3;
        string responseCode = 4;
        string responseMessage = 5;
        string shortName = 6;
        string acctCurr = 7;
        string minimumBal = 14;
        string acctType = 15;
        string availableBal = 8;
        string status = 9 ;
        string cif = 10 ;
        string productCode = 11 ;
        string statusCode = 12 ;
        string idNumber = 13;
        string branch = 22;
        string holdAmt = 23;
    }

    Response data = 4;
}

message ValidateAccountDataResponse{
    bool error = 1;
    uint32 code = 2;
    string message = 3;

    message Response {
        string remark2 = 1;
        string acctNo = 2;
        string errorCode = 3;
        string responseCode = 4;
        string responseMessage = 5;
        string shortName = 6;
        string acctCurr = 7;
        string status = 9 ;
        string cif = 10 ;
        string productCode = 11 ;
        string statusCode = 12 ;
        string idNumber = 13;
        string availableBalance = 14;
        string accountType = 15;
        bool isRdn = 16;
    }

    Response data = 4;
}

message TempGenToken {
    enum Role {
        bankadmin = 0;
        companyadmin = 1;
        companyuser = 2;
    }
    Role role = 1;
}

message GetRDNAccountByRoleRequest{
    uint64 role_id = 1;
    Direction dir = 2;
    string filter = 3;
    int32 limit = 4;
    int32 page = 5;
    string process_id = 6;
    string query = 7;
    string sort = 8;
}

message GetRDNAccountByUserRoleRequest{
    Direction dir = 1;
    string filter = 2;
    int32 limit = 3;
    int32 page = 4;
    string process_id = 5;
    string query = 6;
    string sort = 7;
}

message GetRDNAccountByUserRoleResponse{
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated GetRDNAccountByRoleResponseData data = 4;
    Pagination pagination = 5;
}

message GetRDNAccountByRoleResponseData {
    uint64 accountID = 1;
    string accountName = 2;
    string accountNumber = 3;
    string accountAlias = 4;
    string accountType = 5;
    string currency = 6;
    string accessLevel = 7;
    string accountStatus = 8;
    uint64 companyId = 9;
    string companyName = 10;
    string companyCode = 11;
    string countryName = 12;
    string countryCode = 13;
    string cif = 14;
    google.protobuf.Timestamp created_at = 15;
    google.protobuf.Timestamp deleted_at = 16;
    google.protobuf.Timestamp updated_at = 17;
    string product_code = 18;
    string status_code = 19;
}

message GetRDNAccountByRoleResponse{
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated GetRDNAccountByRoleResponseData data = 4;
    Pagination pagination = 5;
}

message GetRDNAccountRequest{
    Direction dir = 1;
    string filter = 2;
    int32 limit = 3;
    int32 page = 4;
    string process_id = 5;
    string query = 6;
    string sort = 7;
    RDNAccountSearchCriteria search_criteria = 8;
}

message RDNAccountSearchCriteria {
    string cif = 1;
    string company_id = 2;
    string company_code = 3;
    string company_name = 4;
    string account_name = 5;
    string account_number = 6;
    string account_currency = 7;
    string last_updated = 8;
    string status = 9;
    string kode_perusahaan_efek = 10;
}

message GetRDNAccountResponseData {
    uint64 account_id = 1;
    string account_name = 2;
    string account_number = 3;
    string company_name = 4;
    uint64 company_id = 5;
    string company_code = 6;
    string country_code = 7;
    string country_name = 8;
    string currency = 9;
    google.protobuf.Timestamp last_updated = 10;
    string cif = 11;
    string kode_perusahaan_efek = 12;
}

message GetRDNAccountResponse{
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated GetRDNAccountResponseData data = 4;
    Pagination pagination = 5;
}

message InsertRDNAccountRequest{
    RDNBankAccountData rdn_bank_account = 1;
    repeated uint64 role_id = 2;
}

message RDNBankAccountData {
    string access_level = 1;
    string account_alias = 2;
    string account_currency = 3;
    uint64 account_id = 4;
    string account_name = 5;
    string account_number = 6;
    string account_status = 7;
    string account_type = 8;
    uint64 company_id = 9;
    string company_name = 10;
    string company_code = 11;
    string country_name = 12;
    string country_code = 13;
    string cif = 14;
    string created_at = 15;
    string deleted_at = 16;
    string updated_at = 17;
    string product_code = 18;
    string status_code = 19;
    string kode_perusahaan_efek = 20;
}

message InsertRDNAccountResponse{
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}


message GlobalRequest {
    string request = 1;
}

message SubmitFileResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    SubmitFileResponseData data = 4;
}
  
message SubmitFileResponseData {
    string batch_id = 1 [json_name='batch_id'];
}
  
message CreateUploadRequest {
    string uploadKey = 1;
    string companyId = 2;
    string fileDescription = 3;
    string fileName = 4;
    string companyName = 5;
}

message FileUploadsData {
    FileDetailMinio fileInfo = 1;
    UploadAccountBatchs dataInfo = 2;
}

message FileDetailMinio {
    string file_name = 1;
    string size = 2;
    string extension = 3;
    string total_record = 4;
    MinioObjectInfo object_info = 5 [json_name = 'objectInfo'];
}

message MinioObjectInfo {
    string key = 1;
    string e_tag = 2 [json_name = 'eTag'];
    int64 size = 3;
    string bucket = 4;
    google.protobuf.Timestamp last_modified = 5 [json_name = 'lastModified'];
    string location = 6;
    string version_id = 7 [json_name = 'versionId'];
    google.protobuf.Timestamp expiration = 8;
    string expiration_rule_id = 9 [json_name = 'expirationRuleID'];
}

message GetListBatchResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated UploadAccountBatchData data = 4;
    Pagination pagination = 5;
}

message GetListBatchRequest {
    int32 limit = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "limit data per page. Default value '-1' for disable limit",
    }];
    int32 page = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "page number to get data. Default value '-1' for disable page",
    }];

    enum Sort {
        batchID = 0;
        companyName = 1;
        fileDescription = 2;
        fileFormat = 3;
        totalRecords = 4;
        totalDataInvalid = 5;
        totalDataValid = 6;
        createdAt = 7;
        status = 8;
        createdBy = 9;
    }

    Sort sort = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Order data by column name",
    }];

    enum direction {
        DESC = 0;
        ASC = 1;
    }

    direction dir = 4;
    UploadAccountBatchData filter = 5;
    string query = 6;
    string filterOr = 7;
    string downloadFileFormat = 8;
}

message UploadAccountBatchData {
    string batchID = 1;
    string companyName = 2;
    string fileDescription = 3;
    string fileFormat = 4;
    string totalRecords = 5;
    string totalDataValid = 6;
    string totalDatainvalid = 7;
    string createdAt = 8;
    string createdBy = 9;
    string status = 10;
    string fileName = 11;
    string companyID = 12;
    string errorMessage = 13;
}

message CheckFileNameRequest {    
    string filename = 1;
    string companyId = 2;
}

message CheckFileNameResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message GetDetailBatchRequest {    
    string batchId = 1;
}

message GetDetailBatchData {    
    string batchId = 1;
    string fileDescription = 2;
    string fileName = 3;
    int32 totalRecord = 4;
    int32 totalValid = 5;
    int32 totalInvalid = 6;
    string companyName = 7;
    string status = 8;
    string companyId = 9;
    StatusApproval statusApp = 10;
    string createdAt = 11;
    string createdBy = 12;
}

message StatusApproval {
    int32 total_complete = 1;
    int32 total_success = 2;
    int32 total_unsuccess = 3;
}

message GetDetailBatchResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    GetDetailBatchData data = 4;
}


message GetDetailAccountRequest {
    int32 limit = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "limit data per page. Default value '-1' for disable limit",
    }];
    int32 page = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "page number to get data. Default value '-1' for disable page",
    }];

    enum Sort {
        status = 0;
    }

    Sort sort = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Order data by column name",
    }];

    enum direction {
        DESC = 0;
        ASC = 1;
    }

    direction dir = 4;
    AccountDetailData filter = 5;
    string query = 6;
    string batchId = 7;
    string companyName = 8;
    string fileFormat = 9;
}

message GetDetailAccountResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated AccountDetailData data = 4;
    Pagination pagination = 5;
}

message AccountDetailData {
    string companyName = 1;
    string accountNumber = 2;
    string accountType = 3;
    repeated string alias = 4;
    string accessLevel = 5;
    string accountOwnership = 6;
    string action = 7;
    string errorMessage = 8;
    string status = 9;
    string createdAt = 10;
    string statusTask = 11;
}

message ApproveBatchAccountRequest {
    string batchId = 1;
    string action = 2;
    string companyId = 3;
    UserDataMD user = 4;
    string comment = 5;
    string reason = 6;
    string passcode = 7;
}

message ApproveBatchAccountResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message taskIds {
    string task_id = 1;
}

message UserDataMD {
    uint64 CompanyID = 1;
    string CompanyName = 2;
    string Username = 3;
    repeated uint64 RoleIDs = 4;
    string UserType = 5;
    uint64 UserID = 6;
}

message UpdateStatusAccountBatchRequest {
    string BatchId = 1;
    string Action = 2;
    string Task = 3;
    string AccountNumber = 4;
}

message UpdateStatusAccountBatchResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message StatusCount {
    int32 on_process = 1;
}

message MyAllowedAccountByProductsRequest {
    repeated uint64 role_ids = 1;
    uint64 user_id = 2;
    repeated string product_names = 3;
    uint64 company_id = 4;
    int32 limit = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "limit data per page. Default value '-1' for disable limit",
    }];
    int32 page = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "page number to get data. Default value '-1' for disable page",
    }];
}

message MyAllowedAccountByProductsResponse {
    repeated MyAllowedAccountByProductsResponseData data = 1;
}

message MyAllowedAccountByProductsResponseData {
    string product_name = 1;
    repeated uint64 account_ids = 2;
}

message ListAccountByRoleRPCWithCacheRequest {
    Account account = 1;
    repeated uint64 role_ids = 2;
    int32 limit = 3;
    int32 page = 4;
    string sort = 5;
    Direction dir = 6;
    string filter = 7;
    string query = 8;
    uint64 product_id = 9;
    repeated string account_types = 10;
}

message GetRDNAccountByRoleRPCRequest {
    repeated uint64 role_id = 1;
    Direction dir = 2;
    string filter = 3;
    int32 limit = 4;
    int32 page = 5;
    string process_id = 6;
    string query = 7;
    string sort = 8;
    RDNBankAccount rdn_bank_account = 9;
    repeated string account_types = 10;
    uint64 product_id = 11;
}

message GetRDNAccountByRoleRPCResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated GetRDNAccountByRoleRPCResponseData data = 4;
    Pagination pagination = 5;
}

message GetRDNAccountByRoleRPCResponseData {
    string access_level = 1;
    string account_alias = 2;
    string account_currency = 3;
    uint64 account_id = 4;
    string account_name = 5;
    string account_number = 6;
    string account_status = 7;
    string account_type = 8;
    uint64 company_id = 9;
    string company_name = 10;
    string company_code = 11;
    string country_name = 12;
    string country_code = 13;
    string cif = 14;
    google.protobuf.Timestamp created_at = 15;
    google.protobuf.Timestamp deleted_at = 16;
    google.protobuf.Timestamp updated_at = 17;
    string product_code = 18;
    string status_code = 19;
    uint64 role_id = 20;
}

// You coud add more request but you also required to adjust the query
message GetRDNAccountIdsGeneralQueryRequest {
    repeated uint64 role_ids = 1;
    uint64 product_id = 2;
    repeated string account_types = 3;
    RDNBankAccount rdn_bank_account = 4;
}

message GetRDNAccountIdsGeneralQueryResponse {
    uint64 account_id = 1;
    string account_name = 2;
    string account_number = 3;
    string company_name = 4;
    uint64 company_id = 5;
    string company_code = 6;
    string country_code = 7;
    string country_name = 8;
    string currency = 9;
    google.protobuf.Timestamp last_updated = 10;
    string cif = 11;
    string kode_perusahaan_efek = 12;
    uint64 role_id = 13;
}

message DeleteAccountByCompanyIdRPCRequest {
    uint64 company_id = 1;
}

message GetListAccountRolesRequest {
    uint64 role_id = 1;
    uint64 account_id = 2;
}

message GetListAccountRolesResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated AccountRole data = 4;
}

message CreateAccountTaskRPCRequest {
    AccountWrite data = 1;
    uint64 task_id = 2;
    bool is_draft = 3;
    bool is_skip_to_approved = 5;
    UserNonSession user = 6;
    bool is_trb = 7;
}

message UserNonSession {
    uint64 user_id = 1;
    uint64 company_id = 2;
    string company_name = 3;
    string user_name = 4;
    repeated uint64 role_ids = 5;
    string user_type = 6;
}


message GetListAccountRoleIDsRequest {
    uint64 account_id = 2;
}

message GetListAccountRoleIDsResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated uint64 role_ids = 4;
}

message SendNotifQueueRequest {
    repeated uint64 task_id = 1;
    string batch_id = 2;
    uint64 company_id = 3;
    enum NotifType {
        null_type = 0;
        common = 1;
        notif_cif_account = 2;
    }
    NotifType notif_type = 4;
    enum Actions {
        null_action = 0;
        send_approval = 1;
        update_send_approval = 2;
        approve = 3;
        reject = 4;
        rework = 5;
        delete = 6;
    }
    Actions action = 5;
}

message SendNotificationAccountRPCResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}
