syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "account-service/account_payload.proto";
import "google/api/httpbody.proto";
package account.service.v1;
option go_package = "./pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    security_definitions: {
        security: {
                key: "bearer"
                value: {
                type: TYPE_API_KEY
                in: IN_HEADER
                name: "Authorization"
                description: "Authentication token, prefixed by Bearer: Bearer <token>"
            }
        }
    }
    security: {
        security_requirement: {
            key: "bearer"
        }
    }
};

service ApiService {

    rpc HealthCheck(Empty) returns (HealthCheckResponse) {
        option (google.api.http) = {
            get: "/api/account/health"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { } // Disable security key
            summary: "Health Check"
            description: "This API for check health server"
        };
    };

    rpc GetUserApprovedAndCreated (Empty) returns (GetUserApprovedAndCreatedResponse){
        option (google.api.http) = {
            get: "/api/account/approved-created"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { } // Disable security key
            summary: "List user has been approved and  created account"
            description: "This API for get list user has been approved and created account"
        };
    }

    rpc DeleteAccountRoleByRoleID (DeleteAccountRoleRequest) returns (DeleteAccountRoleResponse){}

    rpc ListAccount(ListAccountRequest) returns (ListAccountResponse) {}

    rpc ListAccountHttp(ListAccountRequest) returns (ListAccountResponse) {
        option (google.api.http) = {
            get: "/api/account/data"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "List account data"
            description: "This API for get list account"
        };
    };

    rpc ListAccountByRole(ListAccountRequest) returns (ListAccountResponse) {
        option (google.api.http) = {
            get: "/api/account/dataByRole"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "List account data"
            description: "This API for get list account"
        };
    };

    

    rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);
    
    rpc DeleteAccount(CreateAccountRequest) returns (DeleteAccountResponse);

    rpc CreateAccountTask(CreateAccountTaskRequest) returns (CreateAccountTaskResponse) {
        option (google.api.http) = {
            post: "/api/account/task"
            body: "*"
            additional_bindings: [ 
                { 
                    post: "/api/account/task/edit/{taskID}" 
                    body: "*" 
                } 
            ]
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Create task account"
            description: "This API for create task account"
        };
    };

    rpc CreateAccountTaskMultiple(CreateAccountTaskBulkRequest) returns (CreateAccountTaskResponse) {
        option (google.api.http) = {
            post: "/api/account/task-bulk"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Create bulk task account"
            description: "This API for create bulk task account"
        };
    }

    rpc CreateAccountTaskMultipleNoParrent(CreateAccountTaskBulkRequest) returns (CreateAccountTaskMultipleResponse) {
        option (google.api.http) = {
            post: "/api/account/task-multiple"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Create bulk task account without parent"
            description: "This API for create bulk task account without parent"
        };
    }

    rpc ListAccountTask(ListAccountTaskRequest) returns (ListAccountTaskResponse) {
        option (google.api.http) = {
            get: "/api/account/task"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            summary: "get list account task"
            description: "This API for get list account task"
        };
    };

    rpc ListAccountTaskV2(ListAccountTaskV2Request) returns (ListAccountTaskResponse) {
        option (google.api.http) = {
            get: "/api/account/v2/task"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            summary: "get list account task"
            description: "This API for get list account task"
        };
    };

    rpc GetAccountTaskByID(GetAccountTaskByIDRequest) returns (ListAccountTaskResponse) {
        option (google.api.http) = {
            get: "/api/account/task/{taskID}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "get account task by id"
            description: "This API for get account task by id"
        };
    }

    rpc RequestDeleteAccountTask(GetAccountTaskByIDRequest) returns (ListAccountTaskResponse){
        option (google.api.http) = {
            post: "/api/account/task/delete/{taskID}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Delete request account task"
            description: "This API for deletes account task"
        };
    }

    rpc ValidateAccount(ValidateAccountRequest) returns (ValidateAccountResponse) {}

    rpc ValidateAccountHttp(ValidateAccountRequest) returns (ValidateAccountResponse) {
        option (google.api.http) = {
            post: "/api/account/validate"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            summary: "Validate account"
            description: "This API for Validate account"
        };
    }

    rpc ValidateAccountData(ValidateAccountRequest) returns (ValidateAccountDataResponse) {}
    rpc ValidateAccountDataWithoutSession(ValidateAccountWithoutSessionRequest) returns (ValidateAccountDataResponse){};

    rpc ValidateAccountDataHttp(ValidateAccountRequest) returns (ValidateAccountDataResponse) {
        option (google.api.http) = {
            post: "/api/account/validate/data"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            summary: "Validate account"
            description: "This API for Validate account"
        };
    }

//    rpc ValidateAccountByCIF(ValidateAccountByCIFRequest) returns (ValidateAccountByCIFResponse) {}

    rpc ValidateAccountByCIFHttp(ValidateAccountByCIFRequest) returns (ValidateAccountByCIFResponse) {
        option (google.api.http) = {
            post: "/api/account/validate-cif"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "Validate account by CIF"
            description: "This API for Validate account by CIF"
        };
    }

    rpc ValidateAccountByAccountNumber(ValidateAccountByAccountNumberRequest) returns (ValidateAccountByAccountNumberResponse) {}

    rpc ValidateAccountByAccountNumberHttp(ValidateAccountByAccountNumberRequest) returns (ValidateAccountByAccountNumberResponse) {
        option (google.api.http) = {
            post: "/api/account/validate-account-number"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "Validate account by account number"
            description: "This API for Validate account by account number"
        };
    }

    rpc AccountDetail(AccountDetailRequest) returns (AccountDetailResponse) {
        option (google.api.http) = {
            get: "/api/account/data/{accountID}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { } // Disable security key
            summary: "Account data by id"
            description: "This API for get account by id"
        };
    };

    rpc AccountDetailAlt(AccountDetailRequest) returns (AccountDetailResponse);

    rpc UpdateAccountRole(UpdateAccountRoleRequest) returns (UpdateAccountRoleResponse) {
        option (google.api.http) = {
            post: "/api/account/data/update-account"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Account data update account"
            description: "This API for get account update account"
        };
    };

    rpc UpdateAccountRoleRPC(UpdateAccountRoleRequest) returns (UpdateAccountRoleResponse) {}

    rpc DownloadListAccountTasks(FileListAccountTaskRequest) returns (google.api.HttpBody) {
        option (google.api.http) = {
            get: "/api/account/task/file/{fileFormat}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Download list account task"
            description: "This API for download list account task"
        };
    };


    rpc DownloadTemplate(FileListTemplateRequest) returns (google.api.HttpBody) {
        option (google.api.http) = {
            get: "/api/account/template/file/{fileFormat}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Download list account task"
            description: "This API for download list account task"
        };
    };

    rpc CekAccountAvaibility(CekAccountAvaibilityReq) returns (CekAccountAvaibilityRes) {
        option (google.api.http) = {
            post: "/api/account/available"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "Validate account"
            description: "This API for Validate account"
        };
    };    
    
    rpc CekAccountUsed(CekAccountAvaibilityReq) returns (CekAccountUsedRes) {
        option (google.api.http) = {
            post: "/api/account/used"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "Validate account"
            description: "This API for Validate account"
        };
    };

    rpc QlolaGetListAccountByUserId(AccountsByUserIdRequest) returns (QlolaListAccountBrigateResponse) {
        option (google.api.http) = {
            post: "/api/account/qlola/account-userid-list"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            tags: ["QLOLA"]
            summary: "Get List of accounts by user id"
            description: "This API is used for retrieving list of accounts related to user given its id"
        };
    };

    rpc QlolaGetBankAccountCompany(QlolaGetBankAccountCompanyRequest) returns (QlolaBankAccountCompanyBrigateResponse) {
        option (google.api.http) = {
            post: "/api/account/qlola/company-bank-account"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["QLOLA"]
            summary: "Get Bank Account of Company",
            description: "This API retrieves a bank account of company based on specified criteria."
        };
    }

    // [RPC Only]
    
    rpc ListAccountByRoleRPC(ListAccountByRoleRPCRequest) returns (ListAccountResponse);
    rpc ListAccountByRoleRPCWithCache(ListAccountByRoleRPCWithCacheRequest) returns (ListAccountResponse);

    rpc ListAccountRPC(ListAccountRequest) returns (ListAccountResponse);

    rpc ValidateAccountRPC(ValidateAccountRequest) returns (ValidateAccountResponse);

    rpc MyAllowedAccount(MyAllowedAccountRequest)returns (MyAllowedAccountResponse);
    rpc MyAllowedAccountByProducts(MyAllowedAccountByProductsRequest)returns (MyAllowedAccountByProductsResponse);

    // UKLN
    rpc ValidateAccountUklnDataHttp(ValidateAccountRequest) returns (ValidateAccountUklnDataResponse) {
        option (google.api.http) = {
            post: "/api/account/ukln/validate/data"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            summary: "Validate account ukln"
            description: "This API for Validate account ukln"
        };
    }
    rpc GetBrigateAccessToken(Empty) returns (GetTokenResponse) {
        option (google.api.http) = {
            get: "/api/account/ukln/brigate/token"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["UKLN"]
            summary: "Get Token"
            description: "This API for get token brigate access"
        };
    }

    rpc GetToken(Empty) returns (GetTokenResponse) {
        option (google.api.http) = {
            get: "/api/account/ukln/token"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["UKLN"]
            summary: "Get Token"
            description: "This API for get api ukln token"
        };
    };

    rpc InquiryAccount(InquiryAccountRequest) returns (InquiryAccountData) {
        option (google.api.http) = {
            post: "/api/account/ukln/inquiry"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["UKLN"]
            summary: "Inquiry Account"
            description: "This API for inquiry account"
        };
    }

    rpc ValidateInquiryAccount(ValidateAccountRequest) returns (ValidateAccountDataResponse){};

    // Direct Validate Account By Account Number
    rpc DirectValidateAccountByAccountNumberHttp(ValidateAccountByAccountNumberRequest) returns (ValidateAccountByAccountNumberResponse) {
        option (google.api.http) = {
            post: "/api/account/direct-validate-account-number"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: { }
            summary: "Direct Validate account by account number"
            description: "This API for Direct Validate account by account number"
        };
    }

    rpc ValidateAccountNameAlias (ValidateNameAliasAccountRequest) returns (ValidateNameAliasAccountResponse){
        option (google.api.http) = {
            get: "/api/account/validate-account-name-alias"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            summary: "Validate account name alias"
            description: "This API for Validate account name alis"
        };
    }


    // Direct Validate Account Number for Kliring
    rpc DirectValidateAccountByAccountNumber(ValidateAccountByAccountNumberRequest) returns (ValidateAccountByAccountNumberResponse);

    // RDN Account
    rpc GetRDNAccount(GetRDNAccountRequest) returns (GetRDNAccountResponse) {
        option (google.api.http) = {
            post: "/api/account/rdn"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: {} // Disable security key
            tags: ["RDN"]
            summary: "Get RDN Account"
            description: "This API for get RDN account"
        };
    }

    rpc GetRDNAccountByRole(GetRDNAccountByRoleRequest) returns (GetRDNAccountByRoleResponse) {
        option (google.api.http) = {
            post: "/api/account/rdn/role"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: {} // Disable security key
            tags: ["RDN"]
            summary: "Get RDN Account By Role"
            description: "This API for get RDN account by role"
        };
    }

    rpc GetRDNAccountByUserRole(GetRDNAccountByUserRoleRequest) returns (GetRDNAccountByUserRoleResponse) {
        option (google.api.http) = {
            post: "/api/account/rdn/list"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: {} // Disable security key
            tags: ["RDN"]
            summary: "Get RDN Account By Role Ids"
            description: "This API for get RDN account by role Ids"
        };
    }

    rpc ValidateAccountRDN(ValidateAccountRequest) returns (ValidateAccountResponse) {
        option (google.api.http) = {
            post: "/api/account/rdn/validate"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: {} // Disable security key
            tags: ["RDN"]
            summary: "Validate RDN account"
            description: "This API for Validate RDN account"
        };
    }

    rpc InsertRDNAccount(InsertRDNAccountRequest) returns (InsertRDNAccountResponse) {
        option (google.api.http) = {
            post: "/api/account/rdn/insert"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["RDN"]
            summary: "Get RDN Account By Role"
            description: "This API for get RDN account by role"
        };
    }

    rpc GetRDNAccountByRoleRPC(GetRDNAccountByRoleRPCRequest) returns (GetRDNAccountByRoleRPCResponse) {}
    // End RDN Account

    rpc CreateUpload(GlobalRequest) returns (SubmitFileResponse){
        option (google.api.http) = {
          post: "/api/account/mass-register/submit-file"
          body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          //security: {} // Disable security key
          summary: "Create Upload"
          description: "Create Upload"
        };
    }

    rpc GetListBatch(GetListBatchRequest) returns (GetListBatchResponse) {
        option (google.api.http) = {
            get: "/api/account/mass-register/list"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            summary: "get list account batch"
            description: "This API for get list account batch"
        };
    }

    rpc CheckDuplicateFilename(CheckFileNameRequest) returns (CheckFileNameResponse) {
        option (google.api.http) = {
            post: "/api/account/mass-register/duplicate-by-name"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Check Duplicate Filename"
            description: "This API for check duplicate filename"
        };
    }

    rpc GetDetailBatch(GetDetailBatchRequest) returns (GetDetailBatchResponse) {
        option (google.api.http) = {
            get: "/api/account/mass-register/detail-batch"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "get detail batch"
            description: "This API for get detail batch"
        };
    }

    rpc GetDetailAccount(GetDetailAccountRequest) returns (GetDetailAccountResponse) {
        option (google.api.http) = {
            get: "/api/account/mass-register/detail-account"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            summary: "get detail account"
            description: "This API for get detail account"
        };
    }

    rpc GetDetailAccountInvalid(GetDetailAccountRequest) returns (GetDetailAccountResponse) {
        option (google.api.http) = {
            get: "/api/account/mass-register/detail-account-invalid"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { }
            summary: "get detail account"
            description: "This API for get detail account"
        };
    }

    rpc ApproveBatchAccount(ApproveBatchAccountRequest) returns (ApproveBatchAccountResponse) {
        option (google.api.http) = {
            post: "/api/account/mass-register/approve"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Approve batch account"
            description: "m API for approve batch account"
        };
    };

    rpc CreateAccountBatchTask(ApproveBatchAccountRequest) returns (ApproveBatchAccountResponse) {
        option (google.api.http) = {
            post: "/api/account/mass-register/create-task"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Approve batch account"
            description: "m API for approve batch account"
        };
    };

    rpc DeleteAccountBatch(GetDetailBatchRequest) returns (ApproveBatchAccountResponse){
        option (google.api.http) = {
            post: "/api/account/mass-register/delete-batch"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Approve batch account"
            description: "m API for approve batch account"
        };
    };

    rpc UpdateStatusAccountBatch(UpdateStatusAccountBatchRequest) returns (UpdateStatusAccountBatchResponse){
        option (google.api.http) = {
            post: "/api/account/mass-register/update-status"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Update status batch account"
            description: "m API for update status batch account"
        };
    };

    rpc DownloadAccountBatchFile(GetListBatchRequest) returns (google.api.HttpBody){
        option (google.api.http) = {
            get: "/api/account/mass-register/download-file"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Download batch account"
            description: "m API for download batch account"
        };

    };
    rpc DownloadDetailAccountBatchFile(GetDetailAccountRequest) returns (google.api.HttpBody){
        option (google.api.http) = {
            get: "/api/account/mass-register/download-detail-file"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            // security: { } // Disable security key
            summary: "Download detail batch account"    
            description: "m API for download detail batch account"
        };
    };

    rpc CreateAccountTaskRPC(CreateAccountTaskRPCRequest) returns (CreateAccountTaskResponse){};

    rpc DeleteAccountByCompanyIdRPC(DeleteAccountByCompanyIdRPCRequest) returns (DeleteAccountRoleResponse){};

    // Start Account Roles

    rpc GetListAccountRoles(GetListAccountRolesRequest) returns (GetListAccountRolesResponse){};
    
    // End Account Roles

    rpc SendNotificationAccountRPC(SendNotifQueueRequest) returns (SendNotificationAccountRPCResponse){};

}

