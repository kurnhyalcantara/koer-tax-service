syntax = "proto3";

import "google/api/annotations.proto";
// import "google/api/httpbody.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// import "queue_core.proto";
// import "queue_gorm_db.proto";
import "queue-service/queue_payload.proto";

package queue.service.v1;
option go_package = "./pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    security_definitions: {
        security: {
                key: "bearer"
                value: {
                type: TYPE_API_KEY
                in: IN_HEADER
                name: "Authorization"
                description: "Authentication token, prefixed by Bearer: Bearer <token>"
            }
        }
    }
    security: {
        security_requirement: {
            key: "bearer"
        }
    }
};

service ApiService {

    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {
        option (google.api.http) = {
            get: "/api/queue/health"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            summary: "Health Check"
            description: "This API for check health server"
        };
    };

    rpc PublishJob(PublishJobRequest) returns (PublishJobResponse) {};

    rpc PublishPayrollJob(PublishPayrollJobRequest) returns (PublishPayrollJobResponse) {};

    rpc PublishBulkTransferJob(PublishBulkTransferJobRequest) returns (PublishBulkTransferJobResponse) {};

    rpc PublishDepositoJob(PublishDepositoJobRequest) returns (PublishDepositoJobResponse) {};

    rpc PublishLiquidityJob(PublishLiquidityJobRequest) returns (PublishLiquidityJobResponse) {};

    rpc PublishMpnJob(PublishMpnJobRequest) returns (PublishMpnJobResponse) {};

    rpc PublishReportGenerateJob(PublishReportGenerateRequest) returns (PublishReportGenerateResponse) {};

}
