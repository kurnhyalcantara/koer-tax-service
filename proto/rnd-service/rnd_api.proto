syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "rnd-service/rnd_payload.proto";

package rnd.service.v1;
option go_package = "./pb";

service RndService {

    rpc HealthCheck(google.protobuf.Empty) returns (HealthCheckResponse) {
        option (google.api.http) = {
            get: "/api/rnd/health"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["Utility"]
            summary: "Health Check"
            description: "This API for check server's health"
        };
    };

    // #region Process Queue

    rpc RabbitMqProcess (RabbitMqProcessRequest) returns (GeneralBodyResponse){
        option (google.api.http) = {
            post: "/api/rnd/rabbitmq"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["Rabbit MQ"]
            summary: "Rabbit MQ High Availability Process"
            description: "This API for process rabbit mq queue-service high availability"
        };
    };

    // #endregion

    rpc InsertCounter(google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/rnd/insert-counter"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["Utility"]
            summary: "Insert Counter"
            description: "This API for insert counter"
        };
    };
    
}