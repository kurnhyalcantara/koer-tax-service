syntax = "proto3";
package account_summary.service.v1;
option go_package = "./pb";
import "protoc-gen-openapiv2/options/annotations.proto";
// import "google/protobuf/timestamp.proto";

message GetSummaryAccountRequest {
    string corporate_code = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Corporate code, ex: CMSX123456789",
	}];
    string cif_no = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Cif no, ex: 0",
	}];
    string norek_varchar = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Norek Varchar, ex: 0",
	}];
    string start_date = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Format start date is YYYY-MM-DD, ex: 2020-01-01",
	}];
    string end_date = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Format end date is YYYY-MM-DD, ex: 2020-01-01",
	}];
    repeated string bank = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Bank, ex: ['BRI']",
	}];
	string account_type = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Account Type, ex: ['LN', 'CA', 'SA']",
	}];
	string currency = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Currency, ex: ['IDR']",
	}];
}

  message DownloadSummaryAccountRequest {
	string corporate_code = 1;
    string cif_no = 2;
    string norek_varchar = 3;
    string start_date = 4;
    string end_date = 5;
    repeated string bank = 6;
	string account_type = 7;
	string currency = 8;
	FormatTemplate fileFormat = 9;
  }


  enum FormatTemplate {
	null = 0;
	csv = 1;
	xls = 2;
	xlsx = 3;
	pdf = 4;
	doc = 5;
	docx = 6;
  }

  enum TaskStep {
	AllStep = 0;
	Maker = 1;
	Checker = 2;
	Signer = 3;
	Releaser = 4;
  }

  enum TaskStatus {
	AllStatus = 0;
	Pending = 1;
	Draft = 2;
	Returned = 3;
	Approved = 4;
	Rejected = 5;
	DeleteRequest = 6;
	Deleted = 7;
  }
  
  enum Direction {
	DESC = 0;
	ASC = 1;
  }

message GetBrifizTokenResponse {
	bool error = 1;
    uint32 code = 2;
    string message = 3;
	string token = 4;
}

message GetSummaryAccountResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
	repeated AccountSummary data = 4;
	string lastUpdate = 5;
	uint32 total_currency = 6;
	uint64 total_account = 7;
	uint32 total_account_type = 8;
	repeated Currencies currencies = 9;
}

message Currencies {
	string currency = 1;
	double grand_total = 2;
}

message AccountSummary {
	uint32 no = 1;
	string country = 2;
	double amount = 3;
	string account_type = 4;
	repeated DetailAccountSummary detail = 5;
}

message DetailAccountSummary {
	string bank_name = 1;
	repeated AccountSummaryData data = 2;
	double debit_total = 3;
	double credit_total = 4;
	double ending_balance_total = 5;
}

message AccountSummaryData {
	string account_number = 1;
    string account_name = 2;
    string debit = 3;
    string credit = 4;
    double ending_balance = 5;
	string currency = 6;
	string account_type = 7;
	string no_bilyet = 8;
	string amount = 9;
	string tenor = 10;
	string placement_date = 11;
	string due_date = 12;
	string interest = 13;
	string deposito_type = 14;
	string deposito_balance = 15;
	string interest_paid = 16;
	string status = 17;
	string status_indicator = 18;
	string branch_desc = 19;
}

// data on table
message GlobalAccountSummaryData {
	string account_number = 1;
	string account_name = 2;
	string account_type = 3;
	string currency = 4;
	string ledger_balance = 5;
	string available_balance = 6;
	string hold_balance = 7;
	int64 index = 8;
}

// detail global account summary
message DetailGlobalAccountSummaryData{
	string company_name = 1;
	string account_number = 2;
	string account_name = 3;
	string account_currency = 4;
	string account_type = 5;
	string account_opening_date = 6;
	string bank_branch = 7;
	string account_status = 8;
	string opening_ledger_balance = 9;
	string account_balance = 10;
	string available_balance = 11;
	string hold_balance = 12;
	string total_credit_amount = 13;
	string total_debit_amount = 14;
	uint64 index = 15;
}

message GetDetailGlobalAccountSummaryResponse{
	DetailGlobalAccountSummaryData data = 1;
	uint32 code = 2;
	bool error = 3;
	string message = 4;
}

message DetailGlobalAccountSummaryRequest{
	int64 index = 1;
}

// summary of all of data
message SummaryGlobalAccountData{
	string summary_code = 1;
	string summary_name = 2;
	string total_available = 3;
}

message GlobalAccountSummaryPagination{
	int32 limit = 1;
	int32 page = 2;
	int32 total_rows = 3;
	int32 total_pages = 4;
}

message GetGlobalAccountSummaryResponse{
	repeated string currencies = 1;
	repeated SummaryGlobalAccountData summary = 2;
	repeated GlobalAccountSummaryData data = 3;
	GlobalAccountSummaryPagination pagination = 4;
	uint32 code = 5;
	bool error = 6;
	string message = 7;
}

message GetGlobalAccountSummaryRequest{
	int32 limit = 1;
	int32 page = 2;
	string query = 3;
	string sort = 4;
	string dir = 5;
	string currency = 6;
	string summary_code = 7;
}

// download global account summary
message DownloadGlobalSummaryAccountRequest {
	int32 limit = 1;
	int32 page = 2;
	string query = 3;
	string sort = 4;
	string dir = 5;
	string currency = 6;
	string summary_code = 7;
	FormatTemplate fileFormat = 8;
}

message DataHubRequest{
	string corporate_code = 1;
	string cif_no = 2;
	string norek_varchar = 3;
	string tgl_awal = 4;
	string tgl_akhir = 5;
}

message GlobalAccountSummaryDownload {
	repeated GlobalAccountSummaryDownloadOuter data = 1;
}

message GlobalAccountSummaryDownloadOuter {
	uint32 no = 1;
	string country = 2;
	double amount = 3;
	string account_type = 4;
	repeated GlobalAccountSummaryDownloadInner detail = 5;
	string currency = 6;
}

message GlobalAccountSummaryDownloadInner{
	string bank_name = 1;
	repeated DetailGlobalAccountSummaryData data = 2;
	double debit_total = 3;
	double credit_total = 4;
	double available_balance_total = 5;
}

