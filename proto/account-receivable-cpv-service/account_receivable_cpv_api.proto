syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/Empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "account-receivable-cpv-service/account_receivable_cpv_payload.proto";

package account_receivable_cpv.service.v1;
option go_package = "./pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    security_definitions: {
        security: {
                key: "bearer"
                value: {
                type: TYPE_API_KEY
                in: IN_HEADER
                name: "Authorization"
                description: "Authentication token, prefixed by Bearer: Bearer <token>"
            }
        }
    }
    security: {
        security_requirement: {
            key: "bearer"
        }
    }
};

service AccountReceivableCpvService {

    rpc HealthCheck(google.protobuf.Empty) returns (HealthCheckResponse) {
        option (google.api.http) = {
            get: "/api/account-receivable/cpv/health"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["Utility"]
            summary: "Health Check"
            description: "This API for check server's health"
        };
    };

    // #region Process CPV

    rpc ProcessCpv (ProcessCpvRequest) returns (GeneralBodyResponse){
        option (google.api.http) = {
            post: "/api/account-receivable/cpv"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["Counter Party Validation"]
            summary: "Process Counter Party Validation"
            description: "This API for process counter party validation"
        };
    };

    // #endregion
    
}