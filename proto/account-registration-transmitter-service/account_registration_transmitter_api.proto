syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";
import "account-registration-transmitter-service/account_registration_transmitter_payload.proto";
import "google/api/httpbody.proto";



package account_registration_transmitter.service.v1;
option go_package = "./pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
};

service ApiService {

  rpc HealthCheck(google.protobuf.Empty) returns (HealthCheckResponse) {
    option (google.api.http) = {
      get: "/api/account-registration/health"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {} // Disable security key
      summary: "Health Check"
      description: "This API for check server's health"
    };
  };

  rpc CreateAccountRabbit(CreateAccountRequest) returns (CreateAccountResponse) {}

}

message ResCacheReq {
  string rcode = 1;
}

message ResCacheRes {
  string response = 1;
  string error = 2;
  string responseCode = 3;
  string status = 4;
}